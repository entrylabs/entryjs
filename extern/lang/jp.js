var Lang = {};
Lang.category = {
    "name": "en"
};
Lang.type = "jp";
Lang.fallbackType = "en";
Lang.ko = "한국어";
Lang.en = "English";
Lang.jp = "日本語";
Lang.vn = "tiếng Việt";
Lang.Command = {
    "1": "장면 추가하기",
    "2": "장면 삭제하기",
    "3": "장면 이름 수정",
    "4": "장면 순서 변경",
    "5": "장면 선택",
    "101": "ブロックスレッドを追加する",
    "102": "ブロックスレッドを削除する",
    "103": "ブロックを削除する",
    "104": "ブロックを復旧する",
    "105": "ブロックを挿入する",
    "106": "ブロックを分離する",
    "107": "ブロックを移動する",
    "108": "ブロックをコピーする",
    "109": "ブロックのコピーを取り消す",
    "110": "スクロール",
    "111": "ブロックフィールド値を修正",
    "117": "ブロックスレッドを追加する",
    "118": "ブロックを挿入する",
    "119": "ブロックを移動する",
    "120": "ブロックを分離する",
    "121": "ブロックを移動する",
    "122": "ブロックを挿入する",
    "123": "ブロックを挿入する",
    "201": "オブジェクトを選択する",
    "202": "오브젝트 수정 버튼 클릭",
    "203": "오브젝트 그림 추가",
    "204": "오브젝트 그림 삭제",
    "205": "오브젝트 소리 추가",
    "206": "오브젝트 소리 삭제",
    "207": "오브젝트 이름 수정",
    "208": "오브젝트 추가",
    "209": "오브젝트 삭제",
    "210": "오브젝트 추가 버튼 클릭",
    "211": "오브젝트 x 수정",
    "212": "오브젝트 y 수정",
    "213": "오브젝트 size 수정",
    "214": "오브젝트 방향 수정",
    "215": "오브젝트 이동 방향 수정",
    "216": "오브젝트 회전방식 수정",
    "217": "엔터티 모델 동기화",
    "301": "do",
    "302": "undo",
    "303": "redo",
    "401": "図を修正する",
    "402": "図の修正を取り消す",
    "403": "図を修正する",
    "404": "図の修正を取り消す",
    "405": "글상자 수정",
    "501": "スタート",
    "502": "停止する",
    "601": "コンテナーオブジェクトを選択する",
    "701": "モード変換 ",
    "702": "模様追加ボタンをクリック",
    "703": "サウンド追加ボタンをクリック",
    "801": "変数属性ウィンドウフィルターを選択する",
    "802": "変数を追加するボタンをクリック",
    "803": "変数を追加する",
    "804": "変数を削除する",
    "805": "変数名設定",
    "806": "신호 이름 설정",
    "807": "신호 추가",
    "808": "신호 삭제",
    "809": "변수 스코프 정하기",
    "810": "변수 글로벌 체크",
    "811": "변수 보이기 체크",
    "812": "변수 기본값 설정",
    "813": "변수 슬라이드로 체크",
    "814": "변수 최솟값 정하기",
    "815": "변수 최댓값 정하기",
    "816": "리스트 추가 버튼 클릭",
    "817": "리스트 추가",
    "818": "리스트 삭제",
    "819": "리스트 이름 정하기",
    "820": "리스트 스코프 정하기",
    "821": "리스트 글로벌 체크",
    "822": "리스트 보이기 체크",
    "823": "리스트 길이 변경",
    "824": "리스트 기본값 설정",
    "825": "메세지 수정 enable",
    "826": "변수 수정 enable",
    "827": "리스트 수정 enable",
    "828": "변수 이름 정하기",
    "829": "리스트 이름 정하기",
    "900": "모달 닫기",
    "1001": "함수 생성 시작",
    "1002": "함수 수정 시작",
    "1003": "함수 수정 취소",
    "1004": "함수 생성",
    "1005": "함수 업데이트"
};
Lang.CommandTooltip = {
    "101": "ブロックスレッドを追加する",
    "102": "ブロックスレッドを削除する",
    "103": "ブロックを削除する",
    "104": "ブロックを復旧する",
    "105": "コードを分離する$$コードを連結する@@このコードの一番上にあるブロックを掴んで分離しドラッグします。$$ここにコードを連結します。$$ここにブロックの左端を挿入します。",
    "106": "ブロックを分離する",
    "107": "ブロックを移動する",
    "108": "ブロックをコピーする",
    "109": "ブロックのコピーを取り消す",
    "110": "スクロール",
    "111": "ブロックフィールド値を修正@@値を入力するためここをクリックします。$$選択肢をクリックします。$$選択肢をクリックします。$$&value&を入力します。$$&value&を選択します。$$キーボード &value&を押します。",
    "117": "ブロックスレッドを追加する",
    "118": "ブロックを連結する@@ここにブロックを連結します。$$ここにブロックの左端を挿入します。",
    "119": "ブロックをインポートする@@空いている場所にブロックをドラッグ＆ドロップします。",
    "120": "ブロックを分離する$$ブロックを削除する@@必要のないコードを<b>ゴミ箱</b>にドラッグします。$$ここにコードを捨てます。",
    "121": "ブロックを移動する$$ブロックを削除する@@必要のないコードを<b>ゴミ箱</b>にドラッグします。$$ここにコードを捨てます。",
    "122": "ブロックを連結する@@ここにブロックを連結します。$$ここにブロックの左端を挿入します。",
    "123": "コードを分離する$$コードを連結する@@このコードの一番上にあるブロックを掴んで分離しドラッグします。$$ここにコードを連結します。$$ここにブロックの左端を挿入します。",
    "201": "オブジェクトを削除する",
    "301": "do",
    "302": "undo",
    "303": "redo",
    "401": "図を修正する",
    "402": "図の修正を取り消す",
    "403": "図を修正する",
    "404": "図の修正を取り消す",
    "501": "実行する@@<b>[スタート]</b>を押します。",
    "502": "停止する@@<b>[停止する]</b>を押します。",
    "601": "コンテナーオブジェクトを削除する",
    "701": "モード変換 ",
    "702": "模様を追加する@@<b>模様追加</b>をクリックします。",
    "703": "サウンドを追加する@@<b>サウンド追加</b>をクリックします。",
    "801": "変数属性ウィンドウフィルターを選択する",
    "802": "変数を追加する@@<b>[変数追加]</b>をクリックします。",
    "803": "変数を追加する@@<b>[確認]</b>をクリックします。",
    "804": "変数を削除する@@このボタンを押して変数を削除します。",
    "805": "変数名設定",
    "1101": "サウンドを追加する@@<b>サウンド追加</b>をクリックします。"
};
Lang.Blocks = {
    "download_guide": "• 接続ガイドをダウンロード",
    "dictionary": "dictionary",
    "ai_utilize": "AI",
    "date_yesterday": "昨日",
    "date_today": "今日",
    "date_tomorrow": "明日",
    "date_after_2_days": "明後日",
    "date_after_3_days": "明々後日",
    "date_after_4_days": "４日後",
    "date_after_5_days": "５日後",
    "date_after_6_days": "６日後",
    "location_entire": "全体",
    "location_seoul": "ソウル",
    "location_seoul_jongno_gu": "鍾路区",
    "location_seoul_jung_gu": "中区",
    "location_seoul_yongsan_gu": "龍山区",
    "location_seoul_seongdong_gu": "城東区",
    "location_seoul_gwangjin_gu": "広津区",
    "location_seoul_dongdaemun_gu": "東大門区",
    "location_seoul_jungnang_gu": "中浪区",
    "location_seoul_seongbuk_gu": "城北区",
    "location_seoul_gangbuk_gu": "江北区",
    "location_seoul_dobong_gu": "道峰区",
    "location_seoul_nowon_gu": "蘆原区",
    "location_seoul_eunpyeong_gu": "恩平区",
    "location_seoul_seodaemun_gu": "西大門区",
    "location_seoul_mapo_gu": "麻浦区",
    "location_seoul_yangcheon_gu": "陽川区",
    "location_seoul_gangseo_gu": "江西区",
    "location_seoul_guro_gu": "九老区",
    "location_seoul_geumcheon_gu": "衿川区",
    "location_seoul_yeongdeungpo_gu": "永登浦区",
    "location_seoul_dongjak_gu": "銅雀区",
    "location_seoul_gwanak_gu": "冠岳区",
    "location_seoul_seocho_gu": "瑞草区",
    "location_seoul_gangnam_gu": "江南区",
    "location_seoul_songpa_gu": "松坡区",
    "location_seoul_gangdong_gu": "江東区",
    "location_busan": "プサン",
    "location_busan_jung_gu": "中区",
    "location_busan_seo_gu": "西区",
    "location_busan_dong_gu": "東区",
    "location_busan_yeongdo_gu": "影島区",
    "location_busan_busanjin_gu": "鎮区",
    "location_busan_dongnae_gu": "東莱区",
    "location_busan_nam_gu": "南区",
    "location_busan_buk_gu": "北区",
    "location_busan_haeundae_gu": "海雲台区",
    "location_busan_saha_gu": "沙下区",
    "location_busan_geumjeong_gu": "金井区",
    "location_busan_gangseo_gu": "江西区",
    "location_busan_yeonje": "蓮堤区",
    "location_busan_suyeong_gu": "水営区",
    "location_busan_sasang_gu": "沙上区",
    "location_busan_gijang": "機張郡",
    "location_daegu": "テグ",
    "location_daegu_jung_gu": "中区",
    "location_daegu_dong_gu": "東区",
    "location_daegu_seo_gu": "西区",
    "location_daegu_nam_gu": "南区",
    "location_daegu_buk_gu": "北区",
    "location_daegu_suseong_gu": "寿城区",
    "location_daegu_dalseo_gu": "達西区",
    "location_daegu_dalseong": "達城郡",
    "location_incheon": "インチョン",
    "location_incheon_jung_gu": "中区",
    "location_incheon_dong_gu": "東区",
    "location_incheon_nam_gu": "南区",
    "location_incheon_yeonsu_gu": "延寿区",
    "location_incheon_namdong_gu": "南洞区",
    "location_incheon_bupyeong_gu": "富平区",
    "location_incheon_gyeyang_gu": "桂陽区",
    "location_incheon_seo_gu": "西区",
    "location_incheon_ganghwa": "江華郡",
    "location_incheon_ongjin_gun": "甕津郡",
    "location_gwangju": "クヮンジュ",
    "location_gwangju_dong_gu": "東区",
    "location_gwangju_seo_gu": "西区",
    "location_gwangju_nam_gu": "南区",
    "location_gwangju_buk_gu": "北区",
    "location_gwangju_gwangsan_gu": "光山区",
    "location_daejeon": "テジョン",
    "location_daejeon_dong_gu": "東区",
    "location_daejeon_jung_gu": "中区",
    "location_daejeon_seo_gu": "西区",
    "location_daejeon_yuseong_gu": "儒城区",
    "location_daejeon_daedeok_gu": "大徳区",
    "location_ulsan": "ウルサン",
    "location_ulsan_jung_gu": "中区",
    "location_ulsan_nam_gu": "南区",
    "location_ulsan_dong_gu": "東区",
    "location_ulsan_buk_gu": "北区",
    "location_ulsan_ulju": "蔚州郡",
    "location_sejong": "セジョン",
    "location_gyeonggi": "キョンギ道",
    "location_gyeonggi_suwon_si": "水原市",
    "location_gyeonggi_seongnam": "城南市",
    "location_gyeonggi_uijeongbu": "議政府市",
    "location_gyeonggi_anyang_si": "安養市",
    "location_gyeonggi_bucheon_si": "富川市",
    "location_gyeonggi_gwangmyeong_si": "光明市",
    "location_gyeonggi_pyeongtaek_si": "平沢市",
    "location_gyeonggi_dongducheon_si": "東豆川市",
    "location_gyeonggi_ansan_si": "安山市",
    "location_gyeonggi_goyang_si": "高陽市",
    "location_gyeonggi_gwacheon_si": "果川市",
    "location_gyeonggi_guri": "九里市",
    "location_gyeonggi_namyangju_si": "南楊州市",
    "location_gyeonggi_osan": "烏山市",
    "location_gyeonggi_siheung": "始興市",
    "location_gyeonggi_gunpo_si": "軍浦市",
    "location_gyeonggi_uiwang_si": "義王市",
    "location_gyeonggi_hanam": "河南市",
    "location_gyeonggi_yongin_si": "龍仁市",
    "location_gyeonggi_paju": "坡州市",
    "location_gyeonggi_icheon": "利川市",
    "location_gyeonggi_anseong_si": "安城市",
    "location_gyeonggi_gimpo": "金浦市",
    "location_gyeonggi_hwaseong_si": "華城市",
    "location_gyeonggi_gwangju": "光州市",
    "location_gyeonggi_yangju_si": "揚州市",
    "location_gyeonggi_pocheon": "抱川市",
    "location_gyeonggi_yeoju": "驪州市",
    "location_gyeonggi_yeoncheon_gun": "漣川郡",
    "location_gyeonggi_gapyeong_gun": "加平郡",
    "location_gyeonggi_yangpyeong": "楊平郡",
    "location_gangwon": "カンウォン道",
    "location_gangwon_chuncheon": "春川市",
    "location_gangwon_wonju": "原州市",
    "location_gangwon_gangneung_si": "江陵市",
    "location_gangwon_donghae": "東海市",
    "location_gangwon_taebaek_si": "太白市",
    "location_gangwon_sokcho": "束草市",
    "location_gangwon_samcheok_si": "三陟市",
    "location_gangwon_hongcheon": "洪川郡",
    "location_gangwon_hoengseong_gun": "横城郡",
    "location_gangwon_yeongwol_gun": "寧越郡",
    "location_gangwon_pyeongchang": "平昌郡",
    "location_gangwon_jeongseon": "旌善郡",
    "location_gangwon_cheolwon": "鉄原郡",
    "location_gangwon_hwacheon": "華川郡",
    "location_gangwon_yanggu": "楊口郡",
    "location_gangwon_inje": "麟蹄郡",
    "location_gangwon_goseong": "高城郡",
    "location_gangwon_yangyang": "襄陽郡",
    "location_chungcheongbuk": "チュンチョンブク道",
    "location_chungcheongbuk_cheongju": "清州市",
    "location_chungcheongbuk_chungju": "忠州市",
    "location_chungcheongbuk_jecheon": "堤川市",
    "location_chungcheongbuk_boeun": "報恩郡",
    "location_chungcheongbuk_okcheon": "沃川郡",
    "location_chungcheongbuk_yeongdong": "永同郡",
    "location_chungcheongbuk_jeungpyeong": "曽坪郡",
    "location_chungcheongbuk_jincheon": "鎮川郡",
    "location_chungcheongbuk_goesan": "槐山郡",
    "location_chungcheongbuk_eumseong": "陰城郡",
    "location_chungcheongbuk_danyang": "丹陽郡",
    "location_chungcheongnam": "チュンチョンナム道",
    "location_chungcheongnam_cheonan": "天安市",
    "location_chungcheongnam_gongju": "公州市",
    "location_chungcheongnam_boryeong": "保寧市",
    "location_chungcheongnam_asan": "牙山市",
    "location_chungcheongnam_seosan": "瑞山市",
    "location_chungcheongnam_nonsan": "論山市",
    "location_chungcheongnam_gyeryong": "鶏龍市",
    "location_chungcheongnam_dangjin": "唐津市",
    "location_chungcheongnam_geumsan": "錦山郡",
    "location_chungcheongnam_buyeo": "扶余郡",
    "location_chungcheongnam_seocheon": "舒川郡",
    "location_chungcheongnam_cheongyang": "青陽郡",
    "location_chungcheongnam_hongseong": "洪城郡",
    "location_chungcheongnam_yesan": "礼山郡",
    "location_chungcheongnam_taean": "泰安郡",
    "location_jeollabuk": "チョンラブク道",
    "location_jeollabuk_jeonju": "全州市",
    "location_jeollabuk_gunsan_si": "群山市",
    "location_jeollabuk_iksan": "益山市",
    "location_jeollabuk_jeongeup": "井邑市",
    "location_jeollabuk_namwon": "南原市",
    "location_jeollabuk_gimje_si": "金堤市",
    "location_jeollabuk_wanju": "完州郡",
    "location_jeollabuk_jinan": "鎮安郡",
    "location_jeollabuk_muju": "茂朱郡",
    "location_jeollabuk_jangsu": "長水郡",
    "location_jeollabuk_imsil": "任實郡",
    "location_jeollabuk_sunchang": "淳昌郡",
    "location_jeollabuk_gochang": "高敞郡",
    "location_jeollabuk_buan": "扶安郡",
    "location_jeollanam": "チョンラナム道",
    "location_jeollanam_mokpo": "木浦市",
    "location_jeollanam_yosu": "麗水市",
    "location_jeollanam_suncheon_si": "順天市",
    "location_jeollanam_naju": "羅州市",
    "location_jeollanam_gwangyang_si": "光陽市",
    "location_jeollanam_damyang": "潭陽郡",
    "location_jeollanam_gokseong": "谷城郡",
    "location_jeollanam_gurye": "求礼郡",
    "location_jeollanam_goheung": "高興郡",
    "location_jeollanam_boseong": "宝城郡",
    "location_jeollanam_hwasun": "和順郡",
    "location_jeollanam_jangheung": "長興郡",
    "location_jeollanam_gangjin": "康津郡",
    "location_jeollanam_haenam": "海南郡",
    "location_jeollanam_yeongam": "霊岩郡",
    "location_jeollanam_jindo": "務安郡",
    "location_jeollanam_muan": "咸平郡",
    "location_jeollanam_hampyeong": "霊光郡",
    "location_jeollanam_yeonggwang": "長城郡",
    "location_jeollanam_jangseong": "莞島郡",
    "location_jeollanam_wando": "珍島郡",
    "location_jeollanam_sinan": "新安郡",
    "location_gyeongsangbuk": "キョンサンブク道",
    "location_gyeongsangbuk_pohang_si": "浦項市",
    "location_gyeongsangbuk_gyeongju_si": "慶州市",
    "location_gyeongsangbuk_gimcheon_si": "金泉市",
    "location_gyeongsangbuk_andong_si": "安東市",
    "location_gyeongsangbuk_gumi_si": "亀尾市",
    "location_gyeongsangbuk_yeongju_si": "栄州市",
    "location_gyeongsangbuk_yeongcheon_si": "永川市",
    "location_gyeongsangbuk_sangju_si": "尚州市",
    "location_gyeongsangbuk_mungyeong_si": "聞慶市",
    "location_gyeongsangbuk_gyeongsan_si": "慶山市",
    "location_gyeongsangbuk_gunwi": "軍威郡",
    "location_gyeongsangbuk_uiseong": "義城郡",
    "location_gyeongsangbuk_cheongsong": "青松郡",
    "location_gyeongsangbuk_goryong": "英陽郡",
    "location_gyeongsangbuk_yeongdeok": "盈徳郡",
    "location_gyeongsangbuk_cheongdo": "清道郡",
    "location_gyeongsangbuk_golyeong": "高靈郡",
    "location_gyeongsangbuk_seongju": "星州郡",
    "location_gyeongsangbuk_chilgok": "漆谷郡",
    "location_gyeongsangbuk_yecheon": "醴泉郡",
    "location_gyeongsangbuk_bonghwa": "奉化郡",
    "location_gyeongsangbuk_uljin": "蔚珍郡",
    "location_gyeongsangbuk_ulleung": "鬱陵郡",
    "location_gyeongsangnam": "キョンサンナム道",
    "location_gyeongsangnam_changwon_si": "昌原市",
    "location_gyeongsangnam_jinju": "晋州市",
    "location_gyeongsangnam_tongyeong_si": "統営市",
    "location_gyeongsangnam_sacheon_si": "泗川市",
    "location_gyeongsangnam_gimhae_si": "金海市",
    "location_gyeongsangnam_miryang_si": "密陽市",
    "location_gyeongsangnam_geoje_si": "巨済市",
    "location_gyeongsangnam_yangsan_si": "梁山市",
    "location_gyeongsangnam_uiryeong": "宜寧郡",
    "location_gyeongsangnam_haman": "咸安郡",
    "location_gyeongsangnam_changnyeong": "昌寧郡",
    "location_gyeongsangnam_goseong": "高城郡",
    "location_gyeongsangnam_namhae": "南海郡",
    "location_gyeongsangnam_hadong": "河東郡",
    "location_gyeongsangnam_sancheong": "山清郡",
    "location_gyeongsangnam_hamyang": "咸陽郡",
    "location_gyeongsangnam_geochang": "居昌郡",
    "location_gyeongsangnam_hapcheon": "陜川郡",
    "location_jeju": "チェジュ",
    "location_jeju_jeju_si": "済州市",
    "location_jeju_seogwipo": "西帰浦市",
    "EXPANSION_WEATHER_sunny": "快晴",
    "EXPANSION_WEATHER_partly_cloudy": "晴れぎみ",
    "EXPANSION_WEATHER_mostly_cloudy": "くもりぎみ",
    "EXPANSION_WEATHER_cloudy": "くもり",
    "EXPANSION_WEATHER_rainy": "雨",
    "EXPANSION_WEATHER_sleet": "みぞれ",
    "EXPANSION_WEATHER_snowy": "雪",
    "EXPANSION_WEATHER_finedust_good": "良い",
    "EXPANSION_WEATHER_finedust_normal": "普通",
    "EXPANSION_WEATHER_finedust_bad": "悪い",
    "EXPANSION_WEATHER_finedust_very_bad": "とても悪い",
    "EXPANSION_WEATHER_lowest_temperature": "最低気温(℃)",
    "EXPANSION_WEATHER_highest_temperature": "最高気温(℃)",
    "EXPANSION_WEATHER_humidity": "湿度(%)",
    "EXPANSION_WEATHER_precipitation": "降水量(mm)",
    "EXPANSION_WEATHER_precipitation_probability": "降水確率(%)",
    "EXPANSION_WEATHER_wind_speed": "風速(m/s)",
    "EXPANSION_WEATHER_temperature": "気温(℃)",
    "EXPANSION_WEATHER_finedust": "PM10濃度(㎍)",
    "EXPANSION_FESTIVAL_title": "タイトル",
    "EXPANSION_FESTIVAL_area": "エリア",
    "EXPANSION_FESTIVAL_start_date": "開始日",
    "EXPANSION_FESTIVAL_end_date": "終了日",
    "EXPANSION_FESTIVAL_address": "アドレス",
    "EXPANSION_FESTIVAL_coordinate": "座標",
    "EXPANSION_FESTIVAL_overview": "概要",
    "EXPANSION_FESTIVAL_homepage": "ホームページ",
    "no_data": "情報なし",
    "no_sentence": "テキストなし",
    "sentence_over_20_charactor": "20字のみ入力できます。",
    "sentence_over_3000_charactor": "3000字のみ入力できます。",
    "sentence_over_2500_charactor": "2500文字のみ入力できます。",
    "unknown_sentence": "認識不可能なテキストです。",
    "auto": "自動",
    "korean": "韓国語",
    "english": "英語",
    "spanish": "スペイン語",
    "french": "フランス語",
    "german": "ドイツ語",
    "russian": "ロシア語",
    "portuguese": "ポルトガル語",
    "hindi": "ヒンディー語",
    "japan": "日本語",
    "thai": "タイ語",
    "vietnamese": "ベトナム語",
    "indonesian": "インドネシア語",
    "chinese_simplified": "簡体字中国語",
    "chinese_traditional": "繁体字中国語",
    "italian": "イタリア語",
    "behaviorConduct01001": "台風",
    "behaviorConduct01002": "洪水",
    "behaviorConduct01003": "豪雨",
    "behaviorConduct01004": "強風",
    "behaviorConduct01005": "大雪",
    "behaviorConduct01006": "寒波",
    "behaviorConduct01007": "波浪",
    "behaviorConduct01008": "黄砂",
    "behaviorConduct01009": "猛暑",
    "behaviorConduct01010": "干ばつ",
    "behaviorConduct01011": "地震",
    "behaviorConduct01013": "津波",
    "behaviorConduct01014": "地滑り",
    "behaviorConduct03002": "応急処置",
    "behaviorConduct03003": "心肺蘇生法",
    "behaviorConduct03004": "消火栓の使い方",
    "behaviorConduct03016": "消火器の使い方",
    "behaviorConduct03005": "食中毒",
    "behaviorConduct03006": "山の安全対策",
    "behaviorConduct03008": "失踪と誘拐",
    "behaviorConduct03009": "性暴力",
    "behaviorConduct03010": "学校暴力",
    "behaviorConduct03011": "家庭内暴力",
    "behaviorConduct03012": "抑留および拉致",
    "behaviorConduct03013": "交通事故",
    "behaviorConduct03014": "エレベーター事故",
    "behaviorConduct03015": "浮遊粒子状物質",
    "behaviorConduct01001001": "台風が来る前",
    "behaviorConduct01001002": "台風警報が出された時",
    "behaviorConduct01001003": "台風が通り過ぎた後",
    "behaviorConduct01002002": "洪水予報時",
    "behaviorConduct01002003": "水が押し寄せる時",
    "behaviorConduct01002004": "水が抜けた後",
    "behaviorConduct01003002": "大雨予報時",
    "behaviorConduct01003003": "大雨注意報∙警報が出された時",
    "behaviorConduct01003004": "大雨が過ぎ去った後",
    "behaviorConduct01004001": "強風が来る前",
    "behaviorConduct01004002": "強風発生時",
    "behaviorConduct01005002": "大雪が来る前",
    "behaviorConduct01005003": "大雪発生時",
    "behaviorConduct01005004": "大雪が通り過ぎた後",
    "behaviorConduct01006001": "寒波が押し寄せる前",
    "behaviorConduct01006002": "寒波発生時",
    "behaviorConduct01007001": "波浪注意報・警報時",
    "behaviorConduct01007002": "波浪が押し寄せる前",
    "behaviorConduct01008001": "黄砂予報時",
    "behaviorConduct01008002": "黄砂発生時",
    "behaviorConduct01008003": "黄砂が過ぎ去った後",
    "behaviorConduct01009001": "猛暑が来る前",
    "behaviorConduct01009002": "猛暑注意報時",
    "behaviorConduct01010001": "干ばつが来る前",
    "behaviorConduct01011009": "地震が来る前",
    "behaviorConduct01011010": "地震発生時",
    "behaviorConduct01011012": "地震避難後",
    "behaviorConduct01013002": "津波が来る前",
    "behaviorConduct01013003": "津波発生時",
    "behaviorConduct01014001": "地滑り注意報時",
    "behaviorConduct03002002": "やけどの処置",
    "behaviorConduct03002003": "高熱の予防",
    "behaviorConduct03002004": "ヘビにかまれたときの処置",
    "behaviorConduct03002005": "ハチにさされたときの処置",
    "behaviorConduct03002006": "過呼吸症候群の応急処置",
    "behaviorConduct03003001": "成人の心肺蘇生法",
    "behaviorConduct03003002": "乳幼児の心肺蘇生法",
    "behaviorConduct03003003": "自動体外式除細動器(AED)を使用",
    "behaviorConduct03004001": "粉末消火器を使用",
    "behaviorConduct03016001": "屋内消火栓の使用",
    "behaviorConduct03005001": "食中毒の対処",
    "behaviorConduct03006004": "登山中の注意事項",
    "behaviorConduct03006005": "山での安全なキャンピング",
    "behaviorConduct03006002": "救助要請の際に知らせること",
    "behaviorConduct03006003": "登山事故時の緊急措置",
    "behaviorConduct03008001": "失踪・誘拐の予防",
    "behaviorConduct03009001": "性暴力の防止",
    "behaviorConduct03010001": "学校暴力の予防",
    "behaviorConduct03011001": "家庭内暴力の予防",
    "behaviorConduct03012001": "抑留と拉致時の措置",
    "behaviorConduct03013002": "交通事故発生時の措置",
    "behaviorConduct03013005": "自動車での救助",
    "behaviorConduct03014001": "エレベーターの安全利用",
    "behaviorConduct03014003": "エレベーターの故障時の措置",
    "behaviorConduct03014004": "エスカレーターの安全利用",
    "behaviorConduct03015007": "浮遊粒子状物質の多い日の生活",
    "behaviorConduct03015003": "カテゴリー別の生活",
    "tts_female": "女性の",
    "tts_male": "男性の",
    "tts_kind": "やさしい",
    "tts_sweet": "あまい",
    "tts_echo": "響く",
    "tts_mischievous": "いたずらっぽい",
    "tts_dainty": "かわいらしい",
    "tts_veryslow": "とてもゆっくりに",
    "tts_slow": "ゆっくりに",
    "tts_normal": "普通",
    "tts_fast": "速く",
    "tts_veryfast": "とても速く",
    "tts_verylow": "とても低く",
    "tts_low": "低く",
    "tts_high": "高く",
    "tts_veryhigh": "とても高く",
    "ARDUINO": "Hardware",
    "ARDUINO_download_connector": "• 接続ソフトをダウンロード",
    "ARDUINO_open_connector": "接続ソフトを開く",
    "ARDUINO_download_source": "• ENTRYのArduinoコード",
    "ARDUINO_reconnect": "ハードウェアに接続する",
    "arduino_noti_text": "モバイル機器でのハードウェア\n    接続は今後対応予定です。",
    "ROBOT_reconnect": "ロボットを連結する",
    "ARDUINO_program": "Run the program",
    "ARDUINO_cloud_pc_connector": "Connect to Cloud PC",
    "ARDUINO_connected": "Hardware connected",
    "ARDUINO_connect": "* Connect hardware",
    "ARDUINO_arduino_get_number_1": "number result of signal",
    "ARDUINO_arduino_get_number_2": "",
    "ARDUINO_arduino_get_sensor_number_0": "0",
    "ARDUINO_arduino_get_sensor_number_1": "1",
    "ARDUINO_arduino_get_sensor_number_2": "2",
    "ARDUINO_arduino_get_sensor_number_3": "3",
    "ARDUINO_arduino_get_sensor_number_4": "4",
    "ARDUINO_arduino_get_sensor_number_5": "5",
    "arduino_lite_connected_noti": "ハードウェアを選択した状態で\n作品を保存してください。",
    "blacksmith_toggle_on": "on",
    "blacksmith_toggle_off": "off",
    "blacksmith_lcd_first_line": "first",
    "blacksmith_lcd_seconds_line": "seconds",
    "BITBRICK_light": "light",
    "BITBRICK_IR": "IR",
    "BITBRICK_touch": "touch",
    "BITBRICK_potentiometer": "potentiometer",
    "BITBRICK_MIC": "MIC",
    "BITBRICK_UserSensor": "UserSensor",
    "BITBRICK_UserInput": "UserInput",
    "BITBRICK_dc_direction_ccw": "CCW",
    "BITBRICK_dc_direction_cw": "CW",
    "chocopi_control_event_pressed": "pressed",
    "chocopi_control_event_released": "released",
    "chocopi_joystick_X": "joystick X",
    "chocopi_joystick_Y": "joystick Y",
    "chocopi_motion_photogate_event_blocked": "blocked",
    "chocopi_motion_photogate_event_unblocked": "unblocked",
    "chocopi_motion_photogate_time_blocked": "blocked",
    "chocopi_motion_photogate_time_unblocked": "unblocked",
    "chocopi_port": "P",
    "chocopi_pot": "potentiometer",
    "chocopi_touch_event_touch": "touched",
    "chocopi_touch_event_untouch": "untouched",
    "CODEino_get_sensor_number_0": "0",
    "CODEino_get_sensor_number_1": "1",
    "CODEino_get_sensor_number_2": "2",
    "CODEino_get_sensor_number_3": "3",
    "CODEino_get_sensor_number_4": "4",
    "CODEino_get_sensor_number_5": "5",
    "CODEino_get_sensor_number_6": "6",
    "CODEino_sensor_name_0": "Sound",
    "CODEino_sensor_name_1": "Light",
    "CODEino_sensor_name_2": "Slider",
    "CODEino_sensor_name_3": "resistance-A",
    "CODEino_sensor_name_4": "resistance-B",
    "CODEino_sensor_name_5": "resistance-C",
    "CODEino_sensor_name_6": "resistance-D",
    "CODEino_string_1": " Sensor value ",
    "CODEino_string_2": " Operation ",
    "CODEino_string_3": "Push button",
    "CODEino_string_4": "Connected A",
    "CODEino_string_5": "Connected B",
    "CODEino_string_6": "Connected C",
    "CODEino_string_7": "Connected D",
    "CODEino_string_8": " 3-AXIS Accelerometer ",
    "CODEino_string_9": "-axis value ",
    "CODEino_string_10": "Sound is ",
    "CODEino_string_11": "Great",
    "CODEino_string_12": "Small",
    "CODEino_string_13": "Light is ",
    "CODEino_string_14": "Bright",
    "CODEino_string_15": "Dark",
    "CODEino_string_16": "Left tilt",
    "CODEino_string_17": "Right tilt",
    "CODEino_string_18": "Front tilt",
    "CODEino_string_19": "Rear tilt",
    "CODEino_string_20": "Reverse",
    "CODEino_accelerometer_X": "X",
    "CODEino_accelerometer_Y": "Y",
    "CODEino_accelerometer_Z": "Z",
    "CODEino_led_red": "Red",
    "CODEino_led_green": "Green",
    "CODEino_led_blue": "Blue",
    "iboard_analog_number_0": "A0",
    "iboard_analog_number_1": "A1",
    "iboard_analog_number_2": "A2",
    "iboard_analog_number_3": "A3",
    "iboard_analog_number_4": "A4",
    "iboard_analog_number_5": "A5",
    "iboard_light": "Light sensor is ",
    "iboard_num_pin_1": "LED status",
    "iboard_num_pin_2": "switch",
    "iboard_num_pin_3": "analogue",
    "iboard_num_pin_4": " ",
    "iboard_num_pin_5": "sensor value",
    "iboard_string_1": "on",
    "iboard_string_2": "off",
    "iboard_string_3": "bright",
    "iboard_string_4": "dark",
    "iboard_string_5": "pressed",
    "iboard_string_6": "opened",
    "iboard_switch": "switch ",
    "iboard_tilt": "Slope sensor status is",
    "dplay_switch": "스위치 ",
    "dplay_light": "Light sensor is ",
    "dplay_tilt": "Slope sensor status is",
    "dplay_string_1": "켜짐",
    "dplay_string_2": "꺼짐",
    "dplay_string_3": "bright",
    "dplay_string_4": "dark",
    "dplay_string_5": "pressed",
    "dplay_string_6": "opened",
    "dplay_num_pin_1": "LED status",
    "dplay_num_pin_2": "switch",
    "dplay_num_pin_3": "analogue",
    "dplay_num_pin_4": "번 ",
    "dplay_num_pin_5": "sensor value",
    "dplay_analog_number_0": "A0",
    "dplay_analog_number_1": "A1",
    "dplay_analog_number_2": "A2",
    "dplay_analog_number_3": "A3",
    "dplay_analog_number_4": "A4",
    "dplay_analog_number_5": "A5",
    "ARDUINO_arduino_get_string_1": "string result of signal",
    "ARDUINO_arduino_get_string_2": "",
    "ARDUINO_arduino_send_1": "Send signal",
    "ARDUINO_arduino_send_2": "",
    "ARDUINO_num_sensor_value_1": "Analog",
    "ARDUINO_num_sensor_value_2": "Sensor value",
    "ARDUINO_get_digital_value_1": "Digital",
    "ARDUINO_num_pin_1": "Digital",
    "ARDUINO_num_pin_2": "Pin",
    "ARDUINO_toggle_pwm_1": "Digital",
    "ARDUINO_toggle_pwm_2": "Pin",
    "ARDUINO_toggle_pwm_3": "",
    "ARDUINO_on": "On",
    "ARDUINO_convert_scale_1": "Map Value",
    "ARDUINO_convert_scale_2": "",
    "ARDUINO_convert_scale_3": "~",
    "ARDUINO_convert_scale_4": "to",
    "ARDUINO_convert_scale_5": "~",
    "ARDUINO_convert_scale_6": "",
    "ARDUINO_off": "Off",
    "EXPANSION": "拡張",
    "brightness": "明度",
    "BRUSH": "筆",
    "BRUSH_brush_erase_all": "すべての筆のあとを消す",
    "BRUSH_change_opacity_1": "筆の不透明度を",
    "BRUSH_change_opacity_2": "%に変更",
    "BRUSH_change_thickness_1": "筆の太さを",
    "BRUSH_change_thickness_2": "変更する",
    "BRUSH_set_color_1": "筆の色を",
    "BRUSH_set_color_2": "にする",
    "BRUSH_set_opacity_1": "筆の不透明度を",
    "BRUSH_set_opacity_2": "%にする",
    "BRUSH_set_random_color": "筆の色をランダムにする",
    "BRUSH_set_thickness_1": "筆の太さを",
    "BRUSH_set_thickness_2": "にする",
    "BRUSH_stamp": "スタンプを押す",
    "BRUSH_start_drawing": "描画スタート",
    "BRUSH_stop_drawing": "描画をやめる",
    "CALC": "計算",
    "CALC_calc_mod_1": " ",
    "CALC_calc_mod_2": "/",
    "CALC_calc_mod_3": "あまり",
    "CALC_calc_operation_of_1": " ",
    "CALC_calc_operation_of_2": "の",
    "CALC_calc_operation_root": "ルート",
    "CALC_calc_operation_square": "乗",
    "CALC_calc_rand_1": " ",
    "CALC_calc_rand_2": "から",
    "CALC_calc_rand_3": "間の乱数",
    "CALC_calc_share_1": " ",
    "CALC_calc_share_2": "/",
    "CALC_calc_share_3": "の商",
    "CALC_coordinate_mouse_1": "マウスの",
    "CALC_coordinate_mouse_2": "座標",
    "CALC_coordinate_object_1": " ",
    "CALC_coordinate_object_2": "の",
    "CALC_coordinate_object_3": " ",
    "CALC_distance_something_1": " ",
    "CALC_distance_something_2": "までの距離",
    "CALC_get_angle": "角度値",
    "CALC_get_date_1": " 現在の",
    "CALC_get_date_2": " ",
    "CALC_get_date_day": "日",
    "CALC_get_date_hour": "時刻(時)",
    "CALC_get_date_minute": "時刻(分)",
    "CALC_get_date_month": "月",
    "CALC_get_date_second": "時刻(秒)",
    "CALC_get_date_year": "年度",
    "CALC_get_sound_duration_1": " ",
    "CALC_get_sound_duration_2": "音の長さ",
    "CALC_get_timer_value": " ストップウォッチの値",
    "CALC_get_x_coordinate": "X座標値",
    "CALC_get_y_coordinate": "Y座標値",
    "CALC_timer_reset": "ストップウォッチ初期化",
    "CALC_timer_visible_1": "ストップウォッチを",
    "CALC_timer_visible_2": " ",
    "CALC_timer_visible_show": "見せる",
    "CALC_timer_visible_hide": "隠す",
    "color": "色",
    "FLOW": "フロー ",
    "FLOW__if_1": "もし",
    "FLOW__if_2": "なら",
    "FLOW_create_clone_1": " ",
    "FLOW_create_clone_2": "のコピーを作る",
    "FLOW_delete_clone": "このコピーを削除する",
    "FLOW_delete_clone_all": "すべてのコピーを削除する",
    "FLOW_if_else_1": "もし",
    "FLOW_if_else_2": "なら",
    "FLOW_if_else_3": "そうでなければ",
    "FLOW_repeat_basic_1": " ",
    "FLOW_repeat_basic_2": "回繰り返す",
    "FLOW_repeat_basic_errorMsg": "反復回数は0と同じまたは大きい必要があります。",
    "FLOW_repeat_inf": "ずっと繰り返す",
    "FLOW_restart": "最初から再実行する",
    "FLOW_stop_object_1": " ",
    "FLOW_stop_object_2": "やめる",
    "FLOW_stop_object_all": "すべての",
    "FLOW_stop_object_this_object": "自分の",
    "FLOW_stop_object_this_thread": "この",
    "FLOW_stop_object_other_thread": "自分の他の",
    "FLOW_stop_object_other_objects": "他のオブジェクトの",
    "FLOW_stop_repeat": "繰り返しをやめる",
    "FLOW_stop_run": "プログラムを終了する",
    "FLOW_wait_second_1": " ",
    "FLOW_wait_second_2": "秒待つ",
    "FLOW_wait_until_true_1": " ",
    "FLOW_wait_until_true_2": "になるまで待つ",
    "FLOW_when_clone_start": "コピーが最初に作成された時",
    "FUNC": "関数",
    "ANALYSIS": "データ分析",
    "AI": "人工知能",
    "JUDGEMENT": "判断",
    "JUDGEMENT_boolean_and": "そして",
    "JUDGEMENT_boolean_not_1": " ",
    "JUDGEMENT_boolean_not_2": "ではない",
    "JUDGEMENT_boolean_or": "または",
    "JUDGEMENT_false": " false",
    "JUDGEMENT_is_clicked": "マウスをクリックしたか?",
    "JUDGEMENT_is_press_some_key_1": " ",
    "JUDGEMENT_is_press_some_key_2": "キーを押しているか？",
    "JUDGEMENT_reach_something_1": " ",
    "JUDGEMENT_reach_something_2": "に着いたか？",
    "JUDGEMENT_true": " true",
    "JUDGEMENT_is_boost_mode": "ブーストモードがオンになっているか？",
    "LOOKS": "見た目",
    "LOOKS_change_scale_percent_1": "サイズを",
    "LOOKS_change_scale_percent_2": "分変更する",
    "LOOKS_change_to_next_shape": "次の模様に変更する",
    "LOOKS_change_to_nth_shape_1": " ",
    "LOOKS_change_to_nth_shape_2": "模様に変更する",
    "LOOKS_change_shape_prev": "前の",
    "LOOKS_change_shape_next": "次の",
    "LOOKS_change_to_near_shape_1": " ",
    "LOOKS_change_to_near_shape_2": "模様に変更する",
    "LOOKS_dialog_1": " ",
    "LOOKS_dialog_2": "を",
    "LOOKS_dialog_3": " ",
    "LOOKS_dialog_time_1": " ",
    "LOOKS_dialog_time_2": "を",
    "LOOKS_dialog_time_3": "秒間",
    "LOOKS_dialog_time_4": " ",
    "LOOKS_erase_all_effects": "効果をすべて削除する",
    "LOOKS_flip_x": "上下の模様を入れ替える",
    "LOOKS_flip_y": "左右の模様を入れ替える",
    "LOOKS_hide": "模様非表示",
    "LOOKS_remove_dialog": "会話を削除する",
    "LOOKS_set_effect_1": " ",
    "LOOKS_set_effect_2": "効果を",
    "LOOKS_set_effect_3": "にする",
    "LOOKS_set_effect_volume_1": " ",
    "LOOKS_set_effect_volume_2": "効果を",
    "LOOKS_set_effect_volume_3": "加える",
    "LOOKS_set_object_order_1": " ",
    "LOOKS_set_object_order_2": "番目に上げる",
    "LOOKS_set_scale_percent_1": "サイズを",
    "LOOKS_set_scale_percent_2": " にする",
    "LOOKS_show": "模様表示",
    "mouse_pointer": "マウスポインター",
    "MOVING": "動き",
    "MOVING_bounce_wall": "壁に着いたら、跳ね返る",
    "MOVING_bounce_when_1": " ",
    "MOVING_bounce_when_2": "に到達した場合弾く",
    "MOVING_flip_arrow_horizontal": "矢印の方向を左右入れ替える",
    "MOVING_flip_arrow_vertical": "矢印の方向を上下入れ替える",
    "MOVING_locate_1": " ",
    "MOVING_locate_2": "位置に移動する",
    "MOVING_locate_time_1": " ",
    "MOVING_locate_time_2": "秒間",
    "MOVING_locate_time_3": "位置に移動する",
    "MOVING_locate_x_1": "x:",
    "MOVING_locate_x_2": "位置に移動する",
    "MOVING_locate_xy_1": "x:",
    "MOVING_locate_xy_2": "y:",
    "MOVING_locate_xy_3": "位置に移動する",
    "MOVING_locate_xy_time_1": " ",
    "MOVING_locate_xy_time_2": "秒間x:",
    "MOVING_locate_xy_time_3": "y:",
    "MOVING_locate_xy_time_4": "位置に移動する",
    "MOVING_locate_y_1": "y:",
    "MOVING_locate_y_2": "位置に移動する",
    "MOVING_move_direction_1": "移動方向に",
    "MOVING_move_direction_2": "動かす",
    "MOVING_move_direction_angle_1": " ",
    "MOVING_move_direction_angle_2": "方向に",
    "MOVING_move_direction_angle_3": "動かす",
    "MOVING_move_x_1": "x 座標を",
    "MOVING_move_x_2": "分変更する",
    "MOVING_move_xy_time_1": " ",
    "MOVING_move_xy_time_2": "秒間x:",
    "MOVING_move_xy_time_3": "y:",
    "MOVING_move_xy_time_4": "分動かす",
    "MOVING_move_y_1": "y座標を",
    "MOVING_move_y_2": "分変更する",
    "MOVING_rotate_by_angle_1": "オブジェクトを",
    "MOVING_rotate_by_angle_2": "回転する",
    "MOVING_rotate_by_angle_dropdown_1": " ",
    "MOVING_rotate_by_angle_dropdown_2": "回転する",
    "MOVING_rotate_by_angle_time_1": "オブジェクトを",
    "MOVING_rotate_by_angle_time_2": "秒間",
    "MOVING_rotate_by_angle_time_3": "分回転する",
    "MOVING_rotate_direction_1": "移動方向を",
    "MOVING_rotate_direction_2": "分回転する",
    "MOVING_see_angle_1": "移動方向を",
    "MOVING_see_angle_2": "にする",
    "MOVING_see_angle_direction_1": "オブジェクトを",
    "MOVING_see_angle_direction_2": "にする",
    "MOVING_see_angle_object_1": " ",
    "MOVING_see_angle_object_2": "側を向く",
    "MOVING_see_direction_1": " ",
    "MOVING_see_direction_2": "側にターンする",
    "MOVING_set_direction_by_angle_1": "方向を",
    "MOVING_set_direction_by_angle_2": "にする",
    "MOVING_add_direction_by_angle_1": "方向を",
    "MOVING_add_direction_by_angle_2": "回転する",
    "MOVING_add_direction_by_angle_time_1": "方向を",
    "MOVING_add_direction_by_angle_time_2": "秒間",
    "MOVING_add_direction_by_angle_time_3": "回転する",
    "no_target": "対象なし",
    "oneself": "自分",
    "opacity": "不透明度",
    "SCENE": "シーン",
    "SOUND": "音",
    "SOUND_sound_silent_all": "すべてのサウンドを中断する",
    "SOUND_sound_something_1": "サウンド",
    "SOUND_sound_something_2": "再生する",
    "SOUND_sound_something_second_1": "サウンド",
    "SOUND_sound_something_second_2": " ",
    "SOUND_sound_something_second_3": "秒再生する",
    "SOUND_sound_something_second_wait_1": "サウンド",
    "SOUND_sound_something_second_wait_2": " ",
    "SOUND_sound_something_second_wait_3": "秒再生して待つ",
    "SOUND_sound_something_wait_1": "サウンド",
    "SOUND_sound_something_wait_2": "再生して待つ",
    "SOUND_sound_volume_change_1": "音の大きさを",
    "SOUND_sound_volume_change_2": "%に変更",
    "SOUND_sound_volume_set_1": "音の大きさを",
    "SOUND_sound_volume_set_2": "%にする",
    "speak": "言う",
    "think": "思う",
    "START": "はじめ",
    "START_add_message": "信号を追加する",
    "START_delete_message": "信号を削除する",
    "START_message_cast": "信号を送る",
    "START_message_cast_1": " ",
    "START_message_cast_2": "信号を送る",
    "START_message_cast_wait": "信号を送って待機",
    "START_message_send_wait_1": " ",
    "START_message_send_wait_2": "信号を送って待機",
    "START_mouse_click_cancled": "マウスをクリックして離した時",
    "START_mouse_clicked": "マウスをクリックした時",
    "START_press_some_key_1": " ",
    "START_press_some_key_2": "キーを押した時",
    "START_press_some_key_down": "下矢印",
    "START_press_some_key_enter": "エンター",
    "START_press_some_key_left": "左矢印",
    "START_press_some_key_right": "右矢印",
    "START_press_some_key_space": "スペース",
    "START_press_some_key_up": "上矢印",
    "START_when_message_cast": "信号を受け取った時",
    "START_when_message_cast_1": " ",
    "START_when_message_cast_2": "信号を受け取った時",
    "START_when_object_click": "オブジェクトをクリックした時",
    "START_when_object_click_canceled": "オブジェクトをクリックして離した時",
    "START_when_run_button_click": "スタートボタンをクリックした時",
    "START_when_scene_start": "シーンが始まった時",
    "START_when_some_key_click": "キーを押した時",
    "TEXT": "テキストボックス",
    "TEXT_text": "エントリー",
    "TEXT_text_append_1": " ",
    "TEXT_text_append_2": "と後ろに続けて書く",
    "TEXT_text_flush": "テキストをすべて削除する",
    "TEXT_text_prepend_1": " ",
    "TEXT_text_prepend_2": "と前に追加する",
    "TEXT_text_write_1": " ",
    "TEXT_text_write_2": "と書く",
    "VARIABLE": "データ",
    "VARIABLE_add_value_to_list": "項目をリストに追加する",
    "VARIABLE_add_value_to_list_1": " ",
    "VARIABLE_add_value_to_list_2": "項目を",
    "VARIABLE_add_value_to_list_3": "に追加する",
    "VARIABLE_ask_and_wait_1": " ",
    "VARIABLE_ask_and_wait_2": "を尋ねて回答を待機",
    "VARIABLE_change_value_list_index": "項目を変更する",
    "VARIABLE_change_value_list_index_1": " ",
    "VARIABLE_change_value_list_index_3": "番目の項目を",
    "VARIABLE_change_value_list_index_2": " ",
    "VARIABLE_change_value_list_index_4": "に変更する",
    "VARIABLE_change_variable": "変数を加える",
    "VARIABLE_change_variable_1": " ",
    "VARIABLE_change_variable_2": "に",
    "VARIABLE_change_variable_3": "加える",
    "VARIABLE_change_variable_name": "変数名を変更する",
    "VARIABLE_combine_something_1": " ",
    "VARIABLE_combine_something_2": "と",
    "VARIABLE_combine_something_3": "をつなげる",
    "VARIABLE_get_canvas_input_value": "答え",
    "VARIABLE_get_variable": "変数",
    "VARIABLE_get_variable_1": "の値",
    "VARIABLE_get_variable_2": "値",
    "VARIABLE_get_y": "Y座標値",
    "VARIABLE_hide_list": "リスト非表示",
    "VARIABLE_hide_list_1": "リスト",
    "VARIABLE_hide_list_2": "非表示",
    "VARIABLE_hide_variable": "変数値非表示",
    "VARIABLE_hide_variable_1": "変数",
    "VARIABLE_hide_variable_2": "非表示",
    "VARIABLE_insert_value_to_list": "項目を挿入する",
    "VARIABLE_insert_value_to_list_1": " ",
    "VARIABLE_insert_value_to_list_2": "を",
    "VARIABLE_insert_value_to_list_3": "の",
    "VARIABLE_insert_value_to_list_4": "番目に入れる",
    "VARIABLE_length_of_list": "リストの長さ",
    "VARIABLE_length_of_list_1": " ",
    "VARIABLE_length_of_list_2": " の項目数",
    "VARIABLE_list": "リスト",
    "VARIABLE_make_variable": "変数を作成する",
    "VARIABLE_list_option_first": "最初",
    "VARIABLE_list_option_last": "最後",
    "VARIABLE_list_option_random": "ランダム",
    "VARIABLE_remove_value_from_list": "項目を削除する",
    "VARIABLE_remove_value_from_list_1": " ",
    "VARIABLE_remove_value_from_list_2": "番目の項目を",
    "VARIABLE_remove_value_from_list_3": "から削除する",
    "VARIABLE_remove_variable": "変数削除",
    "VARIABLE_set_variable": "変数を定める",
    "VARIABLE_set_variable_1": " ",
    "VARIABLE_set_variable_2": "を",
    "VARIABLE_set_variable_3": "にする",
    "VARIABLE_show_list": "リスト表示",
    "VARIABLE_show_list_1": "リスト",
    "VARIABLE_show_list_2": "表示",
    "VARIABLE_show_variable": "変数値表示",
    "VARIABLE_show_variable_1": "変数",
    "VARIABLE_show_variable_2": "表示",
    "VARIABLE_value_of_index_from_list": "リスト項目の値",
    "VARIABLE_value_of_index_from_list_1": " ",
    "VARIABLE_value_of_index_from_list_2": "の",
    "VARIABLE_value_of_index_from_list_3": "番目の項目",
    "HAMSTER_hand_found": "hand found?",
    "HAMSTER_sensor_left_proximity": "left proximity",
    "HAMSTER_sensor_right_proximity": "right proximity",
    "HAMSTER_sensor_left_floor": "left floor",
    "HAMSTER_sensor_right_floor": "right floor",
    "HAMSTER_sensor_acceleration_x": "x acceleration",
    "HAMSTER_sensor_acceleration_y": "y acceleration",
    "HAMSTER_sensor_acceleration_z": "z acceleration",
    "HAMSTER_sensor_light": "light",
    "HAMSTER_sensor_temperature": "temperature",
    "HAMSTER_sensor_signal_strength": "signal strength",
    "HAMSTER_sensor_input_a": "input A",
    "HAMSTER_sensor_input_b": "input B",
    "HAMSTER_move_forward_once": "move forward once on board",
    "HAMSTER_turn_once_1": "turn",
    "HAMSTER_turn_once_2": "once on board",
    "HAMSTER_turn_once_left": "left",
    "HAMSTER_turn_right": "right",
    "HAMSTER_move_forward": "move forward",
    "HAMSTER_move_backward": "move backward",
    "HAMSTER_turn_around_1": "turn",
    "HAMSTER_turn_around_2": "",
    "HAMSTER_move_forward_for_secs_1": "move forward for",
    "HAMSTER_move_forward_for_secs_2": "secs",
    "HAMSTER_move_backward_for_secs_1": "move backward",
    "HAMSTER_move_backward_for_secs_2": "secs",
    "HAMSTER_turn_for_secs_1": "turn",
    "HAMSTER_turn_for_secs_2": "for",
    "HAMSTER_turn_for_secs_3": "secs",
    "HAMSTER_change_both_wheels_by_1": "change wheel by left:",
    "HAMSTER_change_both_wheels_by_2": "right:",
    "HAMSTER_change_both_wheels_by_3": "",
    "HAMSTER_set_both_wheels_to_1": "set wheel to left:",
    "HAMSTER_set_both_wheels_to_2": "right:",
    "HAMSTER_set_both_wheels_to_3": "",
    "HAMSTER_change_wheel_by_1": "change",
    "HAMSTER_change_wheel_by_2": "wheel by",
    "HAMSTER_change_wheel_by_3": "",
    "HAMSTER_left_wheel": "left",
    "HAMSTER_right_wheel": "right",
    "HAMSTER_both_wheels": "both",
    "HAMSTER_set_wheel_to_1": "set",
    "HAMSTER_set_wheel_to_2": "wheel to",
    "HAMSTER_set_wheel_to_3": "",
    "HAMSTER_follow_line_using_1": "follow",
    "HAMSTER_follow_line_using_2": "line using",
    "HAMSTER_follow_line_using_3": "floor sensor",
    "HAMSTER_left_floor_sensor": "left",
    "HAMSTER_right_floor_sensor": "right",
    "HAMSTER_both_floor_sensors": "both",
    "HAMSTER_follow_line_until_1": "follow",
    "HAMSTER_follow_line_until_2": "line until",
    "HAMSTER_follow_line_until_3": "intersection",
    "HAMSTER_left_intersection": "left",
    "HAMSTER_right_intersection": "right",
    "HAMSTER_front_intersection": "front",
    "HAMSTER_rear_intersection": "rear",
    "HAMSTER_set_following_speed_to_1": "set following speed to",
    "HAMSTER_set_following_speed_to_2": "",
    "HAMSTER_front": "front",
    "HAMSTER_rear": "rear",
    "HAMSTER_stop": "stop",
    "HAMSTER_set_led_to_1": "set",
    "HAMSTER_set_led_to_2": "led to",
    "HAMSTER_set_led_to_3": "",
    "HAMSTER_left_led": "left",
    "HAMSTER_right_led": "right",
    "HAMSTER_both_leds": "both",
    "HAMSTER_clear_led_1": "clear",
    "HAMSTER_clear_led_2": "led",
    "HAMSTER_color_cyan": "sky blue",
    "HAMSTER_color_magenta": "purple",
    "HAMSTER_color_black": "black",
    "HAMSTER_color_white": "white",
    "HAMSTER_color_red": "red",
    "HAMSTER_color_yellow": "yellow",
    "HAMSTER_color_green": "green",
    "HAMSTER_color_blue": "blue",
    "HAMSTER_beep": "beep",
    "HAMSTER_change_buzzer_by_1": "change buzzer by",
    "HAMSTER_change_buzzer_by_2": "",
    "HAMSTER_set_buzzer_to_1": "set buzzer to",
    "HAMSTER_set_buzzer_to_2": "",
    "HAMSTER_clear_buzzer": "clear buzzer",
    "HAMSTER_play_note_for_1": "play note",
    "HAMSTER_play_note_for_2": "",
    "HAMSTER_play_note_for_3": "for",
    "HAMSTER_play_note_for_4": "beats",
    "HAMSTER_rest_for_1": "rest for",
    "HAMSTER_rest_for_2": "beats",
    "HAMSTER_change_tempo_by_1": "change tempo by",
    "HAMSTER_change_tempo_by_2": "",
    "HAMSTER_set_tempo_to_1": "set tempo to",
    "HAMSTER_set_tempo_to_2": "bpm",
    "HAMSTER_set_port_to_1": "set port",
    "HAMSTER_set_port_to_2": "to",
    "HAMSTER_set_port_to_3": "",
    "HAMSTER_change_output_by_1": "change output",
    "HAMSTER_change_output_by_2": "by",
    "HAMSTER_change_output_by_3": "",
    "HAMSTER_set_output_to_1": "set output",
    "HAMSTER_set_output_to_2": "to",
    "HAMSTER_set_output_to_3": "",
    "HAMSTER_port_a": "A",
    "HAMSTER_port_b": "B",
    "HAMSTER_port_ab": "A and B",
    "HAMSTER_analog_input": "analog input",
    "HAMSTER_digital_input": "digital input",
    "HAMSTER_servo_output": "servo output",
    "HAMSTER_pwm_output": "pwm output",
    "HAMSTER_digital_output": "digital output",
    "ROBOID_acceleration_x": "x軸加速度",
    "ROBOID_acceleration_y": "y軸加速度",
    "ROBOID_acceleration_z": "z軸加速度",
    "ROBOID_back": "後ろ",
    "ROBOID_both": "両側",
    "ROBOID_button": "ボタン",
    "ROBOID_buzzer": "ブザー",
    "ROBOID_clicked": "クリックしたか",
    "ROBOID_color_any": "何の色",
    "ROBOID_color_black": "黒",
    "ROBOID_color_blue": "青",
    "ROBOID_color_green": "緑",
    "ROBOID_color_number": "色番号",
    "ROBOID_color_orange": "オレンジ",
    "ROBOID_color_pattern": "色パターン",
    "ROBOID_color_purple": "赤紫色",
    "ROBOID_color_red": "赤",
    "ROBOID_color_sky_blue": "水色",
    "ROBOID_color_violet": "紫",
    "ROBOID_color_white": "白",
    "ROBOID_color_yellow": "黄色",
    "ROBOID_double_clicked": "ダブルクリックしたか",
    "ROBOID_floor": "床センサー",
    "ROBOID_head": "髪",
    "ROBOID_head_color": "髪色",
    "ROBOID_left": "左側",
    "ROBOID_left_wheel": "左車輪",
    "ROBOID_long_pressed": "長く~押したか",
    "ROBOID_note": "音符",
    "ROBOID_right": "右側",
    "ROBOID_right_wheel": "右車輪",
    "ROBOID_sound_beep": "ピー音",
    "ROBOID_sound_birthday": "誕生日",
    "ROBOID_sound_dibidibidip": "ディビディビディープ",
    "ROBOID_sound_engine": "エンジン",
    "ROBOID_sound_good_job": "すごいです",
    "ROBOID_sound_march": "行進",
    "ROBOID_sound_random_beep": "ランダムのピー音",
    "ROBOID_sound_robot": "ロボット",
    "ROBOID_sound_siren": "サイレン",
    "ROBOID_tail": "尾",
    "ROBOID_unit_cm": "cm",
    "ROBOID_unit_deg": "度",
    "ROBOID_unit_pulse": "パルス",
    "ROBOID_unit_sec": "秒",
    "ALBERT_hand_found": "hand found?",
    "ALBERT_is_oid_1": "oid is",
    "ALBERT_is_oid_2": "",
    "ALBERT_is_oid_3": "?",
    "ALBERT_front_oid": "front",
    "ALBERT_back_oid": "back",
    "ALBERT_sensor_left_proximity": "left proximity",
    "ALBERT_sensor_right_proximity": "right proximity",
    "ALBERT_sensor_acceleration_x": "x acceleration",
    "ALBERT_sensor_acceleration_y": "y acceleration",
    "ALBERT_sensor_acceleration_z": "z acceleration",
    "ALBERT_sensor_light": "light",
    "ALBERT_sensor_temperature": "temperature",
    "ALBERT_sensor_battery": "battery",
    "ALBERT_sensor_signal_strength": "signal strength",
    "ALBERT_sensor_front_oid": "front oid",
    "ALBERT_sensor_back_oid": "back oid",
    "ALBERT_sensor_position_x": "x position",
    "ALBERT_sensor_position_y": "y position",
    "ALBERT_sensor_orientation": "orientation",
    "ALBERT_move_forward": "move forward",
    "ALBERT_move_backward": "move backward",
    "ALBERT_turn_around_1": "turn",
    "ALBERT_turn_around_2": "",
    "ALBERT_move_forward_for_secs_1": "move forward for",
    "ALBERT_move_forward_for_secs_2": "secs",
    "ALBERT_move_backward_for_secs_1": "move backward for",
    "ALBERT_move_backward_for_secs_2": "secs",
    "ALBERT_turn_for_secs_1": "turn",
    "ALBERT_turn_for_secs_2": "for",
    "ALBERT_turn_for_secs_3": "secs",
    "ALBERT_turn_left": "left",
    "ALBERT_turn_right": "right",
    "ALBERT_change_both_wheels_by_1": "change wheels by left:",
    "ALBERT_change_both_wheels_by_2": "right:",
    "ALBERT_change_both_wheels_by_3": "",
    "ALBERT_left_wheel": "left",
    "ALBERT_right_wheel": "right",
    "ALBERT_both_wheels": "both",
    "ALBERT_set_both_wheels_to_1": "set wheels to left:",
    "ALBERT_set_both_wheels_to_2": "right:",
    "ALBERT_set_both_wheels_to_3": "",
    "ALBERT_change_wheel_by_1": "change",
    "ALBERT_change_wheel_by_2": "wheel by",
    "ALBERT_change_wheel_by_3": "",
    "ALBERT_set_wheel_to_1": "set",
    "ALBERT_set_wheel_to_2": "wheel to",
    "ALBERT_set_wheel_to_3": "",
    "ALBERT_stop": "stop",
    "ALBERT_set_board_size_to_1": "set board size to width:",
    "ALBERT_set_board_size_to_2": "height:",
    "ALBERT_set_board_size_to_3": "",
    "ALBERT_move_to_x_y_1": "move to x:",
    "ALBERT_move_to_x_y_2": "y:",
    "ALBERT_move_to_x_y_3": "on board",
    "ALBERT_set_orientation_to_1": "set orientation to",
    "ALBERT_set_orientation_to_2": "degrees on board",
    "ALBERT_set_eye_to_1": "set",
    "ALBERT_set_eye_to_2": "eye to",
    "ALBERT_set_eye_to_3": "",
    "ALBERT_left_eye": "left",
    "ALBERT_right_eye": "right",
    "ALBERT_both_eyes": "both",
    "ALBERT_clear_eye_1": "clear",
    "ALBERT_clear_eye_2": "eye",
    "ALBERT_body_led_1": "turn",
    "ALBERT_body_led_2": "body led",
    "ALBERT_front_led_1": "turn",
    "ALBERT_front_led_2": "front led",
    "ALBERT_color_cyan": "cyan",
    "ALBERT_color_magenta": "magenta",
    "ALBERT_color_white": "white",
    "ALBERT_color_red": "red",
    "ALBERT_color_yellow": "yellow",
    "ALBERT_color_green": "green",
    "ALBERT_color_blue": "blue",
    "ALBERT_note_c": "C",
    "ALBERT_note_d": "D",
    "ALBERT_note_e": "E",
    "ALBERT_note_f": "F",
    "ALBERT_note_g": "G",
    "ALBERT_note_a": "A",
    "ALBERT_note_b": "B",
    "ALBERT_turn_body_led_1": "turn",
    "ALBERT_turn_body_led_2": "body led",
    "ALBERT_turn_front_led_1": "turn",
    "ALBERT_turn_front_led_2": "front led",
    "ALBERT_turn_on": "on",
    "ALBERT_turn_off": "off",
    "ALBERT_beep": "beep",
    "ALBERT_change_buzzer_by_1": "change buzzer by",
    "ALBERT_change_buzzer_by_2": "",
    "ALBERT_set_buzzer_to_1": "set buzzer to",
    "ALBERT_set_buzzer_to_2": "",
    "ALBERT_clear_buzzer": "clear buzzer",
    "ALBERT_play_note_for_1": "play note",
    "ALBERT_play_note_for_2": "',",
    "ALBERT_play_note_for_3": "for",
    "ALBERT_play_note_for_4": "beats",
    "ALBERT_rest_for_1": "rest for",
    "ALBERT_rest_for_2": "beats",
    "ALBERT_change_tempo_by_1": "change tempo by",
    "ALBERT_change_tempo_by_2": "",
    "ALBERT_set_tempo_to_1": "set tempo to",
    "ALBERT_set_tempo_to_2": "bpm",
    "VARIABLE_variable": "変数",
    "wall": "壁",
    "robotis_common_case_01": "を",
    "robotis_common_set": "にする",
    "robotis_common_value": "値",
    "robotis_common_clockwhise": "時計方向",
    "robotis_common_counter_clockwhise": "反時計方向",
    "robotis_common_wheel_mode": "回転モード",
    "robotis_common_joint_mode": "関節モード",
    "robotis_common_red_color": "赤",
    "robotis_common_green_color": "緑",
    "robotis_common_blue_color": "青",
    "robotis_common_on": "ON",
    "robotis_common_off": "OFF",
    "robotis_common_cm": "コントローラー",
    "robotis_common_port_1": "ポート1",
    "robotis_common_port_2": "ポート2",
    "robotis_common_port_3": "ポート3",
    "robotis_common_port_4": "ポート4",
    "robotis_common_port_5": "ポート5",
    "robotis_common_port_6": "ポート6",
    "robotis_common_play_buzzer": "演奏",
    "robotis_common_play_motion": "実行",
    "robotis_common_motion": "モーション",
    "robotis_common_index_number": "回",
    "robotis_common_left": "左",
    "robotis_common_right": "右",
    "robotis_common_minute": "分",
    "robotis_cm_custom": "直接入力アドレス",
    "robotis_cm_spring_left": "左側接触センサー",
    "robotis_cm_spring_right": "右側接触センサー",
    "robotis_cm_led_left": "左側LED",
    "robotis_cm_led_right": "右側LED",
    "robotis_cm_led_both": "両側LED",
    "robotis_cm_switch": "選択ボタンの状態",
    "robotis_cm_user_button": "ユーザーボタンの状態",
    "robotis_cm_sound_detected": "最終サウンド検知回数",
    "robotis_cm_sound_detecting": "リアルタイムサウンド検知回数",
    "robotis_cm_ir_left": "左側赤外線センサー",
    "robotis_cm_ir_right": "右側赤外線センサー",
    "robotis_cm_calibration_left": "左側赤外線センサー較正値",
    "robotis_cm_calibration_right": "右側赤外線センサー較正値",
    "robotis_cm_clear_sound_detected": "最終サウンド検知回数初期化",
    "robotis_cm_buzzer_index": "音階値",
    "robotis_cm_buzzer_melody": "メロディ",
    "robotis_cm_led_1": "1番LED",
    "robotis_cm_led_4": "4番LED",
    "robotis_aux_servo_position": "サーボモーター位置",
    "robotis_aux_ir": "赤外線センサー",
    "robotis_aux_touch": "接触センサー",
    "robotis_aux_brightness": "照度センサー(CDS)",
    "robotis_aux_hydro_themo_humidity": "温湿度センサー(湿度)",
    "robotis_aux_hydro_themo_temper": "温湿度センサー(温度)",
    "robotis_aux_temperature": "温度センサー",
    "robotis_aux_ultrasonic": "超音波センサー",
    "robotis_aux_magnetic": "磁石センサー",
    "robotis_aux_motion_detection": "動作検知センサー",
    "robotis_aux_color": "カラーセンサー",
    "robotis_aux_custom": "ユーザー装置",
    "robotis_carCont_aux_motor_speed_1": "Speed of decelerating motor",
    "robotis_carCont_aux_motor_speed_2": ", the output value",
    "robotis_carCont_calibration_1": "Value of the infrared sensor calibration ",
    "robotis_openCM70_aux_motor_speed_1": "Speed of decelerating motor",
    "robotis_openCM70_aux_motor_speed_2": ", Set as",
    "robotis_openCM70_aux_servo_mode_1": "Servo motor mode",
    "robotis_openCM70_aux_servo_speed_1": "Servo motor speed",
    "robotis_openCM70_aux_servo_speed_2": ", the output value",
    "robotis_openCM70_aux_servo_position_1": "Position of servo motor",
    "robotis_openCM70_aux_led_module_1": "LED module",
    "robotis_openCM70_aux_custom_1": "User device",
    "XBOT_digital": "Digital",
    "XBOT_D2_digitalInput": "D2 Digital Input",
    "XBOT_D3_digitalInput": "D3 Digital Input",
    "XBOT_D11_digitalInput": "D11 Digital Input",
    "XBOT_analog": "Analog",
    "XBOT_CDS": "Light Sensor Value",
    "XBOT_MIC": "Mic Sensor Value",
    "XBOT_analog0": "Analog PIN0 Value",
    "XBOT_analog1": "Analog PIN1 Value",
    "XBOT_analog2": "Analog PIN2 Value",
    "XBOT_analog3": "Analog PIN3 Value",
    "XBOT_Value": "Ouput Value",
    "XBOT_pin_OutputValue": "PIN, Ouput Value",
    "XBOT_High": "HI",
    "XBOT_Low": "LO",
    "XBOT_Servo": "Servo Motor",
    "XBOT_Head": "Head(D8)",
    "XBOT_ArmR": "Right Arm(D9)",
    "XBOT_ArmL": "Left Arm(D10)",
    "XBOT_angle": ", Angle",
    "XBOT_DC": "Wheel(DC) Motor",
    "XBOT_rightWheel": "Right",
    "XBOT_leftWheel": "Left",
    "XBOT_bothWheel": "Both",
    "XBOT_speed": ", Speed",
    "XBOT_rightSpeed": "Wheel(DC) Motor Right(2) Speed:",
    "XBOT_leftSpeed": "Left(1) Speed:",
    "XBOT_RGBLED_R": "RGB LED Color from Red",
    "XBOT_RGBLED_G": "Green",
    "XBOT_RGBLED_B": "Blue",
    "XBOT_RGBLED_color": "RGB LED Color from",
    "XBOT_set": " ",
    "XBOT_c": "C",
    "XBOT_d": "D",
    "XBOT_e": "E",
    "XBOT_f": "F",
    "XBOT_g": "G",
    "XBOT_a": "A",
    "XBOT_b": "B",
    "XBOT_melody_ms": "sec of Melody Playing",
    "XBOT_Line": "th Line",
    "XBOT_outputValue": "Text",
    "roborobo_num_analog_value_1": "アナログ",
    "roborobo_num_analog_value_2": "番センサー値",
    "roborobo_get_digital_value_1": "デジタル",
    "roborobo_num_pin_1": "デジタル",
    "roborobo_num_pin_2": "番ピン",
    "roborobo_on": "ON",
    "roborobo_off": "OFF",
    "roborobo_motor1": "モーター1",
    "roborobo_motor2": "モーター2",
    "roborobo_motor_CW": "正転",
    "roborobo_motor_CCW": "逆回転",
    "roborobo_motor_stop": "停止",
    "roborobo_input_mode": "入力",
    "roborobo_output_mode": "出力",
    "roborobo_pwm_mode": "電流調節(pwm)",
    "roborobo_servo_mode": "サーボモーター",
    "roborobo_color": "カラーセンサー",
    "roborobo_color_red": " 赤色",
    "roborobo_color_green": " 緑 ",
    "roborobo_color_blue": " 青 ",
    "roborobo_color_yellow": " 黄色 ",
    "roborobo_color_detected": " 検知",
    "roborobo_degree": " ˚",
    "robotori_D2_Input": "Digital Pin 2 Input Value",
    "robotori_D3_Input": "Digital Pin 3 Input Value",
    "robotori_A0_Input": "Analog Pin 0 Input Value",
    "robotori_A1_Input": "Analog Pin 1 Input Value",
    "robotori_A2_Input": "Analog Pin 2 Input Value",
    "robotori_A3_Input": "Analog Pin 3 Input Value",
    "robotori_A4_Input": "Analog Pin 4 Input Value",
    "robotori_A5_Input": "Analog Pin 5 Input Value",
    "robotori_digital": "Digital",
    "robotori_D10_Output": "Pin 10",
    "robotori_D11_Output": "Pin 11",
    "robotori_D12_Output": "Pin 12",
    "robotori_D13_Output": "Pin 13",
    "robotori_pin_OutputValue": "Output Value",
    "robotori_On": "On",
    "robotori_Off": "Off",
    "robotori_analog": "Analog",
    "robotori_analog5": "Pin 5 Output Value",
    "robotori_analog6": "Pin 6 Output Value",
    "robotori_analog9": "Pin 9 Output Value",
    "robotori_Servo": "Servo Motor",
    "robotori_DC": "DC Motor",
    "robotori_DC_rightmotor": "Right",
    "robotori_DC_leftmotor": "Left",
    "robotori_DC_STOP": "Stop",
    "robotori_DC_CW": "clockwise",
    "robotori_DC_CCW": "anticlockwise",
    "robotori_DC_select": "direction",
    "CALC_rotation_value": "方向値",
    "CALC_direction_value": "移動方向値",
    "VARIABLE_is_included_in_list": "リストに含まれているか?",
    "VARIABLE_is_included_in_list_1": " ",
    "VARIABLE_is_included_in_list_2": "に",
    "VARIABLE_is_included_in_list_3": "が含まれているか?",
    "SCENE_when_scene_start": "シーンが始まった時",
    "SCENE_start_scene_1": " ",
    "SCENE_start_scene_2": "スタート",
    "SCENE_start_neighbor_scene_1": " ",
    "SCENE_start_neighbor_scene_2": "シーンをスタート",
    "SCENE_start_scene_pre": "前の",
    "SCENE_start_scene_next": "次の",
    "FUNCTION_explanation_1": "関数の名前",
    "FUNCTION_character_variable": "文字／数字の値",
    "FUNCTION_logical_variable": "判断値",
    "FUNCTION_function": "関数",
    "FUNCTION_define": "関数を定義する",
    "CALC_calc_operation_sin": "サイン値",
    "CALC_calc_operation_cos": "コサイン値",
    "CALC_calc_operation_tan": "タンジェント値",
    "CALC_calc_operation_floor": "小数点以下切り捨て値",
    "CALC_calc_operation_ceil": "小数点以下切り上げ値",
    "CALC_calc_operation_round": "四捨五入値",
    "CALC_calc_operation_factorial": "階乗値",
    "CALC_calc_operation_asin": "アークサイン値",
    "CALC_calc_operation_acos": "アークコサイン値",
    "CALC_calc_operation_atan": "アークタンジェント値",
    "CALC_calc_operation_log": "ログ値",
    "CALC_calc_operation_ln": "自然ログ値",
    "CALC_calc_operation_natural": "整数部分",
    "CALC_calc_operation_unnatural": "小数点部分",
    "MOVING_locate_object_time_1": " ",
    "MOVING_locate_object_time_2": "秒間",
    "MOVING_locate_object_time_3": "位置に移動する",
    "wall_up": "上側の壁",
    "wall_down": "下の壁",
    "wall_right": "右の壁",
    "wall_left": "左の壁",
    "CALC_coordinate_x_value": "x座標値",
    "CALC_coordinate_y_value": "y座標値",
    "CALC_coordinate_rotation_value": "方向",
    "CALC_coordinate_direction_value": "移動方向",
    "CALC_picture_index": "模様番号",
    "CALC_picture_name": "模様名",
    "FLOW_repeat_while_true_1": " ",
    "FLOW_repeat_while_true_2": " 繰り返す",
    "TUT_when_start": "プログラム実行をクリックした時",
    "TUT_move_once": "前に1マス移動",
    "TUT_rotate_left": "左側に回転",
    "TUT_rotate_right": "右側に回転",
    "TUT_jump_barrier": "障害物をジャンプする",
    "TUT_repeat_tutorial_1": " ",
    "TUT_repeat_tutorial_2": "～回繰り返す",
    "TUT_if_barrier_1": "もし前に",
    "TUT_if_barrier_2": " があるなら",
    "TUT_if_conical_1": "もし前に",
    "TUT_if_conical_2": " があるなら",
    "TUT_repeat_until": "パーツに到達するまで繰り返す",
    "TUT_repeat_until_gold": "パーツに到達するまで繰り返す",
    "TUT_declare_function": "関数宣言",
    "TUT_call_function": "関数呼び出し",
    "CALC_calc_operation_abs": "絶対値",
    "CONTEXT_COPY_option": "コードコピー",
    "Delete_Blocks": "コード削除",
    "Duplication_option": "コードをコピー&ペースト",
    "Paste_blocks": "ペースト",
    "add_my_storage": "マイボックスに追加する",
    "export_object": "Export Object",
    "Clear_all_blocks": "すべてのコードを削除する",
    "add_comment": "メモを追加する",
    "copy_paste_comment": "メモをコピー＆貼り付けする",
    "copy_comment": "メモをコピーする",
    "delete_comment": "メモを削除する",
    "fold_comment": "メモを折りたたむ",
    "open_comment": "メモを展開する",
    "separate_comment": "メモを分ける",
    "hide_all_comment": "すべてのメモを非表示にする",
    "show_all_comment": "すべてのメモを表示する",
    "transparency": "透明度",
    "BRUSH_change_brush_transparency_1": "筆の透明度を",
    "BRUSH_change_brush_transparency_2": "%大きくする",
    "BRUSH_set_brush_transparency_1": "筆の透明度を",
    "BRUSH_set_brush_transparency_2": "%にする",
    "CALC_char_at_1": " ",
    "CALC_char_at_2": "の",
    "CALC_char_at_3": "番目の文字",
    "CALC_length_of_string_1": " ",
    "CALC_length_of_string_2": "の文字数",
    "CALC_substring_1": " ",
    "CALC_substring_2": "の",
    "CALC_substring_3": "番目の文字から",
    "length_of_string": "番目の文字から",
    "CALC_substring_4": "番目の文字までの文字",
    "CALC_replace_string_1": " ",
    "CALC_replace_string_2": "の",
    "CALC_replace_string_3": "を",
    "CALC_replace_string_4": "に変える",
    "CALC_change_string_case_1": " ",
    "CALC_change_string_case_2": "の",
    "CALC_change_string_case_3": " ",
    "CALC_change_string_case_sub_1": "大文字",
    "CALC_change_string_case_sub_2": "小文字",
    "CALC_index_of_string_1": " ",
    "CALC_index_of_string_2": "から",
    "CALC_index_of_string_3": "ではじまる位置",
    "MOVING_add_direction_by_angle_time_explain_1": " ",
    "MOVING_direction_relative_duration_1": " ",
    "MOVING_direction_relative_duration_2": "秒間移動方向",
    "MOVING_direction_relative_duration_3": "分回転する",
    "CALC_get_sound_volume": "音の値",
    "SOUND_sound_from_to_1": "サウンド",
    "SOUND_sound_from_to_2": " ",
    "SOUND_sound_from_to_3": "秒から",
    "SOUND_sound_from_to_4": "秒まで再生する",
    "SOUND_sound_from_to_and_wait_1": "サウンド",
    "SOUND_sound_from_to_and_wait_2": " ",
    "SOUND_sound_from_to_and_wait_3": "秒から",
    "SOUND_sound_from_to_and_wait_4": "秒まで再生して待つ",
    "CALC_quotient_and_mod_1": " ",
    "CALC_quotient_and_mod_2": "/",
    "CALC_quotient_and_mod_3": "の",
    "CALC_quotient_and_mod_4": " ",
    "CALC_quotient_and_mod_sub_1": "商",
    "CALC_quotient_and_mod_sub_2": "あまり",
    "self": "自分",
    "CALC_coordinate_size_value": "サイズ",
    "CALC_choose_project_timer_action_1": "ストップウォッチ",
    "CALC_choose_project_timer_action_2": " ",
    "CALC_choose_project_timer_action_sub_1": "スタート",
    "CALC_choose_project_timer_action_sub_2": "停止する",
    "CALC_choose_project_timer_action_sub_3": "初期化する",
    "LOOKS_change_object_index_1": " ",
    "LOOKS_change_object_index_2": "送る",
    "LOOKS_change_object_index_sub_1": "一番前に",
    "LOOKS_change_object_index_sub_2": "前に",
    "LOOKS_change_object_index_sub_3": "後ろに",
    "LOOKS_change_object_index_sub_4": "一番後ろに",
    "FLOW_repeat_while_true_until": "になるまで",
    "FLOW_repeat_while_true_while": "の間",
    "copy_block": "ブロックコピー",
    "delete_block": "ブロック削除",
    "tidy_up_block": "コードを整理する",
    "block_hi": "やあ!",
    "entry_bot_name": "Entrybot",
    "hi_entry": "やあ、エントリー!",
    "hi_entry_en": "Hello Entry!",
    "bark_dog": "犬が吠えるサウンド",
    "walking_entryBot": "Walking Entrybot",
    "doggi_bark": "Doggi's Bark",
    "entry": "エントリー",
    "hello": "やあ",
    "nice": "嬉しいな",
    "silent": "無音",
    "do_name": "ド",
    "do_sharp_name": "ド#(レ♭)",
    "re_name": "レ",
    "re_sharp_name": "レ#(ミ♭)",
    "mi_name": "ミ",
    "fa_name": "ファ",
    "fa_sharp_name": "ファ#(ソ♭)",
    "sol_name": "ソ",
    "sol_sharp_name": "ソ#(ラ♭)",
    "la_name": "ラ",
    "la_sharp_name": "ラ#(シ♭)",
    "DUMMY": "ダミー",
    "coconut_stop_motor": "stop motor",
    "coconut_move_motor": "move motor",
    "coconut_turn_motor": "turn",
    "coconut_move_outmotor": "external motor",
    "coconut_turn_left": "left",
    "coconut_turn_right": "right",
    "coconut_move_forward": "forward",
    "coconut_move_backward": "backward",
    "coconut_note_c": "note_c",
    "coconut_note_d": "note_d",
    "coconut_note_e": "note_e",
    "coconut_note_f": "note_f",
    "coconut_note_g": "note_g",
    "coconut_note_a": "note_a",
    "coconut_note_b": "note_b",
    "coconut_move_speed_1": "0",
    "coconut_move_speed_2": "50",
    "coconut_move_speed_3": "100",
    "coconut_move_speed_4": "150",
    "coconut_move_speed_5": "255",
    "coconut_play_buzzer_hn": "Half",
    "coconut_play_buzzer_qn": "Quater",
    "coconut_play_buzzer_en": "Eighth",
    "coconut_play_buzzer_sn": "Sixteenth",
    "coconut_play_buzzer_tn": "Thirty-second",
    "coconut_play_buzzer_wn": "Whole",
    "coconut_play_buzzer_dhn": "Dotted half",
    "coconut_play_buzzer_dqn": "Dotted quarter",
    "coconut_play_buzzer_den": "Dotted eighth",
    "coconut_play_buzzer_dsn": "Dotted sixteenth",
    "coconut_play_buzzer_dtn": "Dotted thirty-second",
    "coconut_rest_buzzer_hr": "Half_rest",
    "coconut_rest_buzzer_qr": "Quater_rest",
    "coconut_rest_buzzer_er": "Eighth_rest",
    "coconut_rest_buzzer_sr": "Sixteenth_rest",
    "coconut_rest_buzzer_tr": "Thirty-second rest",
    "coconut_rest_buzzer_wr": "Whole_rest",
    "coconut_play_midi_1": "Twinkle Twinkle little star",
    "coconut_play_midi_2": "Three bears",
    "coconut_play_midi_3": "Mozart's Lullaby",
    "coconut_play_midi_4": "Do-Re-Mi",
    "coconut_play_midi_5": "Butterfly",
    "coconut_floor_sensing_on": "detect",
    "coconut_floor_sensing_off": "not detect",
    "coconut_dotmatrix_set_on": "on",
    "coconut_dotmatrix_set_off": "off",
    "coconut_dotmatrix_row_0": "all",
    "coconut_dotmatrix_row_1": "1",
    "coconut_dotmatrix_row_2": "2",
    "coconut_dotmatrix_row_3": "3",
    "coconut_dotmatrix_row_4": "4",
    "coconut_dotmatrix_row_5": "5",
    "coconut_dotmatrix_row_6": "6",
    "coconut_dotmatrix_row_7": "7",
    "coconut_dotmatrix_row_8": "8",
    "coconut_dotmatrix_col_0": "all",
    "coconut_dotmatrix_col_1": "1",
    "coconut_dotmatrix_col_2": "2",
    "coconut_dotmatrix_col_3": "3",
    "coconut_dotmatrix_col_4": "4",
    "coconut_dotmatrix_col_5": "5",
    "coconut_dotmatrix_col_6": "6",
    "coconut_dotmatrix_col_7": "7",
    "coconut_dotmatrix_col_8": "8",
    "coconut_sensor_left_proximity": "left IR distance",
    "coconut_sensor_right_proximity": "right IR distance",
    "coconut_sensor_both_proximity": "both IR distance",
    "coconut_sensor_left_floor": "left line tracer",
    "coconut_sensor_right_floor": "right line tracer",
    "coconut_sensor_both_floor": "both line tracer",
    "coconut_sensor_acceleration_x": "X-Axis Accelerometer",
    "coconut_sensor_acceleration_y": "Y-Axis Accelerometer",
    "coconut_sensor_acceleration_z": "Z-Axis Accelerometer",
    "coconut_sensor_light": "light sensor",
    "coconut_sensor_temperature": "temperature",
    "coconut_left_led": "left led",
    "coconut_right_led": "right led",
    "coconut_both_leds": "both led",
    "coconut_color_cyan": "Cyan",
    "coconut_color_magenta": "Magenta",
    "coconut_color_black": "Black",
    "coconut_color_white": "White",
    "coconut_color_red": "Red",
    "coconut_color_yellow": "Yellow",
    "coconut_color_green": "Green",
    "coconut_color_blue": "Blue",
    "coconut_beep": "buzzer on",
    "coconut_clear_buzzer": "buzzer off",
    "coconut_x_axis": "X-Axis",
    "coconut_y_axis": "Y-Axis",
    "coconut_z_axis": "Z-Axis",
    "modi_enviroment_bule": "Blue",
    "modi_enviroment_green": "Green",
    "modi_enviroment_humidity": "Humidity",
    "modi_enviroment_illuminance": "Illuminance",
    "modi_enviroment_red": "Red",
    "modi_enviroment_temperature": "Temparature",
    "modi_gyroscope_xAcceleratior": "X-axis acceleration",
    "modi_gyroscope_yAcceleratior": "Y-axis acceleration",
    "modi_gyroscope_zAcceleratior": "Z-axis acceleration",
    "modi_motor_angle": "Angle",
    "modi_motor_speed": "Speed",
    "modi_motor_torque": "Torque",
    "modi_speaker_F_DO_5": "DO 5",
    "modi_speaker_F_DO_6": "DO 6",
    "modi_speaker_F_DO_7": "DO 7",
    "modi_speaker_F_DO_S_5": "DO #5",
    "modi_speaker_F_DO_S_6": "DO #6",
    "modi_speaker_F_DO_S_7": "DO #7",
    "modi_speaker_F_MI_5": "MI 5",
    "modi_speaker_F_MI_6": "MI 6",
    "modi_speaker_F_MI_7": "MI 7",
    "modi_speaker_F_PA_5": "FA 5",
    "modi_speaker_F_PA_6": "FA 6",
    "modi_speaker_F_PA_7": "FA 7",
    "modi_speaker_F_PA_S_5": "FA #5",
    "modi_speaker_F_PA_S_6": "FA #6",
    "modi_speaker_F_PA_S_7": "FA #7",
    "modi_speaker_F_RA_5": "LA 5",
    "modi_speaker_F_RA_6": "LA 6",
    "modi_speaker_F_RA_7": "LA 7",
    "modi_speaker_F_RA_S_5": "LA #5",
    "modi_speaker_F_RA_S_6": "LA #6",
    "modi_speaker_F_RA_S_7": "LA #7",
    "modi_speaker_F_RE_5": "RE 5",
    "modi_speaker_F_RE_6": "RE 6",
    "modi_speaker_F_RE_7": "RE 7",
    "modi_speaker_F_RE_S_5": "LA #5",
    "modi_speaker_F_RE_S_6": "RE #6",
    "modi_speaker_F_RE_S_7": "RE #7",
    "modi_speaker_F_SOL_5": "SOL 5",
    "modi_speaker_F_SOL_6": "SOL 6",
    "modi_speaker_F_SOL_7": "SOL 7",
    "modi_speaker_F_SOL_S_5": "SOL #5",
    "modi_speaker_F_SOL_S_6": "SOL #6",
    "modi_speaker_F_SOL_S_7": "SOL #7",
    "modi_speaker_F_SO_5": "TI 5",
    "modi_speaker_F_SO_6": "TI 6",
    "modi_speaker_F_SO_7": "TI 7",
    "si_name": "シ",
    "ev3_ccw": "CCW",
    "ev3_cw": "CW",
    "rokoboard_sensor_name_0": "Sound",
    "rokoboard_sensor_name_1": "Light",
    "rokoboard_sensor_name_2": "Slider",
    "rokoboard_sensor_name_3": "resistance-A",
    "rokoboard_sensor_name_4": "resistance-B",
    "rokoboard_sensor_name_5": "resistance-C",
    "rokoboard_sensor_name_6": "resistance-D",
    "rokoboard_string_1": "Button Pressed",
    "HW_MOTOR": "モーター",
    "HW_SENSOR": "センサー",
    "HW_LED": "発光ダイオード",
    "HW_MELODY": "メロディ",
    "HW_ROBOT": "ロボット",
    "ALTINO_ACCX": "acceleration X axis",
    "ALTINO_ACCY": "acceleration Y axis",
    "ALTINO_ACCZ": "acceleration Z axis",
    "ALTINO_BAT": "battery check",
    "ALTINO_CDS": "light",
    "ALTINO_GYROX": "gyro X axis",
    "ALTINO_GYROY": "gyro Y axis",
    "ALTINO_GYROZ": "gyro Z axis",
    "ALTINO_IR1": "1 distance",
    "ALTINO_IR2": "2 distance",
    "ALTINO_IR3": "3 distance",
    "ALTINO_IR4": "4 distance",
    "ALTINO_IR5": "5 distance",
    "ALTINO_IR6": "6 distance",
    "ALTINO_Led_Brake_Light": "brake",
    "ALTINO_Led_Forward_Light": "forward",
    "ALTINO_Led_Reverse_Light": "backward",
    "ALTINO_Led_Turn_Left_Light": "left direction",
    "ALTINO_Led_Turn_Right_Light": "right direction",
    "ALTINO_Line": "line",
    "ALTINO_MAGX": "geomagnetic X axis",
    "ALTINO_MAGY": "geomagnetic Y axis",
    "ALTINO_MAGZ": "geomagnetic Z axis",
    "ALTINO_REMOTE": "remote control",
    "ALTINO_STTOR": "steering torque",
    "ALTINO_STVAR": "steering potentiometer",
    "ALTINO_Steering_Angle_Center": "center",
    "ALTINO_Steering_Angle_Left10": "left10",
    "ALTINO_Steering_Angle_Left15": "left15",
    "ALTINO_Steering_Angle_Left20": "left20",
    "ALTINO_Steering_Angle_Left5": "left5",
    "ALTINO_Steering_Angle_Right10": "right10",
    "ALTINO_Steering_Angle_Right15": "right15",
    "ALTINO_Steering_Angle_Right20": "right20",
    "ALTINO_Steering_Angle_Right5": "right5",
    "ALTINO_TEM": "temperature",
    "ALTINO_TOR1": "right torque",
    "ALTINO_TOR2": "left torque",
    "ALTINO_Value": "output value",
    "ALTINO_a": "la",
    "ALTINO_a2": "la#",
    "ALTINO_b": "si",
    "ALTINO_c": "do",
    "ALTINO_c2": "do#",
    "ALTINO_d": "re",
    "ALTINO_d2": "re#",
    "ALTINO_dot_display_1": "one char",
    "ALTINO_dot_display_2": "display",
    "ALTINO_e": "mi",
    "ALTINO_f": "fa",
    "ALTINO_f2": "fa#",
    "ALTINO_g": "sol",
    "ALTINO_g2": "sol#",
    "ALTINO_h": "off",
    "ALTINO_h2": "on",
    "ALTINO_leftWheel": "left",
    "ALTINO_melody_ms": "play",
    "ALTINO_outputValue": "output",
    "ALTINO_rightWheel": "right",
    "ALTINO_set": " display",
    "ardublock_motor_forward": "Forward",
    "ardublock_motor_backward": "Backward",
    "jdkit_clockwise": "시계방향",
    "jdkit_counterclockwise": "반시계방향",
    "jdkit_gyro_frontrear": "앞뒤",
    "jdkit_gyro_leftright": "좌우",
    "jdkit_joystick_leftleftright": "왼쪽 좌우",
    "jdkit_joystick_lefttopbottom": "왼쪽 상하",
    "jdkit_joystick_rightleftright": "오른쪽 좌우",
    "jdkit_joystick_righttopbottom": "오른쪽 상하",
    "jdkit_led": "LED",
    "jdkit_led_color_green": "초록색",
    "jdkit_led_color_orange": "오랜지색",
    "jdkit_led_turnoff": "끄기",
    "jdkit_led_turnon": "켜기",
    "jdkit_motor_leftbottom": "왼쪽아래",
    "jdkit_motor_lefttop": "왼쪽위",
    "jdkit_motor_rightbottom": "오른쪽아래",
    "jdkit_motor_righttop": "오른쪽위",
    "jdkit_tune_do": "도",
    "jdkit_tune_fa": "파",
    "jdkit_tune_la": "라",
    "jdkit_tune_mi": "미",
    "jdkit_tune_re": "레",
    "jdkit_tune_si": "시",
    "jdkit_tune_sol": "솔",
    "FUNBOARD_bt_down": "yellow(B)",
    "FUNBOARD_bt_left": "green(C)",
    "FUNBOARD_bt_right": "blue(D)",
    "FUNBOARD_bt_up": "red(A)",
    "FUNBOARD_column_tag": "column",
    "FUNBOARD_do_off": "off",
    "FUNBOARD_do_on": "on",
    "FUNBOARD_led_color_all": "모두",
    "FUNBOARD_led_color_blue": "blue",
    "FUNBOARD_led_color_green": "green",
    "FUNBOARD_led_color_red": "red",
    "FUNBOARD_led_color_str": "color  ",
    "FUNBOARD_led_color_yellow": "yellow",
    "FUNBOARD_led_off_str": "Turn off the LED",
    "FUNBOARD_led_on_str": "Turn on the LED",
    "FUNBOARD_row_tag": "row",
    "FUNBOARD_scroll_down": "downward",
    "FUNBOARD_scroll_left": "leftward",
    "FUNBOARD_scroll_no": "no",
    "FUNBOARD_scroll_right": "rightward",
    "FUNBOARD_scroll_up": "upwards",
    "FUNBOARD_sensor_cds": "light sensor",
    "FUNBOARD_sensor_mic": "microphone sensor",
    "FUNBOARD_sensor_slide": "potentiometer",
    "FUNBOARD_sensor_state_1": "low",
    "FUNBOARD_sensor_state_2": "high",
    "FUNBOARD_touchbt_down": "yellow(B)",
    "FUNBOARD_touchbt_enter": "   F",
    "FUNBOARD_touchbt_escape": "   G",
    "FUNBOARD_touchbt_left": "green(C)",
    "FUNBOARD_touchbt_right": "blue(D)",
    "FUNBOARD_touchbt_space": "   E",
    "FUNBOARD_touchbt_up": "red(A)",
    "funboard_dotmatrix_set_off": "off",
    "funboard_dotmatrix_set_on": "on",
    "AI_UTILIZE": "AI",
    "video_show_video": "表示",
    "video_hide_video": "非表示",
    "video_brightness": "明度",
    "video_transparency": "透明度",
    "video_left_right": "右反",
    "video_top_bottom": "上下",
    "video_human": "体",
    "video_face": "顔",
    "video_object": "物",
    "video_start": "始める",
    "video_end": "止める",
    "video_gender": "性別",
    "video_age": "年齢",
    "video_emotion": "感情",
    "video_motion_onself": "自分",
    "video_motion_onscreen": "画面",
    "video_motion_scale": "モーション",
    "video_motion_direction_horizontal": "x 方向",
    "video_motion_direction_vertical": "y 方向",
    "table_row": "行",
    "table_col": "列",
    "table_sum": "sum",
    "table_max": "max",
    "table_min": "min",
    "table_avg": "average",
    "table_stdev": "standard deviation",
    "arduino_lite_reconnect": "再接続する",
    "arduino_lite_download_firmware": "ファームウェア",
    "arduino_lite_download_driver": "ドライバー",
    "arduino_lite_connect": "ブラウザーで接続",
    "arduino_lite_disconnect": "キャンセル",
    "arduino_lite_guide": "• connection guide",
};
Lang.video_body_coord_params = {
    "left_eye": "左眼",
    "right_eye": "右眼",
    "nose": "鼻",
    "left_mouth": "左口",
    "right_mouth": "右口",
    "upper_lip": "上口",
    "lower_lip": "下口",
    "face": "顔",
    "neck": "首",
    "left_ear": "左耳",
    "right_ear": "右耳",
    "left_shoulder": "左肩",
    "left_elbow": "左肘",
    "left_wrist": "左手首",
    "left_hip": "左尻",
    "left_knee": "左膝",
    "left_ankle": "左足首",
    "right_shoulder": "右肩",
    "right_elbow": "右肘",
    "right_wrist": "右手首",
    "right_hip": "右尻",
    "right_knee": "右膝",
    "right_ankle": "右足首"
};
Lang.video_emotion_params = {
    "angry": "怒り",
    "disgusted": "嫌悪",
    "fearful": "恐怖",
    "happy": "幸せ",
    "neutral": "無表情",
    "sad": "悲しみ",
    "surprised": "驚き"
};
Lang.video_object_params = {
    "person": "人",
    "bicycle": "自転車",
    "car": "車",
    "motorcycle": "オートバイ",
    "airplane": "飛行機",
    "bus": "バス",
    "train": "列車",
    "truck": "トラック",
    "boat": "ボート",
    "traffic light": "信号機",
    "fire hydrant": "消火栓",
    "stop sign": "一時停止標識",
    "parking meter": "パーキングメーター",
    "bench": "ベンチ",
    "bird": "鳥",
    "cat": "ネコ",
    "dog": "犬",
    "horse": "うま",
    "sheep": "羊",
    "cow": "牛",
    "elephant": "象",
    "bear": "くま",
    "zebra": "シマウマ",
    "giraffe": "キリン",
    "backpack": "バックパック",
    "umbrella": "傘",
    "handbag": "ハンドバッグ",
    "tie": "ネクタイ",
    "suitcase": "スーツケース",
    "frisbee": "フリスビー",
    "skis": "スキー板",
    "snowboard": "snowboard",
    "sports ball": "スポーツボール",
    "kite": "カイト",
    "baseball bat": "野球用バット",
    "baseball glove": "野球グローブ",
    "skateboard": "スケートボード",
    "surfboard": "サーフボード",
    "tennis racket": "テニスラケット",
    "bottle": "ボトル",
    "wine glass": "ワイングラス",
    "cup": "カップ",
    "fork": "フォーク",
    "knife": "ナイフ",
    "spoon": "スプーン",
    "bowl": "丼鉢",
    "banana": "バナナ",
    "apple": "林檎",
    "sandwich": "サンドイッチ",
    "orange": "オレンジ",
    "broccoli": "ブロッコリ",
    "carrot": "にんじん",
    "hot dog": "ホットドッグ",
    "pizza": "ピザ",
    "donut": "ドーナツ",
    "cake": "ケーキ",
    "chair": "椅子",
    "couch": "ソファー",
    "potted plant": "鉢植え",
    "bed": "ベッド",
    "dining table": "食卓",
    "toilet": "トイレ",
    "tv": "テレビ",
    "laptop": "ラップトップ",
    "mouse": "マウス",
    "remote": "リモコン",
    "keyboard": "キーボード",
    "cell phone": "携帯電話",
    "microwave": "電子レンジ",
    "oven": "オーブン",
    "toaster": "トースター",
    "sink": "シンク",
    "refrigerator": "冷蔵庫",
    "book": "本",
    "clock": "時計",
    "vase": "花瓶",
    "scissors": "はさみ",
    "teddy bear": "テディベア",
    "hair drier": "ヘアドライヤー",
    "toothbrush": "歯ブラシ"
};
Lang.Buttons = {
    "share_policy": "Share Guide",
    "write_policy": "Write Guide",
    "lesson_list": "講義リスト",
    "complete_study": "学習を完了する",
    "show_me": "プレビュー",
    "do_this_for_me": "代わりに行う",
    "previous": "前",
    "get_started": "スタート",
    "next_lesson": "次の内容を学習する",
    "course_submit": "提出する",
    "course_done": "確認",
    "mission": "ミッションを確認する",
    "basic_guide": "基本的な使用方法",
    "apply": "適用する",
    "add": "追加する",
    "cancel": "取消",
    "save": "確認",
    "start": "はじめ",
    "confirm": "確認",
    "delete": "削除",
    "create": "クラス作成",
    "done": "完了",
    "accept": "応答",
    "refuse": "拒否",
    "yes": "はい",
    "button_no": "いいえ",
    "quiz_retry": "もう一度解く",
    "discuss_upload": "読み込む",
    "maze_popup_guide": "利用案内",
    "maze_popup_mapHint": "ヒントを見る",
    "maze_hint_btn_guide": "利用案内",
    "maze_hint_btn_block": "ブロックヘルプ",
    "maze_hint_btn_map": "ヒントを見る",
    "maze_hint_btn_goal": "目標",
    "list_save": "保存する",
    "duplication": "コピーする",
    "export_to_excel": "ダウンロード",
    "single_line": "一行で書く",
    "multi_line": "改行して書く",
    "lecture_finish_popup_reset_lecture": "처음부터 다시하기",
    "lecture_finish_popup_show_output": "실습한 코드보기",
    "lecture_view_hints": "View hints",
    "default_hint_title": "どのように作るか",
    "show_only_vector": "Only Vector"
};
Lang.Menus = {
    "nothing_to_import": "読み込みできる項目がありません。",
    "nothing_to_export": "書き出しできる項目がありません。",
    "content_copied": "内容がコピーされました。",
    "list_import_title": "読み込む",
    "list_import_placeholder": "例）\n内容1\n内容2\n内容3\n内容4\n内容5\n内容6\n内容7\n内容8",
    "verifying_email": "認証メール送信",
    "list_import_notice_1": "複数の項目の内容を一度に登録することができます。",
    "list_import_notice_2": "既存の内容は、新しく保存する内容に上書きされます。",
    "list_export_title": "リストを書き出す",
    "list_export_notice": "リストの項目の内容をコピーしたり、Excelでダウンロードすることができます。",
    "robotis_opencm70": "Robotis Open CM70",
    "cannnot_mark_favorite": "非公開の作品は関心作品に指定できません。",
    "enterPassword": "パスワードを入力してください。",
    "enterPassword_update": "変更を保存するためにパスワードを入力してください。",
    "enterNewPassword": "新しいパスワードを入力してください。",
    "reEnterNewPassword": "新しいパスワードを再入力してください。",
    "resign": "会員退会",
    "check_sended_email": "送信された認証メールを確認し、メールアドレスを認証してください。",
    "signUpEmail_1": "入力されたメールアドレスに認証メールを送信しました。",
    "signUpEmail_2": "メールアドレスを認証してください。",
    "select_email_unauthenticated_user": "The email address is registered to the IDs below.\nPlease choose the right one.",
    "select_user": "Please choose the ID.",
    "enter_password_withdraw": "会員退会手続きのため、パスワードを入力してください。",
    "instruction_agree": "次の内容に同意してください。",
    "check_instructions": "上記の内容に同意します。",
    "deleteAccount_2": "会員退会手続きから30日後に会員情報と作品/講義/クラス/投稿/コメント/いいね/関心情報はすべて削除され、復元できなくなります。",
    "deleteAccount_1": "会員退会手続きから30日以内にログインすると、会員退会を取り消すことができます。",
    "protect_account": "安全なパスワードであなたの情報を保護してください。",
    "please_verify": "認証メールを送信し、メールアドレスを認証してください。",
    "unverified_email": "メールアドレス認証に失敗しました。",
    "deleteAccount": "会員退会手続き",
    "corporatePersonal": "個人情報の移転に同意します。",
    "corporateTransferGuide": "個人情報譲受人(「エントリー」ウェブサイト運営者)について",
    "corporateReciever": "個人情報の移転を受ける者: 財団法人CONNECT",
    "corporateAddress": "CONNECTの住所及び連絡先",
    "corporateAddress_1": "ソウル市江南区江南大路382 メリッツタワー7階",
    "corporateConsent": "個人情報の移転を希望しない場合の同意撤回方法",
    "corporateEmail": "アカウントに登録されたメールアドレスで退会手続きのメールを送信",
    "corporateAddition": "併せまして、営業譲渡に伴い規約等が次のように変更になります。",
    "corporateApplicationDate": "適用時期 : 2017年10月29日",
    "corporateTargetChanges": "適用対象及び変更内容:",
    "corporateTarget": "適用対象",
    "corporateChanges": "変更内容",
    "corporateTerms": "エントリー利用規約",
    "corporateOperator": "ウェブサイト運営者の名称変更",
    "corporateClassroomTerms": "クラスサービス利用規約",
    "doAgreeWithClassroomTerms": "クラスサービス利用規約に同意します。",
    "doChangePassword": "他人に分かりにくいパスワードに変更してください。",
    "corporatePrivacyPolicy": "プライバシーポリシー",
    "corporateConsignment": "ウェブサイト運営者の名称変更及び個人情報委託企業を追加",
    "corporateEntrusted": "受諾業: NHN Technology Service(株)",
    "corporateConsignmentDetails": "委託業務の内容: サービス開発及び運営",
    "corporatePeriod": "保有期間 : 会員退会時または委託契約終了時まで",
    "corporateChangeDate": "変更適用日 : 2017年10月29日付",
    "corporateWarning": "個人情報の移転に同意してください。",
    "corporateConfirm": "確認",
    "corporateTitle": "平素よりエントリー教育研究所をご愛顧頂きまして誠にありがとうございます。<br>「エントリー」をご利用中の会員の皆様に心より感謝申し上げます。<br>エントリー教育研究所はこれまで公的な目的で運営してまいりました「エントリー」ウェブサイトの運営を<br>NAVERが設立した非営利財団であるCONNECT財団に譲渡することで合意いたしました。<br>今後、エントリーはCONNECT財団において公益目的で継続的に運営される<br>予定であり、会員の皆様はこれまでと同様にエントリーをご利用いただけます。<br>ウェブサイト提供主体がエントリー教育研究所からCONNECT財団に変更されるため、以下の<br>ような会員個人情報に関する移転がございますが、本合意により実際の個人情報の位置が<br>物理的に移動したわけではございません。",
    "textcoding_numberError_f": "登録された関数の中に名前の一文字目が数字の関数があるとモード変換できません。",
    "textcoding_bookedError_1f": "登録された関数の中に関数名が",
    "textcoding_bookedError_2f": "の関数があるとモード変換できません。",
    "textcoding_specialCharError_f": "登録された関数の中の名前に「_」を除く記号がある場合、モード変換できません。",
    "textcoding_numberError_v": "登録された変数の中に名前の一文字目が数字の変数があるとモード変換できません。",
    "textcoding_bookedError_1v": "登録された変数の中に変数名が",
    "textcoding_bookedError_2v": " の変数があるとモード変換できません。",
    "textcoding_specialCharError_v": "登録された変数の中の名前に「_」を除く記号がある場合、モード変換できません。",
    "textcoding_numberError_l": "登録されたリストの中に名前の一文字目が数字であるリストがあるとモード変換できません。",
    "textcoding_bookedError_1l": "登録されたリストの中にリスト名が",
    "textcoding_bookedError_2l": "のリストがあるとモード変換できません。",
    "textcoding_specialCharError_l": "登録されたリストの中に名前に「_」を除く記号がある場合、モード変換できません。",
    "no_discuss_permission": "投稿を閲覧するための権限がありません。",
    "delete_comment": "コメントを削除しますか?",
    "delete_article": "投稿を削除しますか?",
    "discuss_cannot_edit": "自分の投稿ではありません。",
    "discuss_extention": "実行ファイルは添付できません。",
    "delete_discuss_picture": "写真を削除しますか?",
    "delete_discuss_file": "ファイルを削除しますか?",
    "discuss_save_question": "投稿を保存しますか?",
    "discuss_cancle_question": "作成を取消しますか?",
    "discuss_saved": "が保存されました。",
    "discuss_no_write_permission": "現在ログイン中のアカウントでは投稿を作成できません。",
    "discuss_no_project_permission": "現在ログイン中のアカウントでは作品を掲示できません。",
    "discuss_write_abuse_detected": "短時間に複数の投稿が作成されました。\n1分後にやり直してください。",
    "contents_abuse_detected": "5分後にやり直してください。",
    "contents_abuse_detected_10": "10分後にやり直してください。",
    "discuss_new_write_abuse_warn": "短時間に複数のコメントを作成した場合、\nコメントの作成が制限されることがあります。\nあらかじめご注意ください。",
    "discuss_write_abuse_warn": "短時間に複数のコメントを作成した場合、\nコメントの作成が制限されることがあります。\nあらかじめご注意ください。",
    "find_not_your_email": "メールアドレスが正しくありません",
    "search_lang": "検索",
    "search_title": "タイトル",
    "faq_desc": "エントリー利用中に不明な点がございましたら、回答を確認してみてください。",
    "faq_all": "すべて表示",
    "faq_site": "サイトのご利用について",
    "faq_project": "作品を作る",
    "faq_hardware": "ハードウェア",
    "faq_offline": "オフライン",
    "faq_copyright": "著作権",
    "faq_title": "よくある質問",
    "faq": "よくある質問",
    "malicious_warning": "不健全な写真は読み込むことができません。不健全な写真でない場合は「提案と意見」に写真を添付してお知らせください。",
    "fword_alert_msg": "悪口や不健全な投稿は掲示できません。",
    "fword_alert_1": "テーマに関係のない悪口や悪意のあるコメントは掲示できません。",
    "fword_alert_2": "不健全な単語が含まれているため、代替テキストが掲示されます。",
    "fword_replace_1": "エントリーを通して、誰でも簡単に楽しくソフトウェアについて学ぶことができます。",
    "fword_replace_2": "ソフトウェア教育の第一歩、エントリー。",
    "fword_replace_3": "楽しく学べる学習スペース、エントリー!",
    "fword_replace_4": "エントリーで共有と協業を行い、素晴らしい作品を作りましょう。",
    "fword_replace_5": "エントリーは誰でも無料でソフトウェア教育を受けることができるよう開発されたソフトウェア教育プラットフォームです。",
    "fword_replace_6": "エントリーと一緒に健全なソフトウェア教育環境を作りましょう!",
    "fword_replace_7": "エントリーで学び、作り、共有しながら一緒に成長しましょう。",
    "solve_quiz": "クイズに挑戦する",
    "submit_homework_first_title": "完成! 課題を提出する",
    "submit_homework_first_content": "素晴らしい作品が完成しました。課題を提出してください。締切期限前まで再提出できます。",
    "submit_homework_again_title": "課題を再提出する",
    "submit_homework_again_content": "すでに提出した課題です。<br>課題を再提出しますか?",
    "submit_homework_expired_title": "課題提出締切",
    "submit_homework_expired_content": "課題の提出が締め切られました。",
    "done_study_title": "完成",
    "done_study_content": "作成した作品を実行してみましょう。",
    "featured_courses": "オススメ講義集",
    "follow_along": "やってみる",
    "follow_along_desc": "少しずつ進めながらバラエティ豊かな作品を制作します。",
    "do_quiz": "クイズに挑戦する",
    "do_quiz_desc": "学習した内容を十分理解できているか、クイズを通して確認します。",
    "challenge": "挑戦する",
    "play": "挑戦する",
    "challenge_desc": "与えられた問題を自ら解決し、概念を身に着けます。",
    "creste_freely": "自由に作る",
    "creste_freely_desc": "学習した内容で自分だけの作品を自由に制作します。",
    "entry_rc_desc": "プログラミングの原理を学習レベルに合わせて学べるエントリー講義集! 今すぐ始めてみましょう!<br>お手本にしながら挑戦してソフトウェアを制作すれば、難しく感じられたプログラミングの原理も楽しく簡単に身につきます!",
    "hw_deadline": "締切日",
    "rc_course_desc": "プログラミングの原理を学習レベルに合わせて学べるよう構成されたエントリー講義集です。",
    "rc_course": "オススメ講義集",
    "entry_rec_course": "エントリーオススメ講義集",
    "entry_rec_course_desc": "誰でも簡単に、真似をしながら楽しくバラエティ豊かなソフトウェアを制作できるエントリー講義を紹介します。",
    "guidance": "案内",
    "wait": "ストップ！",
    "hint": "ヒント",
    "concept_guide": "概念バッチリ",
    "group_quiz": "クラスクイズ",
    "fail_check_hint": "あっ…失敗! もう一度挑戦してみてください!<br>難しい時は[ヒント]を確認してください!",
    "sort_student": "学生別",
    "sort_lesson": "講義別",
    "sort_course": "講義集別",
    "student_progress": "クラスの進度",
    "my_progress": "自分の進度",
    "lec_in_progress": "学習中",
    "free_modal_asgn_over": "課題の提出が締め切られました。",
    "free_submission_closed": "課題提出締切",
    "free_modal_asgn_submit_first": "素晴らしい作品が完成しました! 課題を提出してください。<br>締切期限前まで再提出できます。",
    "asgn_submit": "完成! 課題を提出する",
    "free_modal_content_resubmit": "すでに提出した課題です。<br>課題を再提出しますか?",
    "asgn_resubmit": "課題を再提出する",
    "free_modal_content_complete": "素晴らしい作品が完成しました。",
    "guide_modal_content_complete": "制作した作品を実行してみましょう。",
    "success": "成功",
    "fail": "失敗",
    "mission_modal_content_fail": "<br>難しい時は[ヒント]を確認してください!",
    "mission_modal_content_success": "作った作品を実行してみましょう。",
    "in_progress": "進行中",
    "completed": "完了",
    "submitted": "提出完了",
    "submission_closed": "締切",
    "progress": "進行状況",
    "study_completed": "学習完了",
    "view_course_desc": "コースウェアの説明を見る",
    "main_entry_starter": "基礎から! エントリースターター",
    "main_entry_booster": "概念固め! エントリーブースター",
    "main_entry_master": "思考を広げる! エントリーマスター",
    "no_students_in_classroom": "まだ登録された学生がいません。<br>学生を直接追加するか招待してください!",
    "lectures": "講義",
    "Lectures": "講義",
    "studentHomeworkList": "課題",
    "curriculums": "講義集",
    "Curriculums": "講義集",
    "quiz": "クイズ",
    "no_added_group_contents_teacher": "追加された%1がありません。<br>クラス%1を追加してください。",
    "no_added_group_contents_student": "まだアップロードされた%1がありません。先生が%1をアップロードすると、学習内容を確認できます。",
    "side_project": "サブプロジェクト",
    "custom_make_course_1": "「オープン講義を作成する>講義集を作成する」で",
    "custom_make_course_2": "自分だけの講義集を作成してみてください。",
    "custom_make_lecture_1": "「オープン講義を作成する」で",
    "custom_make_lecture_2": "自分だけの講義を作成してみてください。",
    "alert_enter_info": "修正したい情報を入力してください。",
    "alert_enter_new_pwd": "既存のパスワードと違うパスワードを入力してください。",
    "alert_match_pwd": "新しいパスワードと再入力されたパスワードが一致しません。",
    "alert_check_pwd": "パスワードを確認してください。",
    "alert_update_complete": "修正が完了しました。",
    "no_group_contents_each_prefix": "クラス",
    "no_group_contents_each_suffix": " がありません。",
    "no_group_contents_all": "クラスにアップロードされたコンテンツがありません。<br>「クラスで共有する」に<br>自分の作品を共有してみてください!",
    "hw_closed": "課題締切",
    "tag_Lecture": "講義",
    "tag_Curriculum": "講義集",
    "tag_Discuss": "お知らせ",
    "count_ko": "件",
    "no_asgn_within_week": "1週間以内に提出する必要のある、締切間近の課題はありません。",
    "lecture_and_curriculum": "講義/講義集",
    "assignments_plural": "課題",
    "assignments_singular": "課題",
    "project_plural": "作品",
    "group_news": "新しいニュース",
    "stu_management": "学生管理",
    "stu_management_camel": "学生管理",
    "view_all": "すべて表示",
    "view_all_camel": "すべて表示",
    "view_contents_camel": "コンテンツを見る",
    "view_contents": "コンテンツを見る",
    "no_updated_news": "自分のクラスにアップロードされた新しいニュースはありません。",
    "homework_soon_due": "締切間近の課題",
    "new_homework": "最新の課題",
    "no_new_homework": "新しい課題はありません。",
    "student_plural": "学生",
    "discuss": "お知らせ",
    "basic_project": "基本作品",
    "no_permission": "権限がありません。",
    "no_comment_write_permission": "現在ログイン中のアカウントではコメントを作成できません。",
    "original_curriculum_deleted": "講義原本集が削除されました。",
    "original_curriculum": "講義原本集",
    "save_as_my_lecture": "コピーで保存する",
    "delete_confirm": "削除通知",
    "lecture_open_as_copied": "オープン講義ページにアップロードされたすべての講義はコピーを作成して公開されます。",
    "curriculum_open_as_copied": "オープン講義集ページにアップロードされたすべての講義集はコピーを作成して公開されます。",
    "lecture_save_as_copied_group": "クラス講義ページにアップロードされたすべての講義はコピーを作成して公開されます。",
    "curriculum_save_as_copied_group": "クラス講義集ページにアップロードされたすべての講義集はコピーを作成して公開されます。",
    "homework_save_as_copied_group": "クラス課題ページにアップロードされたすべての課題はコピーを作成して公開されます。",
    "lecture_save_as_copied": "自分が作った講義集内に挿入された構成講義はコピーを作成して保存されます。",
    "done_project_save_as_copied": "自分が作った講義案に挿入された完成作品はコピーを作成して保存されます。",
    "textbook_project_can_not_applied": "",
    "original_lecture_deleted": "講義原本が削除されました。",
    "original_lecture": "講義原本",
    "lecture_save_as_mine_alert": "保存されました。\n保存された講義は「マイページ> 自分の講義」で確認できます。",
    "lecture_save_as_mine": "自分の講義に保存する",
    "duplicate_username": "すでに入力したIDです。",
    "share_your_project": "あなたが作った作品を共有してみてください",
    "not_available_student": "クラスで発行された「クラスID」です。\n「エントリー会員ID」を入力してください。",
    "login_instruction": "ログインについて",
    "login_needed": "ログインしてからご利用いただけます。",
    "login_as_teacher": "教師アカウントでログインしてからご利用いただけます。",
    "remove_my_storage": "マイボックスから削除しますか？削除したブロック／オブジェクトは元に戻せません。",
    "submit_hw": "課題を提出する",
    "success_goal": "目標達成",
    "choseok_final_result": "よし、自分だけの作品を完成したぞ!",
    "choseok_fail_msg_timeout": "タイムオーバーだぜ。目標をよく見てもう一度チャレンジしてみようぜ!",
    "choseok_fail_msg_die": "ライフが0以下なのにまだゲームが終ってないぞ。\n下のブロックを使ってもう一度チャレンジしてみないか?",
    "grade_1": "初級",
    "grade_2": "中級",
    "grade_3": "上級",
    "find_sally_title": "サリーを探せ",
    "save_sally_title": "サリーを救え",
    "exit_sally_title": "サリーと脱出",
    "find_sally": "LINEレンジャーの力を一つに合わせて\n最強ボス・メフィストを倒し、サリーを救ってください!",
    "save_sally": "メフィストの基地に閉じ込められたサリー。\nLINEレンジャーが障害物を避けてサリーを探し出せる\nように手伝ってください!",
    "exit_sally": "爆破されたメフィストの基地から\nサリーとLINEレンジャーが無事脱出できるように\n手伝ってください!",
    "go_next_mission": "他のミッションに挑戦する",
    "share_my_project": "自分が作った作品を共有する",
    "share_certification": "証明書を共有する",
    "print_certification": "証明書を自慢しよう",
    "get_cparty_events": "自分が受け取った証明書を出力して自慢すると、豪華賞品を獲得できます!",
    "go_cparty_events": "イベントに参加する",
    "codingparty2016_blockHelper_1_title": "前に進む",
    "codingparty2016_blockHelper_1_contents": "前に進む",
    "codingparty2016_blockHelper_2_title": "前に進む",
    "codingparty2016_blockHelper_2_contents": "回転する",
    "codingparty2016_blockHelper_3_title": "前に進む",
    "codingparty2016_blockHelper_3_contents": "石を砕く",
    "codingparty2016_blockHelper_4_title": "前に進む",
    "codingparty2016_blockHelper_4_contents": "回繰り返す",
    "codingparty2016_blockHelper_5_title": "前に進む",
    "codingparty2016_blockHelper_5_contents": "花を投げる",
    "codingparty2016_goalHint_1": "サリーを救うためにはミネラルが必要だ!ミネラルを獲得しながら目的地まで行ってみよう!",
    "codingparty2016_goalHint_2": "曲がり道があるね。ターンブロックを使えば大丈夫だよ!",
    "codingparty2016_goalHint_3": "道が石で塞がれているね。石を砕きながら目的地まで行ってみよう!",
    "codingparty2016_goalHint_4": "ややこしい道だけど、これまで覚えたテクニックを使えば解決できるはずだよ!",
    "codingparty2016_goalHint_5": "長く続く道だね。リピートブロックを使って簡単に解決してみよう!",
    "codingparty2016_goalHint_6": "ミネラルを全部集めよう。リピートブロックを使えば簡単にできそうだよ!",
    "codingparty2016_goalHint_7": "みんながケガをしないように花を投げてクモの巣を取り除かないと!遠くにあるクモの巣を取り除いて目的地まで行ってみよう。",
    "codingparty2016_goalHint_8": "道にクモの巣が多いね。クモの巣を全部取り除いて目的地まで行ってみよう。",
    "codingparty2016_goalHint_9": "クモの巣の後ろに隠れているミネラルを全部集めよう!",
    "codingparty2016_guide_1_1_contents": "LINEレンジャーたちがサリーを救い出せるように手伝ってあげて! ブロックコマンドを組み合わせれば、レンジャーたちを動かすことができるよ。\n\n① まず、ミッション画面と目標を確認して、\n② ブロックリストから必要なブロックを引っ張ってきて「スタートボタンを押した時」のブロックにつなげてね。\n③ 組み合わせ終わったら「スタート」ボタンを押してみよう!ブロックコマンドが上から順に実行されて、レンジャーたちが動くはずだよ。",
    "codingparty2016_guide_1_1_title": "LINEレンジャーたちを動かすためには?",
    "codingparty2016_guide_1_2_title": "目標ブロック数",
    "codingparty2016_guide_1_2_contents": "① [色が塗られていない星]の数だけブロックコマンドを組み合わせてミッションを解決してみよう。目標ブロック数より多くブロックを使うと星の色が赤に代わるから、決められた数で問題を解決してみてね!\n② 要らないブロックはゴミ箱やブロックリストに戻してね。",
    "codingparty2016_guide_1_3_title": "「前に進む」ブロックを使う",
    "codingparty2016_guide_1_3_contents": "< 前に進む >は、前に1マス移動するブロックだよ。\n\nもっと移動したいときはこのブロックを必要な数だけつなげよう。",
    "codingparty2016_guide_1_4_title": "ミネラルを獲得する",
    "codingparty2016_guide_1_4_contents": "[ミネラル]があるマスを通り過ぎるとミネラルを獲得できるよ。\n\n画面にあるミネラルを全部獲得して目的地に到着しないと、次のステップに進めないからね。",
    "codingparty2016_guide_1_5_title": "行き詰ったときは?",
    "codingparty2016_guide_1_5_contents": "行き詰った時は下の3つのヘルプボタンを押してみよう。\n\n\n<案内> 今読んでいるこの利用案内をもう一度確認したいとき!\n<ブロックヘルプ> 一つ一つのブロックコマンドがどう実行されるか知りたいとき!\n<マップヒント> このステップを解決するためのヒントが必要なとき!",
    "codingparty2016_guide_2_1_title": "ターンブロックを使う",
    "codingparty2016_guide_2_1_contents": "<右に回転する>と<左に回転する>は、\nその場で方向だけ90度回転させるブロックだよ。方向だけ回転させるブロックなんだ。\nキャラクターから向かって右か左か、よく考えて使ってね!!\n",
    "codingparty2016_guide_3_1_title": "「ムーン」のスキルを使う",
    "codingparty2016_guide_3_1_contents": "LINEレンジャーたちはそれぞれ特殊なスキルを持っているんだ。\n僕、[ムーン]は<キックする>で手前にある[石]を砕くことができるよ。\n[石]を砕けば前に進めるようになるよね。\n画面にある[石]を全部取り除かないと次のステップに進めないからね。\nでも忘れないでね!何もないマスで無駄にスキルを使っちゃダメだよ!",
    "codingparty2016_guide_5_1_title": "「～回繰り返す」ブロックを使う",
    "codingparty2016_guide_5_1_contents": "同じブロックを何個もつなげるのは本当に面倒くさいよね。\nそんな時はリピートコマンドを使えばもっと簡単に解決できるんだ。\n<[ ? ] ～回繰り返す>ブロックの中に繰り返されるアクションのブロックを入れて\n[ ? ]の部分に回数を入力すれば、入力した回数だけ同じコマンドを繰り返し実行させることができるよ。",
    "codingparty2016_guide_5_2_title": "<～回繰り返す>ブロックを使う",
    "codingparty2016_guide_5_2_contents": "<[ ? ]回繰り返す>ブロックの中にはブロックを複数組み合わせて入れることもできるから、うまく活用してみてね!\n目的地に着いてからもリピートブロックの中にあるブロックコマンドは全て実行されるよ。\n上の状況だと、目的地に着いた後、左にターンしてから終わるということ!",
    "codingparty2016_guide_7_1_title": "(コニー)のスキルを使う",
    "codingparty2016_guide_7_1_contents": "私「コニー」は<花を投げる>で遠くからでも前にある[クモの巣]を取り除くことができるよ。\n[クモの巣]を取り除けば前に進めるようになるよね?\n画面にある[クモの巣]を全部取り除かないと次のステップに進めないからね。\nでも忘れないでね!何もないマスで無駄にスキルを使っちゃダメだよ!",
    "codingparty2016_guide_9_1_title": "条件リピートブロックを使う",
    "codingparty2016_guide_9_1_contents": "何回繰り返せばいいか考えなくても、特定の条件を満たすまでそのアクションを繰り返すことができるよ。\n<[目的地]に到着するまで繰り返す>ブロックの中に繰り返されるブロックを入れると[目的地]に到着するまでコマンドを繰り返し実行するよ。",
    "codingparty2016_guide_9_2_title": "条件リピートブロックを使う",
    "codingparty2016_guide_9_2_contents": "<[目的地]に到着するまで繰り返す>ブロックの中にはコマンドを複数入れることもできるからうまく活用してみて! \n目的地に着いてからもリピートブロックの中にあるブロックコマンドは全て実行されるよ。上の状況だと、目的地に着いた後、左にターンしてから終わるということ!",
    "find_interesting_lesson": "「クラス講義」でバラエティ豊かな講義をお楽しみください!",
    "find_interesting_course": "「クラス講義集」でバラエティ豊かな講義をお楽しみください!",
    "select_share_settings": "共有スペースを選択してください。",
    "faq_banner_title": "よくある質問について",
    "check_out_faq": "質問に答えます！",
    "faq_banner_content": "エントリーについて分からないことがありますか?<br />よくある質問でご回答させていただいています。<br />今すぐ確認してください!",
    "faq_banner_button": "よくある質問<br />へ移動",
    "major_updates": "主なアップデートのご案内",
    "check_new_update": "エントリーの変化を確認してください。",
    "major_updates_notification": "エントリーの主な変更内容はお知らせでご案内しております。",
    "find_out_now": "今すぐ確認してください!",
    "offline_hw_program": "オフライン&ハードウェア結合プログラム",
    "read_more": "詳しく見る",
    "sample_project": "例示作品",
    "not_supported_function": "この端末ではサポートされていない機能です。",
    "offline_download_confirm": "エントリーのオフラインバージョンはPCでのみご利用いただけます。ダウンロードしますか?",
    "hardware_download_confirm": "エントリーのハードウェアはPCでのみご利用いただけます。ダウンロードしますか?",
    "copy_text": "テキストをコピーしてください。",
    "select_openArea_space": "作品共有スペースを選択してください",
    "mission_guide": "「ミッションを解決する」について",
    "of": " の",
    "no_results_found": "検索結果がありません。",
    "upload_pdf": "PDF資料アップロード",
    "select_basic_project": "作品を選択する",
    "try_it_out": "作成してみる",
    "go_boardgame": "エントリーボットボードゲームに移動",
    "go_cardgame": "エントリーボットカードゲームに移動",
    "go_solve": "ミッションで学習する",
    "go_ws": "「エントリーを作成する」に移動",
    "go_arts": "「エントリーを共有する」に移動",
    "group_delete_alert": "クラスを削除すると、そのクラスで発行した学生用臨時アカウントを含む関連資料がすべて削除されます。\n本当に削除しますか?",
    "view_arts_list": "他の作品を見る",
    "hw_submit_confirm_alert": "課題が提出されました。",
    "hw_submit_alert": "課題を提出しますか? ",
    "hw_submit_alert2": "課題を提出しますか? 提出時に学習が完了した学習レベルまでのみ提出されます。",
    "hw_submit_cannot": "提出できない課題です。",
    "see_other_missions": "他のミッションを見る",
    "project": " 作品",
    "marked": " 関心",
    "group": "クラス",
    "lecture": "講義",
    "Lecture": "講義",
    "curriculum": "講義集",
    "Curriculum": "講義集",
    "studying": "学習中の",
    "open_only_shared_lecture": "<b>オープン講義</b> ページに<b><公開></b>した講義のみ読み込むことができます。読み込む<b>講義</b>の<b>公開状況</b>を確認してください。",
    "already_exist_group": "このクラスがすでに存在します。",
    "cannot_invite_you": "自分は招待できません。",
    "apply_original_image": "オリジナル画像をそのまま適用する",
    "draw_new_ques": "「新しく描画する」ページに\n移動しますか?",
    "draw_new_ques_1": "絵を描いてオブジェクトとして保存できます。",
    "draw_new_ques_2": "描く画面に移動しますか",
    "draw_new_go": "移動する",
    "draw_new_stay": "移動しない",
    "file_upload_warn_title_image": "下のような画像は、利用規約および関連の法律によって制裁を受けることがあります。",
    "file_upload_warn_desc_image": "暴力的で残酷な画像<br>性的に体の部位が露出している画像<br>不快感を与えたり、嫌悪感を与える画像<br>無断使用が禁止された画像",
    "file_upload_warn_title_sound": "下記のようなサウンドは、利用規約および関連の法律によって制裁措置される場合があります。",
    "file_upload_warn_desc_sound": "暴力的で残酷なサウンド<br>性的なサウンド<br>不快感や嫌悪感を与えるサウンド<br>無断使用が禁止されたサウンド",
    "file_upload_warn_title_table": "下のような画像は、利用規約および関連の法律によって制裁を受けることがあります。",
    "file_upload_warn_desc_table": "暴力的で残酷な画像<br>性的に体の部位が露出している画像<br>不快感を与えたり、嫌悪感を与える画像<br>無断使用が禁止された画像",
    "file_upload_warn_link": "著作権について",
    "file_upload_desc_1": "こういう画像は\nNGです!",
    "file_upload_desc_2": "暴力的で残酷な画像",
    "file_upload_desc_3": "性的に体の部位が露出している画像",
    "file_upload_desc_4": "不快感を与えたり、嫌悪感を与える画像",
    "file_upload_desc_5": "* 上のような内容は、利用規約および関連法律により制裁を受けることがあります。",
    "picture_upload_warn_old": "10MB以下のjpg,png,bmp形式の画像ファイルのみアップロードできます。",
    "sprite_upload_warn_old": "10MB以下のjpg,png,bmp形式の画像やeo形式のオブジェクトファイルのみアップロードできます。",
    "picture_upload_warn_1": "10MB以下のjpg,png,bmp,svg形式の画像ファイルのみアップロードできます。\njpg,png,bmp形式はビットマップモードで,svg形式はベクターモードで編集されます。",
    "table_upload_warn_1": "10MB以下のcsv,xls(x)形式の画像ファイルのみアップロードできます。",
    "sprite_upload_warn": "10MB以下のjpg,png,bmp,svg形式の画像やeo形式のオブジェクトファイルのみアップロードできます。",
    "sound_upload_warn_1": "10MB以下のmp3形式のファイルを追加できます。",
    "sound_edit_warn": "お待ちください。<br>ただいま、新しい音の編集機能を研究中です。",
    "file_upload_loading": "ローディング中",
    "lesson_by_teacher": "先生方が直接作成する講義です。",
    "delete_group_art": "「クラスで共有する」リストから削除しますか?",
    "elementary_short": "小学校",
    "middle_short": "中学校",
    "grade_34": "3-4学校",
    "grade_56": "5-6学校",
    "grade_78": "中学校",
    "share_lesson": "講義を共有する",
    "share_course": "講義集を共有する",
    "from_list_ko": "は",
    "comming_soon": "準備中です。",
    "no_class_alert": "選択されたクラスがありません。クラスがない場合、「自分のクラス」メニューでクラスを作成してください。",
    "students_cnt": "人",
    "defult_class_alert_1": " ",
    "defult_class_alert_2": "を\n基本クラスに設定しますか?",
    "default_class": "基本クラスです。",
    "enter_hw_name": "課題のタイトルを入力してください。",
    "hw_limit_20": "課題の作成上限は20件です。",
    "stu_example": "例)\n 山田太郎\n山田太郎\n山田太郎",
    "hw_description_limit_200": "作成課題に関する案内事項を入力してください。(200文字以内)",
    "hw_title_limit_50": "課題名を入力してください。(50文字以内)",
    "create_project_class_1": "「作る」>「作品を作る」で",
    "create_project_class_2": "クラスで共有したい作品を制作してください。",
    "create_lesson_assignment_1": "「作る> オープン講義を作成する」で",
    "create_lesson_assignment_2": "クラス課題に追加したい講義を作成してください。",
    "i_make_lesson": "自分が作成した講義",
    "lesson_to_class_1": "「学習する>オープン講義」でクラスの",
    "lesson_to_class_2": "課題に追加したい講義を関心講義に登録してください。",
    "studying_students": "学習者",
    "lessons_count": "講義数",
    "group_out": "退出する",
    "enter_group_code": "クラスコードを入力する",
    "no_group_invite": "クラス招待がありません。",
    "done_create_group": "開設に成功しました。",
    "set_default_group": "基本クラス設定",
    "edit_group_info": "クラス情報管理",
    "edit_done": "修正が完了しました。",
    "alert_group_out": "クラスから本当に退出しますか?",
    "lesson_share_cancel": "講義共有取消",
    "project_share_cancel": "作品共有取消",
    "lesson_share_cancel_alert": "続けますか?",
    "course_share_cancel": "講義集共有取消",
    "select_lesson_share": "講義共有スペース選択",
    "select_project_share": "作品共有選択",
    "select_lesson_share_policy_1": "講義を共有したい",
    "select_lesson_share_policyAdd": "スペースを選択してください",
    "select_lesson_share_project_1": "作品を共有するスペースと",
    "select_lesson_share_policy_2": "著作権ポリシーを確認してください。",
    "select_lesson_share_area": "講義共有スペースを選択してください",
    "select_project_share_area": "作品共有スペースを選択してください",
    "lesson_share_policy": "講義共有に伴うエントリーの著作権ポリシーに同意",
    "project_share_policy": "作品共有に伴うエントリーの著作権ポリシーに同意",
    "alert_agree_share": "公開するためには、エントリーの著作物ポリシーに同意する必要があります。",
    "alert_agree_all": "すべての項目に同意してください。",
    "select_course_share": "講義集共有スペースを選択",
    "select_course_share_policy_1": "講義集を共有する",
    "select_course_share_policy_2": "著作権ポリシーを確認してください。",
    "select_course_share_area": "講義集共有スペースを選択してください",
    "course_share_policy": "講義集共有に伴うエントリーの著作権ポリシーに同意",
    "issued": "発行",
    "code_expired": "コードの期限が切れました。「コード再発行」ボタンを押してください。",
    "accept_class_invite": "クラス招待を承認する",
    "welcome_class": "クラスへようこそ。",
    "enter_info": "あなたの情報を入力してください。",
    "done_group_signup": "クラスへ参加しました。",
    "enter_group_code_stu": "先生から受け取ったコードを入力してください。",
    "text_limit_50": "50文字以下で作成してください。",
    "enter_class_name": "クラス名を入力してください。",
    "enter_grade": "学年を入力してください。",
    "enter_class_info": "クラス紹介を入力してください。",
    "student_dup": "はすでにクラスに存在します。",
    "select_stu_print": "出力する学生を選択してください。",
    "class_id_not_exist": "クラスIDが存在しません。",
    "error_try_again": "エラー発生。もう一度やり直してください。",
    "error_forbidden": "権限がありません。",
    "code_not_available": "このコードは無効です。",
    "gnb_create_lessons": "オープン講義作成",
    "study_lessons": "講義で学習する",
    "lecture_help_1": "学習開始時に使用する作品を選択してください。選択した作品で学習者が学習を開始します。",
    "lecture_help_2": "このヘルプをもう一度確認したい時は、上のボタンをクリックしてください。",
    "lecture_help_3": "「オブジェクトを追加する」がない場合、新しいオブジェクトを追加または削除することができません。",
    "lecture_help_4": "学習途中に「PDF資料を見る」を利用して学習を手伝ってもらうことができます。",
    "lecture_help_5": "学習に必要なブロックのみ選択してください。選択しないブロックは非表示になります。",
    "lecture_help_6": "ブロックコーディングとエントリーパイソンの中から選択し、学習環境を構成できます。",
    "lecture_finish_popup_title": "학습 다시하기",
    "lecture_finish_popup_content_1": "실습완료한 단계를<br>처음부터 다시 실습하시겠습니까?",
    "lecture_finish_popup_content_2": "* 다시 실습해도 실습 완료 상태는 유지됩니다.",
    "lecture_start_title": "Start",
    "lecture_goal_title": "Goal",
    "lecture_goal_content": "Goal",
    "lecture_prepare_title": "Prepare",
    "lecture_summary_title": "Summary",
    "lecture_summary_content": "Let's summarize what we learned.",
    "lecture_quiz_title": "Quiz",
    "lecture_quiz_content": "Let's check what we learned through the verification problem.",
    "lecture_quiz_check_answer": "Check the answer",
    "default_hint_title": "どのように作るか",
    "only_pdf": ".pdf形式のファイルのみ入力できます。",
    "enter_project_video": "最低1件の作品、または映像を入力してください。",
    "enter_title": "タイトルを入力してください。",
    "enter_recommanded_grade": "推奨学年を入力してください。",
    "enter_level_diff": "難易度を入力してください。",
    "enter_time_spent": "所要時間を入力してください。",
    "enter_shared_area": "最低1件の共有スペースを選択してください。",
    "enter_goals": "学習目標を入力してください。",
    "enter_lecture_description": "講義説明を入力してください。",
    "enter_curriculum_description": "講義集説明を入力してください。",
    "first_page": "最初です。",
    "last_page": "最後です。",
    "alert_duplicate_lecture": "すでに登録されている講義は再登録できません。",
    "enter_lesson_alert": "1つ以上の講義を登録してください。",
    "open_edit_lessons": "編集したい講義を読み込んでください。",
    "saved_alert": "が保存されました。",
    "select_lesson_type": "どのような学習課程を作成するかを選択してください ",
    "create_lesson": "講義を作成する",
    "create_lesson_desc_1": "希望する学習目標に合わせ",
    "create_lesson_desc_2": "ひとつの講義を作成して",
    "create_lesson_desc_3": "学習に活用します。",
    "create_courseware": "講義集を作成する",
    "create_courseware_desc_1": "学習課程に合わせて複数の講義を",
    "create_courseware_desc_2": "ひとつのコースとして作成し",
    "create_courseware_desc_3": "学習に活用します。",
    "create_open_lesson": "オープン講義を作成する ",
    "enter_lesson_info": "講義情報入力",
    "select_lesson_feature": "学習機能選択 ",
    "check_info_entered": "入力情報確認 ",
    "enter_lefo_lesson_long": "講義を構成する情報を入力してください。",
    "lesson_info_desc": "学習者が「学習する」画面で使用したい機能と作品を選択することで、学習目標や内容に最適化された学習環境を構成できます。",
    "provide_only_used": "完成された作品で使用されたブロックだけを読み込む",
    "see_help": "ヘルプを見る",
    "select_done_project_1": "学習者が目標に設定したい",
    "select_done_project_2": "完成作品",
    "select_done_project_3": "を選択してください。",
    "select_project": "自分の作品または関心作品を読み込みます。",
    "youtube_desc": "YouTube共有リンクを利用して映像を挿入できます。",
    "lesson_video": "講義映像",
    "lesson_title": "講義タイトル",
    "recommended_grade": "推奨学年",
    "selection_ko": "選択",
    "selection_en": " ",
    "level_of_diff": "難易度",
    "select_level_of_diff": "難易度選択",
    "enter_lesson_title": "講義タイトルを入力してください(30文字以内)",
    "select_time_spent": "所要時間選択 ",
    "time_spent": "所要時間",
    "lesson_overview": "講義説明",
    "upload_materials": "学習資料アップロード",
    "open": "読み込む",
    "cancel": "取り消す",
    "upload_lesson_video": "講義映像アップロード",
    "youtube_upload_desc": "YouTube共有リンクを利用していサブ映像を挿入できます。",
    "cancel_select": "選択を取り消す",
    "select_again": "再選択する",
    "goal_project": "完成作品",
    "upload_study_data": "「学習する」画面で閲覧できる学習資料をアップロードしてください。学習者がアップロードされた学習資料の内容を確認して学習できます。",
    "upload_limit_20mb": "20MB以下のファイルをアップロードしてください。",
    "expect_time": "予想所要時間",
    "course_videos": "サブ映像",
    "enter_courseware_info": "講義集情報入力",
    "enter_course_info": "講義集を紹介する情報を入力してください ",
    "select_lessons_for_course": "講義集を構成する講義を選択してください。",
    "course_build_desc_1": "講義は",
    "course_build_desc_2": "最大30件まで",
    "course_build_desc_3": "登録できます。",
    "lseeon_list": "講義リストを見る",
    "open_lessons": "講義を読み込む",
    "course_title": "講義集タイトル",
    "title_limit_30": "講義集タイトルを入力してください(30文字以内) ",
    "course_overview": "講義集説明",
    "charactert_limit_200": "200文字以内で作成できます。",
    "edit_lesson": "講義編集",
    "courseware_by_teacher": "先生方が直接作成する講義集です。",
    "select_lessons": "構成講義選択",
    "check_course_info": "講義集を構成する情報が正しいか確認してください。",
    "select_share_area": "共有スペース選択",
    "upload_sub_project": "サブプロジェクトアップロード",
    "file_download": "添付ファイルダウンロード",
    "file_remove": "添付ファイル",
    "check_lesson_info": "講義を構成する情報が正しいか確認してください。",
    "share_area": "共有スペース",
    "enter_sub_project": "エントリーのサブプロジェクトを登録してください。",
    "lms_hw_title": "課題のタイトル",
    "lms_hw_ready": "準備",
    "lms_hw_progress": "進行中",
    "lms_hw_complete": "完了",
    "lms_hw_not_submit": "未提出",
    "lms_hw_closed": "提出締切",
    "submission_condition": "進行中の課題のみ提出できます。",
    "submit_students_only": "学生のみ課題を提出できます。",
    "want_submit_hw": "課題を提出しますか?",
    "enter_correct_id": "IDを正しく入力してください。",
    "id_not_exist": "IDが存在しません。",
    "agree_class_policy": "クラスサービスの利用規約に同意してください。",
    "delete_class": "クラス削除",
    "type_stu_name": "学生名を入力してください。",
    "invite_from_1": "で",
    "invite_from_2": "さんを招待しました。",
    "lms_pw_alert_1": "クラスに所属すると、先生の権限で",
    "lms_pw_alert_2": "パスワードを再発行することができます。",
    "lms_pw_alert_3": "先生の招待が正しいかもう一度確認してください。",
    "invitation_accepted": "招待承認が完了しました!",
    "cannot_issue_pw": "招待を承認していないため、パスワードを発行できません。",
    "start_me_1": "<月刊エントリー>と共に",
    "start_me_2": "SW教育をはじめましょう!",
    "monthly_desc_1": "<月刊エントリー>はソフトウェア教育に不慣れな先生でも簡単かつ楽しく",
    "monthly_desc_2": "ソフトウェア教育ができるように制作されたSW教育雑誌です。",
    "monthly_desc_3": "毎月楽しい学習漫画と共にお送りするSW教育コンテンツをお楽しみください!",
    "monthly_desc_4": "* 月刊エントリーは2015年11月~2016年5月まで発行後、中止されました。",
    "monthly_desc_5": "エントリーの教育資料は教育資料ページでご覧いただけます。",
    "monthly_entry": "月刊エントリー",
    "me_desc_1": "毎月発刊される無料ソフトウェア教育雑誌",
    "me_desc_2": "月刊エントリーをご購読ください!",
    "solve_desc_1": "ゲーム感覚でミッションを解決し、",
    "solve_desc_2": "ソフトウェアの基本原理を学んでみましょう!",
    "playSw_desc_1": "EBS放送映像や特別映像を通して",
    "playSw_desc_2": "ソフトウェアを学んでみましょう!",
    "recommended_lessons": "オススメ講義集",
    "recommended_lessons_1": "お手本にして挑戦したり、クイズも解きながら、楽しくエントリープログラミングを学んでみましょう!",
    "recommended_lessons_2": "オススメ講義集をご覧ください!",
    "offline_top_desc_1": "オフラインバージョンの保存機能が向上し、セキュリティが強化されました。",
    "offline_top_desc_2": "今すぐダウンロードしてください",
    "offline_main_desc": "エントリーのオフラインエディターアップデート!!",
    "art_description": "エントリーで制作された作品を共有するスペースです。作品を制作して共有に参加してみてください。",
    "art_description_1": "",
    "art_description_2": "projects created. Create your own project and share.",
    "study_index": "エントリーで提供するテーマ別・学年別の学習課程を通して少しずつソフトウェアを学んでいきましょう!",
    "study_for_beginner": "初心者のためのエントリーへの第一歩",
    "entrybot_desc_3": "案内に従ってブロックコマンドを並べて",
    "entrybot_desc_4": "エントリーボットを学校に連れていってください。",
    "move_entrybot": "エントリーボットを動かす",
    "can_change_entrybot_1": "ブロックコマンドでエントリーボットの色を変えたり",
    "can_change_entrybot_2": "おしゃべりさせることもできます。",
    "learning_process_by_topics": "テーマ別学習課程",
    "show_detail": "詳しく見る",
    "solve_mission": "ミッションを解決する",
    "solve_mission_desc_1": "ゲーム感覚でミッションを解決し、プログラミングの原理を身に着けてください!",
    "solve_mission_desc_2": "迷路の中にいるエントリーボットを目的地まで動かして、順次、反復、条件、比較演算などの概念を自然に身に着けることができます。",
    "learning_process_by_grades": "学年別学習課程",
    "learning_process_by_grades_sub1": "4つのタイプで楽しく簡単に学ぶプログラミングの原理! 今すぐ始めてみましょう!",
    "e3_to_e4": "小学校3-4年生",
    "e5_to_e6": "小学校5-6年生",
    "m1_to_m3": "中学生以上",
    "make_using_entry": "エントリーで作る",
    "make_using_entry_desc_1": "ブロックを積み重ねて様々なソフトウェアを制作してみてください!",
    "make_using_entry_desc_2": "提供される教材をダウンロードして少しずつ進めると、アニメーション、メディアアート、ゲームなどのバラエティ豊かな作品を制作できます。",
    "make_through_ebs_1": "EBS放送映像でソフトウェアを学習してみてください。",
    "make_through_ebs_2": "放送映像はもちろん、少しずつ進められる特別映像を見ながら誰でも簡単にバラエティ豊かなソフトウェアを制作できます。",
    "support_block_js": "ブロックコーディングとJavaScript言語すべてに対応しています。",
    "study_ebs_title_1": "順序通りに! 順番通りに!",
    "study_ebs_desc_1": "[実習] エントリーボットのおつかい",
    "study_ebs_title_2": "楽々簡単に!",
    "study_ebs_desc_2": "[実習] 花房を作る",
    "study_ebs_title_3": "いつ始める?",
    "study_ebs_desc_3": "[実習] 動物家族の紹介",
    "study_ebs_title_4": "異なる選択、違う結果!",
    "study_ebs_desc_4": "[実習] テレパシーゲーム",
    "study_ebs_title_5": "情報を含んだ器",
    "study_ebs_desc_5": "[実習] 足し算ロボットを作る",
    "study_ebs_title_6": "あれこれ確かめてみよう!",
    "study_ebs_desc_6": "[実習] ラッキールーレット",
    "study_ebs_title_7": "番号で呼ぶと楽です!",
    "study_ebs_desc_7": "[実習] 自分だけのバケットリスト",
    "study_ebs_title_8": "ランダムプログラムを作成せよ!",
    "study_ebs_desc_8": "[実習] ランダムキャラクターを作る",
    "study_ebs_title_9": "どうやって見つける?",
    "study_ebs_desc_9": "[実習] 図書館の書籍を検索する",
    "study_ebs_title_10": "お並びください!",
    "study_ebs_desc_10": "[実習] キー整列プログラム",
    "event": "イベント",
    "divide": "分岐",
    "condition": "条件",
    "random_number": "乱数",
    "search": "探索",
    "sorting": "整列",
    "parallel": "並列",
    "signal": "信号",
    "input_output": "入出力",
    "sequential": "順次",
    "repeat": "反復",
    "choice": "選択",
    "repeat_advanced": "反復(回数+条件)",
    "function": "関数",
    "compare_operation": "比較演算",
    "arithmetic": "算術演算",
    "entry_recommended_mission": "エントリーのオススメミッション",
    "more_mission": "ミッションをもっと見る",
    "line_rangers_title": "LINEレンジャーと\nサリーを救え",
    "line_rangers_content": "メフィストの基地に閉じ込められた\nサリーを救ってください!",
    "pinkbean_title_string_basic": "メイプルスト一リ一 初級 ヘネシス",
    "pinkbean_title_string_intermediate": "メイプルスト一リ一 中級 エリニア",
    "pinkbean_title_string_advanced": "メイプルスト一リ一 上級 エルナス",
    "pinkbean_title": "ピンクビーンと一緒に楽しい\nメイプルワールドへ!",
    "pinkbean_content": "ピンクビーンがメイプルワールドでの冒険を\n無事に終わらせられるように手伝ってください。",
    "entrybot_school": "エントリーボットの通学路",
    "entrybot_school_desc_1": "エントリーボットがカバンを持って学校に",
    "entrybot_school_desc_2": "到着できるように手伝ってください!",
    "robot_factory": "ロボット工場",
    "robot_factory_desc_1": "ロボット工場に閉じ込められたエントリーボット!",
    "robot_factory_desc_2": "脱出するためには、パーツをすべて集めなければなりません。",
    "electric_car": "電気自動車",
    "electric_car_desc_1": "エントリーボットの自動車が前に進み続けられる",
    "electric_car_desc_2": "よう燃料をチャージしてください。",
    "forest_adventure": "森の中を探検",
    "forest_adventure_desc_1": "エントリーボットが森の中に閉じ込められています!",
    "forest_adventure_desc_2": "友達を助けてください。",
    "town_adventure": "村を探検",
    "town_adventure_desc_1": "お腹が空いていいるエントリーボットのために村にある",
    "town_adventure_desc_2": "燃料を探してください。",
    "space_trip": "宇宙旅行",
    "space_trip_desc_1": "宇宙探査を終えたエントリーボット!",
    "space_trip_desc_2": "地球に戻れるように手伝ってください。",
    "learn_programming_mission": "ミッションを解決しながら学ぶプログラミング",
    "make_open_lecture": "オープン講義作成",
    "group_created": "作成したクラス",
    "group_signup": "参加したクラス",
    "delete_from_list": "をリストから削除しますか?",
    "delete_from_list_en": " ",
    "lecture_collection": "講義集",
    "edit_mypage_profile": "自己紹介情報管理",
    "main_image": "メイン画像",
    "edit_profile_success": "反映されました。",
    "no_project_1": "自分が作った作品がありません。",
    "no_project_2": "作品作りを開始してください!",
    "empty_project_1": "まだ作られた作品がありません。",
    "no_marked_project_1": "関心作品がありません。",
    "no_marked_group_project_1": "クラスの関心作品がありません。",
    "no_marked_project_2": "「作品を共有する」でたくさんの作品に触れてみてください!",
    "no_markedGroup_project_2": "「クラスで共有する」でたくさんの作品に触れてみてください!",
    "view_project_all": "作品を観覧する",
    "no_lecture_1": "自分が作った講義がありません。",
    "empty_lecture_1": "まだ作られた講義がありません。",
    "no_lecture_2": "「オープン講義を作成する」で講義を作成してみてください!",
    "no_marked_lecture_1": "関心講義がありません。",
    "no_marked_group_lecture_1": "クラスの関心講義がありません。",
    "no_marked_lecture_2": "「オープン講義」でバラエティ豊かな講義をお楽しみください!",
    "view_lecture": "講義を確認する",
    "no_studying_lecture_1": "学習中の講義がありません。",
    "no_studying_lecture_2": "「オープン講義」で学習をスタートしてください!",
    "no_lecture_collect_1": "自分が作った講義集がありません。",
    "empty_lecture_collect_1": "まだ作られた講義集がありません。",
    "no_lecture_collect_2": "「オープン講義集を作成する」で講義集を作成してみてください!",
    "make_lecture_collection": "講義集を作成する",
    "no_marked_lecture_collect_1": "関心講義 講義集がありません。",
    "no_marked_lecture_group_collect_1": "クラスの関心講義 講義集がありません。",
    "no_marked_lecture_collect_2": "「オープン講義」でバラエティ豊かな講義をお楽しみください!",
    "view_lecture_collection": "講義集を確認する",
    "no_studying_lecture_collect_1": "学習中の講義集がありません。",
    "no_studying_lecture_collect_2": "「オープン講義」で学習をスタートしてください!",
    "my_lecture": "自分の講義",
    "markedGroup": "クラスの関心",
    "markedGroup_lecture": "クラスの関心講義",
    "markedGroup_curriculum": "クラスの関心講義集",
    "marked_lecture": "関心講義",
    "marked_lecture_collection": "自分の関心講義集",
    "marked_marked_curriculum": "関心講義集",
    "studying_lecture": "学習中の講義",
    "completed_lecture": "学習完了講義",
    "my_lecture_collection": "自分の講義集",
    "my": "自分の",
    "studying_lecture_collection": "学習中の講義集",
    "completed_lecture_collection": "学習が完了した講義集",
    "my_curriculum": "自分の講義集",
    "studying_curriculum": "学習中の講義集",
    "completed_curriculum": "学習が完了した講義集",
    "materialCC": "エントリーで提供するすべての教育資料は、CC-BY 2.0ライセンスにより自由に利用できます。",
    "materialccby_new": "エントリーで提供するすべての教育資料は、CC-BY 2.0ライセンスにより自由に利用できます。",
    "entry_copyright_info": "エントリー著作権ガイド表示",
    "pdf": "PDF",
    "helper": "ヘルプ",
    "youtube": "映像",
    "tvcast": "映像",
    "goal": "目標",
    "basicproject": "開始レベル",
    "hw": "ハードウェア",
    "object": "オブジェクト",
    "console": "コンソール",
    "download_info": "すべての教育資料はそれぞれのタイトルをクリックするとダウンロードできます。",
    "entry_materials_all": "エントリーの教育資料集",
    "entry_material": "エントリーの教育資料",
    "recommand_grade": "推奨学年",
    "g3_4_grades": "3-4年生",
    "g5_6_grades": "5-6年生",
    "middle_grades": "中学生以上",
    "entry_go_go": "エントリーゴーゴー!",
    "entry_go_go_desc": "学年別・難易度別に用意された教材をぜひご活用ください！",
    "entry_go_go_desc2": "各課程別に教育課程・学習指導・教師用指導資料の3点セットを提供しております。",
    "stage_beginner": "初級",
    "stage_middle": "中級",
    "stage_high": "上級",
    "middle_school_short": "中等",
    "learn_entry_programming": "お手本にして学ぶエントリープログラミング",
    "entry_programming_desc": "少しずつ進めれば、いつの間にかあなたもエントリーの達人に!",
    "ebs": "EBS",
    "ebs_material_desc": "放送映像と教師用指導書を活用して授業を進めてください!",
    "season_1_material": "シーズン1 教師用指導書",
    "season_2_material": "シーズン2 教師用指導書",
    "season_1": "シーズン1",
    "playsoftware_ebs": "EBS ソフトウェア、遊ぼう!",
    "material_teacher_guide": "教師用指導書",
    "season_2": "シーズン2",
    "compute_think_textbook": "教科書で学ぶコンピューター的思考力",
    "computational_sw": "国語、数学、科学、美術…学校で学ぶ様々な教科と連携してSWを学んでください!",
    "python_coding_text": "エントリーパイソン",
    "python_coding_textbook": "テキスト·コーディングの世界へ旅立つ旅",
    "python_coding_desc": "エントリーファイアでテキスト言語の構造と文法を自然に学んでみてください!",
    "entry_x_hardware_text": "エントリーXハードウェア教育資料",
    "entry_x_hardware": "エントリーXハードウェア教育資料集",
    "e_sensor": "Eセンサーボード",
    "e_sensor_board": "Eセンサーボード",
    "e_sensor_robot": "Eセンサーロボット",
    "arduino": "Arduino",
    "arduinoext": "ArduinoExt Uno",
    "arduinonano": "Arduino Nano",
    "albert": "albert",
    "orange_board": "オレンジボード",
    "arduino_board": "Arduino",
    "joystick": "joystick sensor shield",
    "ardublock": "ardublock",
    "mkboard": "digital monkeyboard",
    "mechatro_nano": "Mechatro Nano+",
    "mechatro_uno": "Mechatro Uno+",
    "memaker": "memaker",
    "edumaker": "EduMaker Board",
    "codingtoolbox": "コーディングツールボックス",
    "materials_etc_all": "その他の教育資料集",
    "materials_teaching": "教員研修資料",
    "materials_etc": "その他の参考資料",
    "materials_etc_resource": "参考資料",
    "materials_teaching_etc": "教員研修資とその他の参考資",
    "materials_teaching_1": "SW教育の必要性と教育方法論",
    "materials_teaching_2": "エントリーと共に行うアンプラグド活動",
    "materials_teaching_3": "ゲーム感覚でアルゴリズムが学べるエントリーミッションを解決する",
    "materials_teaching_4": "実生活の問題解決のためのエントリープログラミング",
    "materials_teaching_5": "教科連携SW教育1(美術、数学、社会)",
    "materials_teaching_6": "教科連携SW教育2(国語、科学、音楽)",
    "materials_teaching_7": "フィジカルコンピューティング実習1(Eセンサーボード)",
    "materials_teaching_8": "フィジカルコンピューティング実習2(ハムスター)",
    "materials_teaching_9": "授業に必要なクラス/講義機能を調べる",
    "materials_etc_1": "エントリー初心者ユーザーのためのスタートガイド",
    "materials_etc_2": "授業にすぐ活用できるバラエティ豊かなコンテンツ集",
    "materials_etc_3": "月刊エントリー",
    "materials_etc_4": "エントリー説明書",
    "materials_etc_5": "エントリー紹介資料",
    "materials_etc_6": "エントリーブロック下敷き",
    "materials_etc_7": "エントリーパイソンの例題と案内",
    "jr_if_1": "もし",
    "jr_if_2": "前にあるなら",
    "jr_fail_no_pencil": "こんな場所に鉛筆はないよ。鉛筆がある場所で使ってみよう~",
    "jr_fail_forgot_pencil": "あっ! カバンに入れる鉛筆を忘れちゃった。鉛筆を集めに行こう~",
    "jr_fail_much_blocks": "ブロックをたくさん使いすぎたな。もう一度チャレンジしてみようか?",
    "cparty_jr_success_1": "やった! カバンを準備したよ!",
    "go_right": "右",
    "go_down": "  下",
    "go_up": "  上",
    "go_left": "  左",
    "go_forward": "前に進む",
    "jr_turn_left": "左に回転する",
    "jr_turn_right": "右に回転する",
    "go_slow": "ゆっくり進む",
    "repeat_until_reach_1": "会うまで繰り返す",
    "repeat_until_reach_2": " ",
    "pick_up_pencil": "鉛筆を拾う",
    "repeat_0": " ",
    "repeat_1": "繰り返す",
    "when_start_clicked": "スタートボタンを押した時",
    "age_0": "作品体験",
    "create_character": "キャラクターを作成する",
    "age_7_9": "小学校低学年",
    "going_school": "エントリー学校に行く",
    "age_10_12_1": "小学校高学年1",
    "collect_parts": "ロボット工場でパーツを集める",
    "age_10_12_2": "小学校高学年2",
    "driving_elec_car": "電気自動車を運転する",
    "age_13": "中学",
    "travel_space": "宇宙を旅行する",
    "people": "人",
    "all": "すべて",
    "life": "日常生活",
    "nature": "自然",
    "animal_insect": "動物/昆虫",
    "environment": "自然環境",
    "things": "事物",
    "vehicles": "移動手段",
    "others": "その他",
    "fantasy": "ファンタジー",
    "instrument": "楽器",
    "piano": "ピアノ",
    "marimba": "マリンバ",
    "drum": "ドラム",
    "janggu": "太鼓",
    "sound_effect": "効果音",
    "others_instrument": "その他の打楽器",
    "aboutEntryDesc_1": "エントリーは、誰でも無料で使えるプログラミング教育プラットフォームです。",
    "aboutEntryDesc_2": "生徒はプログラミングを簡単に楽しく学習し、",
    "aboutEntryDesc_3": "先生は効果的に生徒を教えることができます。",
    "aboutEntryDesc_4": "エントリーは公共財のように",
    "aboutEntryDesc_5": "非営利で運営されています。",
    "viewProjectTerms": "利用ポリシーを見る",
    "openSourceTitle": "オープンソースによる環境造成",
    "openSourceDesc_1": "エントリーのソースコードのほか、",
    "openSourceDesc_2": "すべての教育資料はCCライセンスを",
    "openSourceDesc_3": "適用して公開しています。",
    "viewOpenSource": "オープンソースを見る",
    "eduPlatformTitle": "教育に適したプラットフォーム",
    "eduPlatformDesc_1": "教育現場に適した教育ツールを",
    "eduPlatformDesc_2": "目指し、学校の先生方と",
    "eduPlatformDesc_3": "共同開発しています。",
    "madeWith": "諮問団",
    "researchTitle": "多様な研究による専門性の強化",
    "researchDesc_1": "大学/学会などと共に多様な研究を行い、",
    "researchDesc_2": "専門性を強化し続けて",
    "researchDesc_3": "います。",
    "viewResearch": "研究資料を見る",
    "atEntry": "エントリーでは",
    "entryLearnDesc_1": "楽しく学べる学習スペース",
    "entryLearnDesc_2": "< 学習する >には、コンピューターを活用して論理的に問題を解決できるバラエティ豊かな学習",
    "entryLearnDesc_3": "コンテンツが用意されています。ゲーム感覚で楽しく与えられたミッションをプログラミングで",
    "entryLearnDesc_4": "解決することができ、役立つ動画を通してソフトウェアの原理を学ぶことができます。",
    "entryMakeDesc_1": "< 作る >では、米MITで開発したScratchのようなブロック型プログラミング言語を",
    "entryMakeDesc_2": "使用し、初めてプログラミングに触れる人でも簡単に自分だけの創作物を制作できます。",
    "entryMakeDesc_3": "さらに、ブロックコーディングとテキストコーディングの橋渡し役をする「エントリーパイソン」モードでは、",
    "entryMakeDesc_4": "テキスト言語の構造と文法を自然に身につけることができます。",
    "entryMakeDesc_5": " ",
    "entryShareDesc_1": "< 共有する >では、エントリーを通して制作した作品を他の人と共有することができます。",
    "entryShareDesc_2": "また、共有された作品がどのように構成されているのかを調べることができ、これを発展させて自分だけの作品を制作",
    "entryShareDesc_3": "できます。共同創作もできますので、友達と力を合わせてもっと良い作品を制作することもできます。",
    "entryGroup": "クラス機能",
    "entryGroupTitle": "クラス学習スペース",
    "entryGroupDesc_1": "< クラス機能 >は、教師がクラスごとに学生たちを管理できる機能です。クラスの学生同士で学習して",
    "entryGroupDesc_2": "作品を共有することができ、課題を作り学生たちの成果物を確認できます。",
    "entryGroupDesc_3": "また、教師は、講義機能を活用して学生たちのレベルにあった学習環境を",
    "entryGroupDesc_4": "カスタマイズして提供することで、効率的かつ楽に授業を進めることができます・",
    "entryGroupDesc_5": " ",
    "unpluggedToPhysical": "アンプラグド活動から、フィジカルコンピューティングまで",
    "algorithmActivity": "基礎アルゴリズム",
    "programmignLang": "教育用プログラミング言語",
    "unpluggedDesc_1": "エントリーボットのボードゲームとカードゲームで、コンピューターがなくても",
    "unpluggedDesc_2": "ソフトウェアの基本概念と原理(順次、反復、選択、関数)を身に着けることができます。",
    "entryMaze": "エントリーボット迷路脱出",
    "entryAI": "エントリーボット宇宙旅行",
    "algorithmDesc_1": "ゲーム感覚でミッションを解決し、証明書を手に入れてください。",
    "algorithmDesc_2": "ソフトウェアの基本的な原理を簡単かつ楽しく学ぶことができます。",
    "programmingLangDesc_1": "エントリーではブロックを積み上げるようにプログラミングを行うため、誰でも簡単に",
    "programmingLangDesc_2": "自分だけのゲーム、アニメーション、メディアアートといった素晴らしい作品を制作して共有できる教育用に適合しています。",
    "viewSupporHwVideo": "See the hardware guide videos",
    "viewSupporHw": "結合されるハードウェアを見る",
    "supportHwDesc_1": "エントリーとフィジカルコンピューティングツールを結合すると、現実世界とインタラクションする素晴らしい作品を作り出すことができます。",
    "supportHwDesc_2": "国内外の様々なハードウェア結合に対応しており、今後も順次追加される予定です。",
    "entryEduSupport": "エントリー教育支援",
    "eduSupportDesc_1": "エントリーでは、ソフトウェア教育のための様々な教育資料を制作し無償で配布しています。",
    "eduSupportDesc_2": "資料はすべてエントリー公式サイトでダウンロードできます。",
    "materials_1_title": "レベル別教材",
    "materials_1_desc_1": "各学年のレベルに合う教材を使って、少しずつ",
    "materials_1_desc_2": "進めながら簡単にエントリーに慣れてください！",
    "materials_2_title": "EBS放送連携教案",
    "materials_2_desc_1": "EBS「ソフトウェア、遊ぼう」放送と共に",
    "materials_2_desc_2": "教師用授業指導案を提供しています。",
    "materials_3_title": "小・中学校用の教科連携授業資料",
    "materials_3_title_2": " ",
    "materials_3_desc_1": "様々な科目で遭遇する実生活での問題を",
    "materials_3_desc_2": "コンピューター的思考力で解決してみてください。",
    "moreMaterials": "より多くの教育資料を確認する",
    "moreInfoAboutEntry_1": "エントリーのニュースをもっと確認したいなら、次のリンクにアクセスしてください。",
    "moreInfoAboutEntry_2": "教育資料のほかにもバラエティ豊かなSW教育関連情報を共有しています。",
    "material_menu_type_robot": "Robot\nType",
    "material_menu_type_module": "Module\nType",
    "material_menu_type_board": "Board\nType",
    "blog": "ブログ",
    "post": "ポスト",
    "tvCast": "TVキャスト",
    "about_entry_pre": " ",
    "about_youtube": "Youtube",
    "about_facebook": "Facebook",
    "albertSchool": "Albert",
    "arduinoBoard": "Arduino certified",
    "arduinoCompatible": "non-certified",
    "bitBlock": "ビットブロック",
    "bitbrick": "Bitbrick",
    "creamo": "creamo",
    "playcode": "playcode",
    "funboard": "funboard",
    "truerobot": "TrueTrue",
    "bingle": "BINGLE",
    "bingles": "BINGLE · S",
    "codeino": "CODEino",
    "epor": "EPOR",
    "petrone_v2": "Petrone V2",
    "petrone_v2_drone": "flight",
    "petrone_v2_car": "drive",
    "e-sensor": "E-センサーボード",
    "e-sensorUsb": "E-センサーボード(有線連結)",
    "e-sensorBT": "E-センサーボード(無線連結)",
    "mechatronics_4d": "4Dメカトロニクス",
    "esensor_board": "E-Sensor Board",
    "esensor_robot": "E-Sensor Robot",
    "hamster": "Hamster",
    "hummingbird": "Hummingbird Duo",
    "roboid": "ロボイド",
    "turtle": "Turtle",
    "littlebits": "リトルビッツ",
    "orangeBoard": "OrangeBoard",
    "robotis_carcont": "Robotis Robot Car",
    "robotis_IoT": "ロボティズIoT",
    "robotis_IoT_Wireless": "ロボティズIoT(無線連結)",
    "dplay": "DPLAY",
    "iboard": "iboard",
    "nemoino": "NEMOino",
    "xbot_epor_edge": "XBOT(OneTouch Dongle/USB)",
    "XbotBT": "XBOT EPOR and EDGE Bluetooth",
    "robotori": "robotori",
    "rokoboard": "rokoboard",
    "neobot": "NEOBOT",
    "neobot_sensor_theme": "NEOBOT Senosor Theme",
    "mechatro": "mechatro",
    "about": "を調べる",
    "articles": "討論する",
    "gallery": "観覧する",
    "learn": "学習する",
    "login": "ログイン",
    "logout": "ログアウト",
    "make": "作る",
    "register": "登録する",
    "Join": "会員登録",
    "Edit_info": "自分の情報を修正",
    "Discuss": "投稿する",
    "Explore": "観覧する",
    "Load": "読み込む",
    "My_lesson": "オープン講義",
    "textbook_learning": "教科書で学習する",
    "Resources": "教育資料",
    "play_software": "ソフトウェア、遊ぼう!",
    "problem_solve": "エントリー学習",
    "learning_textbook": "教科書で学習する",
    "context_textbook": "初等学校の教科書のまま、先生は学校の授業を、生徒は家で予習・復習することができます。",
    "info_banner_textbook": " ",
    "banner_textbook": "もっと多彩で",
    "banner_textbook_2": "楽しい学習をしたいなら?",
    "banner_textbook_right_banner": "教師用の教育資料が必要ですか?",
    "banner_textbook_right_banner2": "  ",
    "banner_textbook_right_banner_btn": "教育資料ダウンロード",
    "Learn": "学習する",
    "teaching_tools": "エントリー教具",
    "about_entry": "エントリー紹介",
    "what_entry": "エントリーは?",
    "create": "作る",
    "create_new": "新しく作る",
    "start_programming": "ソフトウェア教育の第一歩",
    "Entry": "エントリー",
    "intro_learning": "誰でも簡単かつ楽しくソフトウェアを学ぶことができます。",
    "intro_learning_anyone": "今すぐ始めてましょう! ",
    "start_now": "For Free, Forever.",
    "welcome_entry": "エントリーへようこそ。",
    "student": "学生",
    "non_menber": "一般人",
    "teacher": "先生",
    "terms_conditions": "利用規約",
    "personal_information": "個人情報の取り扱いに関するご案内",
    "limitation_liability": "責任の限界と法的告知",
    "entry_agree": "エントリーの利用規約に同意します。",
    "info_agree": "個人情報の取り扱いに同意します。",
    "next": "次",
    "enter_individual_info": "個人情報入力",
    "enter_id": "ID入力",
    "enter_password": "パスワード入力",
    "confirm_password": "パスワード確認",
    "enter_password_again": "パスワードをもう一度入力してください。",
    "validation_password": "5文字以上の英数字を組み合わせてください。",
    "validation_id": "4~20文字の英数字を組み合わせてください。",
    "prev": "前",
    "born_year": "生年",
    "select_born": "生年を選択してください",
    "year": "年",
    "gender": "性別",
    "choose_gender": "性別を選択 してください",
    "male": "男性",
    "female": "女性",
    "language": "言語",
    "best_language": "主言語を選択してください",
    "korean": "韓国語",
    "english": "英語",
    "viet": "ベトナム",
    "japan": "japan",
    "russia": "russia",
    "chinese_simplified": "Chinese(Simplified)",
    "chinese_traditional": "Chinese(Traditional)",
    "option_email": "メール(選択)",
    "insert_email": "メールアドレスを入力してください",
    "sign_up_complete": "会員登録を完了しました。",
    "agree_terms_conditions": "利用規約に同意してください。",
    "agree_personal_information": "「個人情報の取り扱いに関するご案内」に同意してください。",
    "insert_studying_stage": "作品を共有したいクラスを選択してください。",
    "insert_born_year": "生年を入力してください。",
    "insert_gender": "性別をオプションから選択してください。",
    "select_language": "言語を選択してください。",
    "check_email": "メール形式を確認してください。",
    "already_exist_id": "すでに存在するIDです。",
    "id_validation_id": "IDは4~20文字の英数字を組み合わせてください。",
    "password_validate_pwd": "パスワードは5文字以上の英数字を組み合わせてください。",
    "password_validate_pwd_length": "文字を5文字以上組み合わせる必要があります。",
    "neoid_username_same_id": "すでに使用中のIDです (NEOID)",
    "insert_same_pwd": "同じパスワードを入力してください。",
    "studying_stage_group": "作品共有クラス",
    "studying_stage": "作品を共有したいクラスを選択してください。",
    "password": "パスワード入力",
    "save_id": "ID保存",
    "auto_login": "自動ログイン",
    "enter_id_pw": "ID,パスワード入力",
    "forgot_password": "IDとパスワードを忘れましたか?",
    "did_not_join": "まだエントリー会員ではありませんか?",
    "go_join": "会員登録する",
    "renew_index_text_00": "教科書で学ぶ",
    "renew_index_text_01": "教科書でエントリーを学んでみましょう。",
    "renew_index_text_02": "初等学校の教科書の講義で",
    "renew_index_text_02_2": "エントリーを学んでみましょう！",
    "renew_index_text_03": "教科書で",
    "renew_index_text_03_2": "学習する",
    "renew_index_text_1": "2019年、ENTRYが変わります。",
    "renew_index_text_2": "新しくなった作品作り",
    "renew_index_text_3": "今すぐ新しい機能を確認して",
    "renew_index_text_3_2": "PCとタブレットで作品を作ってみましょう。",
    "renew_index_text_4": "詳しくはこちら",
    "first_step": "ソフトウェア教育の第一歩",
    "entry_content_one": "想像していたことをブロックで遊び感覚で1つずつ積み上げてみてください。",
    "entry_content_two": "ゲーム、アニメーション、メディアアートといった素晴らしい作品を完成できます!",
    "entry_content_three": "楽しいゲームで学び、自分だけの素晴らしい作品を制作して友達と共有できる素晴らしいエントリーの世界に皆さんをご招待します!",
    "funny_space": "楽しく学べる学習スペース",
    "in_learn_section": "< 学習する >には、",
    "learn_problem_solving": "コンピューターを活用して論理的に問題を解決できるバラエティ豊かな学習コンテンツが用意されています。ゲーム感覚で楽しく、与えられたミッションをプログラミングで解決したり、楽しい動画でソフトウェアの原理を学ぶことができます。",
    "joy_create": "創作の楽しさ",
    "in_make": "< 作る >では、",
    "make_contents": "米MITで開発したScratchのようなビジュアルプログラミング言語を使用し、初めてプログラミングに触れる人も簡単に自分だけの創作物を制作できます。また、エントリーを通して制作できるコンテンツは無限大です。科学の授業で学んだ物理の法則を実験して、好きなキャラクターでアニメーションを制作したり直接ゲームを制作することができます。",
    "and_content": "また、エントリーを通して制作できるコンテンツは無限大です。科学の授業で学んだ物理の法則を実験して、好きなキャラクターでアニメーションを制作したり直接ゲームを制作することができます。",
    "share_collaborate": "共有と協業",
    "explore_contents": "< 共有する >では、エントリーを通して制作した作品を他の人と共有することができます。また、共有された作品がどのように構成されているのかを調べることができ、これを発展させて自分だけのプロジェクトを制作することができます。さらに、エントリーでは共同創作も可能です。友達と協業することでより良いプロジェクトを制作することができます。",
    "why_software": "何故ソフトウェア教育が必要なのか?",
    "speak_obama_contents": "コンピューター科学を学ぶことは、単に皆さんの未来のために必要なことではありません。これは、我らがアメリカの未来のために必要なことなのです。",
    "obama": "バラク・オバマ",
    "us_president": "米国大統領",
    "billgates_contents": "コンピュータープログラミングは思考の範囲を広げてより優れた思考ができるようにサポートし、分野に関係なくすべての問題について新しい解決策を生み出せる力を養ってくれます。",
    "billgates": "ビル・ゲイツ",
    "chairman_micro": "Microsoft会長",
    "eric_contents": "現在、デジタル革命は地球上のほとんどの人々においてまだ始まっていないレベルにあります。プログラミングにより今後10年間ですべてのことが変化することでしょう。",
    "eric": "エリック・シュミット",
    "sandbug_contents": "今日、コンピューター科学に対する理解は必須となりました。我が国の競争力は、子どもたちにこれをどれだけうまく教えられるかにかかっています。",
    "sandbug": "シェリル・サンドバーグ",
    "view_entry_tools": "エントリーと一緒にできる教具を確認できます。",
    "solve_problem": "ミッションを解決する",
    "solve_problem_content": "ゲーム感覚でミッションを1つ1つ解決し、ソフトウェアの基本原理を学んでみてください!",
    "find_extra_title": "エントリーボットパーツ探し大作戦",
    "all_ages": "全年齢",
    "total": "合計",
    "step": "ステップ",
    "find_extra_contents": "ロボット犬を生産していたルッツ工場にある日突然起こった停電により生まれた特別な犬・エントリーボット。まだ組立が終わっていない残りのパーツを見つけて工場から脱出できるように手伝いながらソフトウェアの動作原理を身に着けよう!",
    "software_play_contents": "EBSで放送された番組「ソフトウェア、遊ぼう」の内容を実習することができます。",
    "resources_contents": "エントリーを活用したバラエティ豊かな教育資料を無料で提供しています。",
    "from": " 出処",
    "sw_camp": "未来創造科学部のSW創造力キャンプ",
    "elementary": "小学校",
    "middle": "中学校",
    "grades": "学年",
    "lesson": "回分",
    "sw_contents_one": "5回分の内容で小学生がエントリーとフィジカルコンピューティングを体験できる教材です。生徒たちはエントリーの使用方法を学習し、イラストボードとストーリーの作成を行います。最後にはアドイノ教具を活用してキーボードを作成する活動を行います。",
    "sw_camp_detail": "未来創造科学部のSW創造力キャンプ",
    "sw_contents_two": "5回分の内容で中学生がエントリーとフィジカルコンピューティングを体験できる教材です。学生たちはエントリーの使用方法を学習し、迷路探しゲームとクイズプログラムを制作します。最後にはアドイノ教具を活用してキーボードで自動車を操縦する活動を行います。",
    "sw_contents_three": "先生方が学校で始められるソフトウェア授業指導書です。バラエティ豊かなアンプラグド活動やTV番組「ソフトウェア、遊ぼう」を活用した授業指導案が入っています。",
    "naver_sw": "NAVER ソフトウェア、遊ぼう",
    "teacher_teaching": "教師用指導書 (小学校 5~6年生以上)",
    "funny_sw": "楽しいSW遊び教室",
    "sw_contents_four": "ソフトウェアを遊び感覚で楽しく学べる教材で、エントリーボードゲームをはじめバラエティ豊かなアンプラグド活動とエントリー学習モードでソフトウェアを制作する基本原理を学びます。基本原理の学習後、学生たちはエントリーでストーリー、ゲーム、芸術作品、応用プログラムを制作する方法を学び、自分が考えたソフトウェアを制作して発表することができる構成になっています。",
    "ct_text_5": "教科書と共に育てるコンピューター的思考力",
    "teacher_grade_5": "教員(小学校5年生)",
    "ct_text_5_content": "実生活の問題を解決しようというテーマで用意された8種類の学習コンテンツが入っている教師用指導案です。各コンテンツは改正された教育課程を反映した他教科との連携により、様々な問題に遭遇しても解決できるように設計されました。子どもたちがコンピューター的思考力を備えた融合型人材になれるよう、今すぐ適用してください!",
    "ct_text_6": "教科書と一緒に養うコンピューター的思考力",
    "teacher_grade_6": "教員(小学校6年生)",
    "ct_text_6_content": "実生活の問題を解決しようというテーマで用意された8種類の学習コンテンツが入っている教師用指導案です。各コンテンツは改正された教育課程を反映した他教科との連携により、様々な問題に遭遇しても解決できるように設計されました。子どもたちがコンピューター的思考力を備えた融合型人材になれるよう、今すぐ適用してください!",
    "sw_use": "すべての教材は、非営利目的に限り著作者を明らかにして自由に利用できます。",
    "title": "タイトル",
    "writer": "作成者",
    "view": "見る",
    "date": "登録日",
    "find_id_pwd": "IDとパスワードを忘れた場合",
    "send_email": "メールアドレスにパスワード変更のためのリンクを送信いたしました。",
    "user_not_exist": "存在しないメールアドレスです。",
    "not_signup": "まだ会員ではありませんか?",
    "send": "送信する",
    "sensorboard": "ENTRY Sensor Board",
    "physical_computing": "フィジカルコンピューティング",
    "sensorboard_contents": "Using Arduino no longer requires building a circuit using lots of wires. With ENTRY Board, you can use LED lights, temperature, sound, light sensors, a slider, and switches by simply mounting it onto an Arduino board. Now anyone can easily create their own unique projects using ENTRY Board!",
    "entrybot_boardgame": "エントリーボットボードゲーム",
    "unplugged": "アンプラグド活動",
    "unplugged_contents": "楽しいボードゲームでコンピューターの作動原理を学習してみてください。ロボット犬のエントリーボットが停電した工場で必要なパーツを探して脱出できるように手伝う過程で、コンピューター専門家のように問題をとらえることができるようになります。",
    "entrybot_cardgame": "エントリーボットカードゲーム : 爆弾大騒動",
    "entrybot_cardgame_contents": "エントリーシティに突如現れた12種類の爆弾! 全ての爆弾を無事に解体することはできるでしょうか? 爆弾を1つずつ解体し、エントリーブロックと一緒にソフトウェアの原理を学んでみましょう!  順次、反復、条件を通して爆弾を1つずつ解体していけば、エントリーシティを救ったヒーローになれますよ!",
    "basic_learn": "エントリー基本学習",
    "basic_learn_contents": "エントリーを活用したバラエティ豊かな教育コンテンツを提供しています。",
    "troubleshooting": "問題解決学習",
    "playsoftware": "ソフトウェア、遊ぼう",
    "make_own_lesson": "自分だけの授業を作成し、他の人と共有できます。",
    "group_lecture": "クラス講義",
    "group_curriculum": "クラス講義集",
    "group_homework": "クラス課題",
    "group_noproject": "展示された作品がありません。",
    "group_nolecture": "作成された講義がありません。",
    "group_nocurriculum": "作成された講義集がありません。",
    "lecture_contents": "必要な機能のみ選択して、自分だけの授業を作成できます。",
    "curriculum_contents": "複数の講義を1つの講義集としてまとめ、少しずつ進めて行ける授業を作成することができます。",
    "grade_info": "学年情報",
    "difficulty": "難易度",
    "usage": "使用要素",
    "learning_concept": "学習概念",
    "related_subject": "連携教科",
    "show_more": "もっと見る",
    "close": "閉じる",
    "latest": "最新順",
    "viewCount": "照会数",
    "viewer": "照会順",
    "like": "いいね順",
    "comment": "コメント順",
    "entire_period": "すべての期間",
    "today": "今日",
    "latest_week": "1週間以内",
    "latest_month": "1か月以内",
    "latest_three_month": "3か月以内",
    "current_password": "現在のパスワード",
    "change_password": "パスワード変更",
    "incorrect_password": "パスワードが一致しません。",
    "incorrect_password_login": "IDまたはパスワードが違います。",
    "suspension_user": "このアカウントは利用を停止されています。",
    "blocked_user": "承認されていないユーザーです。",
    "new_password": "新しいパスワード",
    "password_option_1": "英数字を5文字以上組み合わせる必要があります。",
    "again_new_password": "新しいパスワード再入力",
    "enter_new_pwd": "新しいパスワードを入力してください。",
    "confirm_new_pwd": "新しいパスワードを確認してください。",
    "enter_new_pwd_again": "新しいパスワードを再入力してください。",
    "password_match": "パスワードが一致しません。",
    "incorrect_email": "このメールアドレスは無効です。",
    "edit_button": "情報修正",
    "edit_profile": "管理",
    "my_project": "自分の作品",
    "my_group": "自分のクラス",
    "mark": "関心作品",
    "prev_state": "前",
    "profile_image": "自己紹介画像",
    "insert_profile_image": "プロフィール画像を登録してください。",
    "at_least_180": "180×180pxの画像を推奨します。",
    "upload_image": "画像アップロード",
    "about_me": "自己紹介",
    "save_change": "変更内容を保存",
    "basic_image": "デフォルト画像",
    "profile_condition": "自己紹介を入力してください。50文字前後",
    "profile_back": "戻る",
    "make_project": "作品を作る",
    "exhibit_project": "作品を展示する",
    "art_list_shared": "個人",
    "art_list_group_shared": "クラス",
    "gl_mode_boost": "ブーストモード",
    "gl_not_supported": "ブーストモードで実行できない環境です。\n確認をクリックすると基本モードで実行されます。",
    "view_project": "コードを見る",
    "code_view": "コード詳細",
    "noResult": "検索結果がありません。",
    "comment_view": "コメント",
    "upload_project": "コメントする",
    "edit": "修正",
    "save_complete": "保存",
    "just_like": "いいね!",
    "share": "共有",
    "who_likes_project": "作品にいいね!した人",
    "people_interest": "作品を関心に登録した人",
    "none_person": "なし",
    "inserted_date": "登録日",
    "last_modified": "Last Modified",
    "original_project": "オリジナル作品",
    "for_someone": "さんの",
    "original_project_deleted": "オリジナル作品が削除されました。",
    "delete_project": "削除",
    "delete_group_project": "リストから削除",
    "currnet_month_time": "月",
    "current_day_time": "日",
    "game": "ゲーム",
    "animation": "アニメーション",
    "media_art": "メディアアート",
    "physical": "フィジカル",
    "etc": "その他",
    "connected_contents": "連携コンテンツ",
    "connected_contents_content": "エントリーと一緒に進められるバラエティ豊かなコンテンツをお楽しみください。初めてソフトウェアを学ぶ人の場合、楽しく簡単なボードゲームから、アドイノのようなフィジカルコンピューティングを活用した自分だけのハイクオリティな創作物を制作することができます。",
    "basic_mission": "基本ミッション: エントリーボットの迷路ゲーム",
    "basic_mission_content": "ロボット犬を作る工場で偶然停電が起き、1人で考えることができるようになったエントリーボット! 工場を脱出して自由の身になれるよう、エントリーボットを手伝ってあげてください!",
    "application_mission": "応用ミッション: エントリーボットの宇宙旅行",
    "write_article": "投稿する",
    "write_contest": "Submit",
    "view_all_articles": "すべての投稿を見る",
    "view_own_articles": "自分の投稿を見る",
    "view_qna_articles": "レスのないスレッド一覧",
    "learning_materials": "教育資料",
    "download_materials": "教育資料ダウンロード",
    "download_button": "ダウンロード",
    "download_all": "すべてダウンロード",
    "ebs_software_first": "<ソフトウェア、遊ぼう>は、NAVERとEBSが共同制作した教育コンテンツです。ここではエントリーを活用して実際に簡単なプログラムを作成しながらソフトウェアの基礎原理を学ぶことができます。さらに、コンピューター科学に関する先行知識がなくても、動画を通して十分に楽しさと好奇心を感じながら進められるコンテンツが用意されています。",
    "go_software": "「ソフトウェア、遊ぼう」へ移動",
    "ebs_context": "EBS動画へ移動",
    "ebs_context_hello": "EBSへ移動",
    "category": "カテゴリー",
    "add_picture": "画像添付",
    "upload_article": "投稿をコメントする",
    "list": "リスト",
    "report": "通報する",
    "upload": "コメントする",
    "staff_picks": "スタッフのピックアップ",
    "popular_picks": "人気作品",
    "lecture_header_more": "もっと作ってみる",
    "lecture_header_reset": "初期化",
    "lecture_header_reset_exec": "初期化する",
    "lecture_header_save": "保存",
    "lecture_header_save_content": "学習内容を保存する",
    "lecture_header_export_project": "自分の作品に保存する",
    "lecture_header_undo": "取消",
    "lecture_header_redo": "復元",
    "lecture_er_bugs": "エラー報告",
    "lecture_container_tab_object": "オブジェクト",
    "lecture_container_tab_video": "講義動画",
    "lecture_container_tab_project": "完成された作品",
    "lecture_container_tab_help": "ブロックに関するヘルプ",
    "illigal": "違法な内容または公序良俗に違反する活動",
    "verbal": "暴言または個人情報を侵害する活動",
    "commertial": "商業的な目的のある活動",
    "explicit": "わいせつ物",
    "other": "その他",
    "check_one_more": "1つ以上表記してください。",
    "enter_content": "その他の内容を入力してください。",
    "report_result": "結果に対する回答をご希望の場合、メールアドレスを入力してください。",
    "report_success": "通報が正常に処理されました。",
    "etc_detail": "その他の項目を選択してから入力してください。",
    "lecture_play": "講義を見る",
    "list_view_link": "他の講義集を見る",
    "lecture_intro": "講義紹介を見る",
    "study_goal": "学習目標",
    "study_description": "説明",
    "study_created": "登録日",
    "study_last_updated": "最終修正日",
    "study_remove": "削除",
    "study_group_lecture_remove": "リストから削除",
    "study_group_curriculum_remove": "リストから削除",
    "study_edit": "講義集修正",
    "study_comments": "コメント",
    "study_comment_post": "コメントする",
    "study_comment_remove": "削除",
    "study_comment_edit": "修正",
    "study_comment_save": "保存",
    "study_guide_video": "案内映像",
    "study_basic_project": "基本作品",
    "study_done_project": "完成作品を選択してください。",
    "study_usage_element": "使用要素",
    "study_concept_element": "適用概念",
    "study_subject_element": "連携教科",
    "study_computing_element": "コンピューティング要素",
    "study_element_none": "なし",
    "study_label_like": "いいね!",
    "study_label_interest": "関心講義",
    "study_label_share": "共有",
    "study_label_like_people": "講座にいいね!した人",
    "study_label_interest_people": "講座を関心に登録した人",
    "study_related_lectures": "講義リスト",
    "study_expand": "すべて見る",
    "study_collapse": "減らす",
    "aftercopy": "URLがコピーされました。",
    "study_remove_curriculum": "講義集を削除しますか?",
    "content_required": "内容を入力してください",
    "upload_not_supported_file_msg": "このファイル形式には対応していません。",
    "study_remove_lecture": "講義を削除しますか?",
    "lecture_build": "講義を作成する",
    "lecture_build_step1": "1. 講義を紹介するための情報を入力してください",
    "lecture_build_step2": "2. 学習に使用される機能のみ選択してください",
    "lecture_build_step3": "3. 情報がすべて正しく入力されているか確認してください",
    "lecture_build_choice": "何をアップロードしますか?",
    "lecture_build_project": "エントリー作品",
    "lecture_build_video": "講義映像",
    "lecture_build_grade": "推奨学年",
    "lecture_build_goals": "学習目標",
    "lecture_build_add_goal": "ここをクリックして目標を追加",
    "lecture_build_attach": "ファイル添付",
    "lecture_build_attach_text": "20MB以内のファイルをアップロードしてください。",
    "lecture_build_assist": "サブ映像",
    "lecture_build_youtube_url": "Youtube共有リンクを挿入してください。",
    "lecture_build_project_done": "完成作品を選択してください。",
    "lecture_build_scene_text1": "シーン機能をOFFにすると新しいシーンを追加したり",
    "lecture_build_scene_text2": "削除することができません。",
    "lecture_build_object_text": "「オブジェクトを追加する」をOFFにすると新しいオブジェクトを追加したり削除することができません。",
    "lecture_build_blocks_text1": "学習に必要なブロックのみ選択してください。",
    "lecture_build_blocks_text2": "選択しないブロックは非表示になります。",
    "lecture_build_basic1": "学習を開始する際に使用したい作品を選択してください。",
    "lecture_build_basic2": "学習者は選択した作品で学習を進めます。",
    "lecture_build_help": "このヘルプをもう一度見たい時は押してください。",
    "lecture_build_help_never": "今後表示しない",
    "lecture_build_close": "閉じる",
    "lecture_build_scene": "シーン1",
    "lecture_build_add_object": "オブジェクトを追加する",
    "lecture_build_start": "スタート",
    "lecture_build_tab_code": "ブロック",
    "lecture_build_tab_shape": "形",
    "lecture_build_tab_sound": "サウンド",
    "lecture_build_tab_attribute": "属性",
    "lecture_build_tab_table": "Table",
    "lecture_build_block_category": "ブロックカテゴリーを選択してください。",
    "lecture_build_attr_all": "すべて",
    "lecture_build_attr_var": "変数",
    "lecture_build_attr_signal": "信号",
    "lecture_build_attr_list": "リスト",
    "lecture_build_attr_func": "関数",
    "lecture_build_edit": "講義修正",
    "lecture_build_remove": "削除",
    "curriculum_build": "講義集を作成する",
    "curriculum_step1": "1. 講義集を紹介する情報を入力してください。",
    "curriculum_step2": "2. 講義集を構成する講義を選択してください。",
    "curriculum_step3": "3. 講義集が正しく構成されているか確認してください。",
    "curriculum_lecture_upload": "講義をコメントする",
    "curriculum_lecture_edit": "講義編集",
    "curriculum_lecture_open": "読み込む",
    "group_lecture_add": "クラス講義を追加する",
    "group_curriculum_add": "クラス講義集を追加する",
    "group_lecture_delete": "削除",
    "group_curriculum_delete": "削除",
    "group_select": " ",
    "group_studentNo": "学籍番号",
    "group_username": "名前",
    "group_userId": "ID",
    "group_tempPassword": "パスワード修正",
    "group_gender": "性別",
    "group_studentCode": "コード",
    "group_viewWorks": "作品を見る",
    "added_group_lecture": "講義が削除されました。",
    "added_group_curriculum": "講義集が削除されました。",
    "deleted_group_lecture": "講義が削除されました。",
    "deleted_group_curriculum": "講義集が削除されました。",
    "modal_my": "自分の",
    "modal_interest": "関心",
    "modal_project": "作品",
    "section": "Chapter",
    "connect_hw": "ハードウェア結合",
    "connect_message": "%1に結合されました。",
    "connect_fail": "ハードウェアの結合に失敗しました。結合プログラムがONになっているか確認してください。",
    "interest_curriculum": "関心講義集",
    "marked_curriculum": "関心講義集",
    "searchword_required": "キーワードを入力してください。",
    "file_required": "ファイルは必須入力項目です。",
    "file_name_error": "正しいファイル名を入力してください。",
    "file_upload_max_count": "1回につき、合計10件までアップロードできます。",
    "image_file_only": "画像ファイルのみ登録できます。",
    "file_upload_max_size": "10MB以下のみアップロードできます。",
    "curriculum_modal_lectures": "自分の講義",
    "curriculum_modal_interest": "関心講義",
    "group_curriculum_modal_curriculums": "自分の講義集",
    "group_curriculum_modal_interest": "関心講義集",
    "picture_import": "模様インポート",
    "picture_select": "模様選択",
    "lecture_list_view": "他の講義を見る",
    "play_software_2": "EBS「ソフトウェア、遊ぼう2」",
    "play_software_2_content": "NAVERとEBSが共同制作した新たなストーリー、<ソフトウェア、遊ぼう>シーズン2をお楽しみください! 楽しい動画講義を通してソフトウェアの基本概念を学び、バラエティ豊かで興味深いテーマに沿って実生活の問題を解決することができます。放送映像と特別映像を見ながら楽しいプログラムを直接制作してみてください。ソフトウェア教育に初めてチャレンジする場合でも、簡単にソフトウェアと親しくなれますよ!",
    "open_project_to_all": "公開",
    "close_project": "非公開",
    "category_media_art": "メディアアート",
    "go_further": "さらに進む",
    "marked_project": "関心作品",
    "marked_group_project": "クラスの関心作品",
    "basic": "基本",
    "application": "応用",
    "the_great_escape": "脱出冒険記",
    "escape_guide_1": "ロボット犬を作る工場で偶然停電が起き、1人で考えることができるようになったエントリーボット! ",
    "escape_guide_1_2": " 工場を脱出して自由の身になれるようエントリーボットを手伝ってあげてください!",
    "escape_guide_2": "エントリーボットが遠くまで行くには、修理しないといけない部分がたくさんあるよ。工場を脱出しながら体を修理するために必要なパーツを探してみよう! まだ体は完全じゃないけど、歩いたり走りながら方向を変えるぐらいはできるからね!",
    "escape_guide_2_2": "学習目標: 順次的実行",
    "escape_guide_3": "やっと工場から脱出したよ! だけど、村まではまだ遠いんだ。でも、体はある程度修理できてるから、同じことを繰り返しても壊れないはずだよ! ん? あのロボットは何だろ?",
    "escape_guide_3_2": "学習目標: 反復文と条件文",
    "escape_guide_4": "とうとう村の近くまで来たよ! さっきから同じことを何度も繰り返してたから、もう覚えちゃいそうだよ! これからは使うブロックを覚えておいて使うのがよさそうだね。ここでバッテリーさえ充電しておけば、これからはずっと自由に生きられるはずだよ。",
    "escape_guide_4_2": "学習目標: 関数定義と呼び出し",
    "space_travel_log": "宇宙旅行記",
    "space_guide_1": "はるか遠い宇宙を探査するために旅立ったエントリーボット。ついに探査任務を終え故郷の星の地球に戻ろうとしているが、たくさんの石が地球に向かう道をふさいでいる!  エントリーボットが無事に地球に戻れるように手伝ってあげてください!",
    "space_guide_2": "そろそろ地球に戻る時間だよ! 早く地球に帰って休みたいなあ!　前にある石がどうなっているのか確認して、どこに行けばいいのか教えてね! そしたら、僕は教えてくれた方向に動くからね!",
    "space_guide_2_2": "学習目標: 条件文重複と論理演算",
    "cfest_mission": "エントリー体験ミッション",
    "maze_1_intro": "やあ、僕はエントリーボットだよ。ケガをした友達を救助したいんだけど、君の助けが必要なんだ。僕をサポートして友達を救助してほしい! まず、前に進むブロックを組み立ててからスタートを押してね",
    "maze_1_title": "はじめ方",
    "maze_1_content": "エントリーボットはどうすれば動きますか?",
    "maze_1_detail": "1. ブロックリストからブロックを取り出して、「スタートをクリックしたとき」ブロックと繋げてみてね <br> 2. 全部組み立てたら、スタートを押してみて <br> 3. 僕は君が組み立てたブロックどおりに上から順番に動くからね",
    "maze_2_intro": "おかげで最初の友達を無事に助けることができたよ! じゃあ、次の友達を助けてみようか? あっ! 前に蜂の巣があるよ! ジャンプするブロックを使って蜂の巣を避けて友達を助けよう。",
    "maze_2_title_1": "障害物をジャンプする",
    "maze_2_content_1": "障害物がある時はどうすればいいですか?",
    "maze_2_detail_1": "道の途中では障害物に遭遇することがあるよ。<br>障害物が前にある時は、ジャンプするブロックを使う必要があるからね。",
    "maze_2_title_2": "はじめ方",
    "maze_2_content_2": "エントリーボットはどうすれば動きますか?",
    "maze_2_detail_2": "1. ブロックリストからブロックを取り出して、「スタートをクリックした時」ブロックと繋げてみてね  <br> 2. 全部組み立てたら、スタートを押してみて <br> 3. 僕は君が組み立てたブロックどおりに上から順番に動くからね",
    "maze_3_intro": "すごいね! 今から他の友達を助けに行こう~。今度はさっき助けた友達がくれたリピートブロックを使ってみようか? 「繰り返す」を使うと、同じ動作を簡単に繰り返すことができるよ! とりあえず繰り返す数字を変えてみる?",
    "maze_3_title": "リピートブロック(1)",
    "maze_3_content": "(3)「～回繰り返す」ブロックはどうやって使いますか?",
    "maze_3_detail": "同じ行動を何度か繰り返すには、「~回繰り返す」ブロックを使えばいいよ。<br> 繰り返したいブロックを「～回繰り返す」の中に入れて反復回数を入力すればOKだよ",
    "maze_4_intro": "やったね! もう助けなくちゃいけない友達ロボットも少なくなってきたよ。蜂の巣に触れないように「ジャンプする」を繰り返しながら友達のところに行けるようにしてね!",
    "maze_4_title": "リピートブロック(1)",
    "maze_4_content": "(3)「～回繰り返す」ブロックはどうやって使いますか?",
    "maze_4_detail": "同じ行動を何度か繰り返すには、「~回繰り返す」ブロックを使えばいいよ。<br> 繰り返したいブロックを「～回繰り返す」の中に入れて反復回数を入力すればOKだよ",
    "maze_5_intro": "すごいね! 今からはリピートブロックともしブロックを一緒に使ってみよう~。もしブロックを使うと、前に壁がある時に壁のない方向に回転できるよ。じゃあ、友達を助けに出発しようか?",
    "maze_5_title_1": "もしブロック",
    "maze_5_content_1": "もし~ならブロックはどのように動作しますか?",
    "maze_5_detail_1": "「もし前に{画像}があるなら」ブロックを使うと、前に{画像}がある時にどんな行動をするのか決めることができるよ。<br>前に{画像}がある時だけブロックの中のブロックを実行して、<br>そうでない時は実行しないようになるんだ。",
    "maze_5_title_2": "リピートブロック(2)",
    "maze_5_content_2": "「~に会うまで繰り返す」ブロックはどうやって使いますか?",
    "maze_5_detail_2": "「~まで繰り返す」を使うと、同じ行動をいつまで繰り返すかを決められるよ。<br> 繰り返したいブロックを「~まで繰り返す」の中に入れればOKだよ。<br>すると、{画像}みたいにタイルの上にいる場合、繰り返しがストップするからね。",
    "maze_6_intro": "もう最後の友達だよ! さっきやったみたいにやれば、うまくいくはず! じゃあ、最後の友達を助けに行こうか?",
    "maze_6_title_1": "もしブロック",
    "maze_6_content_1": "もし~ならブロックはどのように動作しますか?",
    "maze_6_detail_1": "「もし前に{画像}があるなら」ブロックを使うと、前に{画像}がある時にどんな行動をするのか決めることができるよ。<br>前に{画像}がある時だけブロックの中のブロックを実行して、<br>そうでない時は実行しないようになるんだ。",
    "maze_6_title_2": "リピートブロック(2)",
    "maze_6_content_2": "「~に会うまで繰り返す」ブロックはどうやって使いますか?",
    "maze_6_detail_2": "「~まで繰り返す」を使うと、同じ行動をいつまで繰り返すかを決められるよ。<br> 繰り返したいブロックを「~まで繰り返す」の中に入れればOKだよ。<br>すると、{画像}みたいにタイルの上にいる場合、繰り返しがストップするからね。",
    "maze_programing_mode_0": "ブロックコーディング",
    "maze_programing_mode_1": "JavaScript",
    "maze_operation1_title": "ステップ1 – JavaScriptモードについて",
    "maze_operation1_1_desc": "僕はロボット犬のエントリーボットだよ。僕にコマンドしてミッションを解決できるように手伝ってね! ミッションは開始するたびに<span class=\"textShadow\">\'目標\'</span>から確認できるよ!",
    "maze_operation1_2_desc": "ミッションを確認したら、<b>コマンド</b>をする必要があるよ <span class=\"textUnderline\">\'コマンドリスト\'</span>は、<b>コマンド</b>があるスペースだよ。<b>マウス</b>と<b>キーボード</b>で<b>コマンド</b>できるよ。<span class=\"textShadow\">マウス</span>ではコマンドリストにある<b>コマンド</b>をクリックしたり、<b>コマンド</b>を<span class=\"textUnderline\">\'コマンド組立所\'</span>に引きずって、僕に<b>コマンド</b>できるよ!",
    "maze_operation1_2_textset_1": "マウスでコマンドをクリックする方法",
    "maze_operation1_2_textset_2": "マウスでコマンドをドラッグ＆ドロップする方法",
    "maze_operation1_3_desc": "<span class=\"textShadow\">キーボード</span>でコマンドするには、\'コマンドリスト\'にある<b>コマンドをキーボードで直接入力すればOKだよ。</b></br> コマンドを入力する時、コマンドの最後にある<span class=\"textShadow\">()と;</span>を忘れないように注意してね!",
    "maze_operation1_4_desc": "ミッションを解決するためのコマンドを全部入力したら、<span class=\"textShadow\">[スタート]</span>を押せばOKだよ。</br> [スタート]を押すと、僕はコマンドどおりに動くからね!</br> それぞれのコマンドを知りたいなら、<span class=\"textShadow\">[コマンドヘルプ]</span>を確認してみてね!",
    "maze_operation7_title": "7段階 - リピートコマンドについて(回数反復)",
    "maze_operation7_1_desc": "<b>同じこと</b>を繰り返すのは本当に面倒くさいよね。</br>そんな時は<span class=\"textShadow\">反復</span>に関するコマンドを使えばもっと簡単にコマンドできるよ。",
    "maze_operation7_2_desc": "では、繰り返されるコマンドを簡単に行う方法を見てみよう。</br>まず、リピートコマンドをクリックしてから<span class=\"textShadow\">i<1</span>の数字を変えて<span class=\"textShadow\">反復回数</span>を決めてから</br><span class=\"textShadow\">括弧({ })</span>の間にリピートコマンドを挿入すればOKだよ!",
    "maze_operation7_3_desc": "例えば、このコマンド<span class=\"textBadge number1\"></span>はmove(); を10回繰り返して実行するんだ。</br><span class=\"textBadge number2\"></span>コマンドと同じコマンドだよ。",
    "maze_operation7_4_desc": "このコマンドを使う時は<span class=\"textShadow\">{ }の中にリピートコマンド</span>がきちんと入力されているか、</br><span class=\"textShadow\">`;`</span>が抜けてないかをちゃんと確認してね!</br>このコマンドに関する詳しい説明は[コマンドヘルプ]で確認できるよ。",
    "maze_operation7_1_textset_1": "同じコマンドを繰り返して使用する場合",
    "maze_operation7_1_textset_2": "リピートコマンドを使用する場合",
    "maze_operation7_2_textset_1": "反復回数",
    "maze_operation7_2_textset_2": "リピートコマンド",
    "maze_operation7_4_textset_1": "括弧({})がない場合",
    "maze_operation7_4_textset_2": "セミコロン(;)がない場合",
    "study_maze_operation8_title": "ステップ8 - リピートコマンドについて(回数繰り返し)",
    "study_maze_operation16_title": "ステップ4 - リピートコマンドについて(条件繰り返し)",
    "study_maze_operation1_title": "ステップ1 - リピートコマンドについて(回数繰り返し)",
    "maze_operation9_title": "ステップ9 - リピートコマンドについて(条件繰り返し)",
    "maze_operation9_1_desc": "前回は回数分繰り返すリピートコマンドについて学んだね。</br>今度は<span class=\"textShadow\">続けて繰り返すコマンド</span>を見てみよう。</br>このコマンドを使うとミッションが終了するまで<b>同じ行動</b>を続けて繰り返すようになるよ。</br>このコマンドも同じように括弧({ })の間にリピートコマンドを入れて使えるよ!",
    "maze_operation9_2_desc": "例えば、このコマンド<span class=\"textBadge number1\"></span>はミッションを完了する時まで繰り返してmove(); right()を実行するんだ。</br><span class=\"textBadge number2\"></span>コマンドと同じコマンドだよ。",
    "maze_operation9_3_desc": "このコマンドを使用する時も<span class=\"textShadow\">{ }の中にリピートコマンド</span>がきちんと入力されているか、</br><span class=\"textShadow\">`true`</span>が抜けてないかをきちんと確認してね!</br>このコマンドに関する詳しい説明は[コマンドヘルプ]で確認できるよ。",
    "maze_operation9_1_textset_1": "リピートコマンド",
    "maze_operation9_3_textset_1": "括弧({})がない場合",
    "maze_operation9_3_textset_2": "セミコロン(;)がない場合",
    "maze_operation9_3_textset_3": "trueがない場合",
    "study_maze_operation3_title": "ステップ3 - リピートコマンドについて(条件繰り返し)",
    "study_maze_operation4_title": "ステップ4 - 条件コマンドについて",
    "study_ai_operation4_title": "ステップ4 - 条件コマンドとレーダーについて",
    "study_ai_operation6_title": "ステップ6 - 重複条件文について",
    "study_ai_operation7_title": "ステップ7 - 様々な比較演算について",
    "study_ai_operation8_title": "ステップ8 - 物体レーダーについて",
    "study_ai_operation9_title": "ステップ9 - アイテムを使用する",
    "maze_operation10_title": "ステップ10 - 条件コマンドについて",
    "maze_operation10_1_desc": "前回はミッションが終了するまで続けて繰り返すリピートコマンドについて学んだよね。</br>今度は特定の条件でのみ行動する<span class=\"textShadow\">条件コマンド</span>を見てみよう。</br><span class=\"textBadge number2\"></span>で見たように、条件コマンドを使うと<b>より効率的にコマンドすることができるよ。</b>",
    "maze_operation10_2_desc": "条件コマンドは大きく<span class=\"textShadow\">「条件」</span>と<span class=\"textShadow\">「条件が発生した時に実行されるコマンド」</span>に分かれるんだ。</br>まず、<span class=\"textUnderline\">条件</span>部分を見てみよう。Ifの次に出てくる<span class=\"textUnderline\">( )部分</span>が条件を入力する部分だよ。</br><span class=\"textBadge number1\"></span>と同じコマンドを例として見てみよう。<span class=\"textUnderline\">if(front == \“wall\”)</span>は、もし自分の前に(front) \"wall(壁)\"があるならを意味するよ",
    "maze_operation10_3_desc": "今から<span class=\"textUnderline\">`条件が発生した時に実行されるコマンド`</span>を見てみよう。</br>この部分は<span class=\"textShadow\">括弧{}</span>でくくられていて、条件が発生した時に括弧内のコマンドを実行するようになるよ!</br>条件が発生しなかった場合、この部分は無視して実行しないんだ。</br><span class=\"textBadge number1\"></span>のコマンドを例として見てみよう。条件はもし「自分の前に壁があるとき」で、</br><b>この条件が発生した時、僕は括弧内のコマンドright();のように右側に回転するよ!</b>",
    "maze_operation10_4_desc": "<span class=\"textShadow\">条件コマンド</span>は、<span class=\"textShadow\">リピートコマンド</span>と一緒に使われる時が多いよ。</br>前にまっすぐ進み続け、壁が出てきた時にだけ回転したいなら、</br><span class=\"textUnderline pdb5\"><span class=\"textBadge number1\"></span><span class=\"textBadge number2\"></span><span class=\"textBadge number3\"></span>順序</span>のようにコマンドできるよ!",
    "maze_operation10_1_textset_1": "<b>[一般コマンド]</b>",
    "maze_operation10_1_textset_2": "<span class=\"textMultiline\">前に2マス進んで</br>右側に回転し、</br>前に3マス進んで</br>右側に回転し、前に…</span>",
    "maze_operation10_1_textset_3": "<b>[条件コマンド]</b>",
    "maze_operation10_1_textset_4": "<span class=\"textMultiline\">前に進み続け、</br><span class=\"textEmphasis\">「もし壁が出てきたら」</span></br>右側に回転するんだ~!</span>",
    "maze_operation10_2_textset_1": "条件",
    "maze_operation10_2_textset_2": "条件が発生した時に実行されるコマンド",
    "maze_operation10_3_textset_1": "条件",
    "maze_operation10_3_textset_2": "条件が発生した時に実行されるコマンド",
    "maze_operation10_4_textset_1": "<span class=\"textMultiline\">ミッションが終了するまで</br>前に進み続ける。</span>",
    "maze_operation10_4_textset_2": "<span class=\"textMultiline\">前に進み続け、</br>もし壁が出てきたら</span>",
    "maze_operation10_4_textset_3": "<span class=\"textMultiline\">前に進み続け、</br>もし壁が出てきたら</br>右に回転する。</span>",
    "study_maze_operation18_title": "ステップ6 - 条件コマンドについて",
    "maze_operation15_title": "ステップ15 - 関数コマンドについて",
    "maze_operation15_1_desc": "よく使うコマンドを毎回入力するのは本当に面倒くさいよね。</br>よく使う<span class=\"textUnderline\">コマンドをくくって名前</span>を付けて、</br><b>必要な時にそのコマンドリストを読み込めばずっと楽にコマンドできるよ!</b></br>こんなコマンドリストを<span class=\"textShadow\">`関数`</span>っていうんだ。今から関数コマンドについて詳しく見ていこう。",
    "maze_operation15_2_desc": "関数コマンドはコマンドをくくる<b>「関数を作成する」過程</b>と</br>くくったコマンドを必要な時に使用する<b>「関数を読み込む」過程</b>があるんだ。</br>まず、関数を作成する過程を見てみよう。</br>関数を作るには、関数名とその関数に入るコマンドを入力する必要があるよ。</br><span class=\"textShadow\">function</span>を入力してから<span class=\"textShadow\">関数名</span>を決められるよ。ここでは<span class=\"textShadow\">promise</span>で作るよ。</br>関数名を作ったら、<span class=\"textUnderline\">()</span>を付けてね。その次に<span class=\"textUnderline\">括弧({})</span>を入力してね。</br>それから<span class=\"textUnderline\">この括弧の中に関数に入るコマンドを入力すれば</span>関数が作られるよ!",
    "maze_operation15_3_desc": "このコマンドを見てみよう。僕は<span class=\"textShadow\">promise</span>という関数を作ったよ。</br>この関数を呼び出して実行すると、<span class=\"textUnderline\">括弧({})</span>の中にある</br>move();</br>move();</br>left();が実行されるんだ!",
    "maze_operation15_4_desc": "関数を呼び出して実行するには、さっき作った<b>関数の名前を入力して、後に`();`を付ければOKだよ。</b></br>promise という名前で関数を作ったから、<span class=\"textShadow\">promise();</span>を入力すると前にくくっておいた</br>コマンドが実行されるんだ!</br><span class=\"number1 textBadge\"></span>のようにコマンドすると、<span class=\"number2 textBadge\"></span>のように動作するようになるよ!</br>関数コマンドを使用するには、<span class=\"number1 textBadge\"></span>のように関数を作成して関数を読み込む必要があるんだ!",
    "maze_operation15_1_textset_1": "よく使うコマンドを確認する",
    "maze_operation15_1_textset_2": "コマンドをくくって名前を付ける",
    "maze_operation15_1_textset_3": "コマンドリストを読み込む",
    "maze_operation15_2_textset_1": "コマンドリストの名前(関数名)",
    "maze_operation15_2_textset_2": "くくるコマンド",
    "maze_operation15_3_textset_1": "コマンドリストの名前(関数名)",
    "maze_operation15_3_textset_2": "くくるコマンド",
    "maze_operation15_4_textset_1": "関数を作成する",
    "maze_operation15_4_textset_2": "関数を読み込む",
    "maze_operation15_4_textset_3": "実際の状況",
    "maze_object_title": "オブジェクト情報",
    "maze_object_parts_box": "パーツボックス",
    "maze_object_trap": "落とし穴",
    "maze_object_monster": "モンスター",
    "maze_object_obstacle1": "障害物",
    "maze_object_obstacle2": "bee",
    "maze_object_obstacle3": "banana",
    "maze_object_friend": "友達",
    "maze_object_wall1": "wall",
    "maze_object_wall2": "wall",
    "maze_object_wall3": "wall",
    "maze_object_battery": "バッテリー",
    "maze_command_ex": "例",
    "maze_command_title": "コマンドヘルプ",
    "maze_command_move_desc": "エントリーボットを1マス前に移動させます。",
    "maze_command_jump_desc": "下の画像のような障害物の前で障害物をジャンプします。</br><div class=\"obstacleSet\"></div>",
    "maze_command_jump_desc_elec": "下の画像のような障害物の前で障害物をジャンプします。</br><div class=\"obstacle_elec\"></div>",
    "maze_command_right_desc": "現在位置から右側に90度回転します。",
    "maze_command_left_desc": "現在位置から左側に90度回転します。",
    "maze_command_for_desc": "括弧<span class=\"textShadow\">{}</span>内にあるコマンドを<span class=\"textShadow\">入力した回数</span>だけ繰り返して実行します。",
    "maze_command_while_desc": "ミッションが終了するまで括弧<span class=\"textShadow\">{}</span>内にあるコマンドを続けて繰り返して実行します。",
    "maze_command_slow_desc": "下の画像のようなスピードバンプをジャンプします。</br><div class=\"hump\"></div>",
    "maze_command_if1_desc": "条件<span class=\"textShadow\">「目の前に壁があるとき」</span>が発生した際、</br>括弧<span class=\"textShadow\">{}</span>内にあるコマンドを実行します。",
    "maze_command_if2_desc": "条件<span class=\"textShadow\">「目の前に蜂の巣があるとき」</span>が発生した際、</br>括弧<span class=\"textShadow\">{}</span>内にあるコマンドを実行します。",
    "maze_command_if3_desc": "条件<span class=\"textShadow\">「目の前にバナナがあるとき」</span>が発生した際、</br>括弧<span class=\"textShadow\">{}</span>内にあるコマンドを実行します。",
    "maze_command_promise_desc": "promise という<span class=\"textShadow\">関数</span>を作成して実行すると、括弧<span class=\"textShadow\">{}</span>内に</br>あったコマンドを実行します。",
    "perfect": "わぁ、完璧だよ!  ",
    "succeeded_using_blocks": " 個のブロックを使用して成功したよ!",
    "succeeded_using_commands": " のコマンドを使用して成功したよ!",
    "awesome": "すごいね!",
    "succeeded_go_to_next": "個のブロックだけで成功したよ! <br> 次のステップに行こう。",
    "good": "よし! ",
    "but": "<br>けどね、",
    "try_again": "　個のブロックだけで成功させる方法もあるよ。<br>もう一度チャレンジしてみない?",
    "try_again_commands": " のコマンドだけで成功する方法もあるよ。<br>もう一度チャレンジしてみない?",
    "cfest_success": "すごいね! おかげで友達を助けることができたよ! <br>おそらく君は優れたプログラマーなんだね! <br> また後で会おう~!",
    "succeeded_and_cert": "個のブロックだけで成功したよ! <br>証明書をもらいに行こう。",
    "cause_msgs_1": "うわっ、前に進めない場所だったよ。やり直そう。",
    "cause_msgs_2": "うわーん。ただの道にはジャンプする場所がないよ。やり直そう。",
    "cause_msgs_3": "あいたたた、痛い。ジャンプしなくちゃいけない場所だったよ。やり直そう。",
    "cause_msgs_4": "残念だけど、今回のステップでは絶対に下のブロックを使わなくちゃいけないんだ。<br>やり直してみる?",
    "cause_msgs_5": "大変だ、実行するブロックが全部なくなっちゃったよ。やり直そう。",
    "cause_msgs_6": "大変だ、実行するコマンドが全部なくなっちゃったよ。やり直そう。",
    "close_experience": "体験<br>終了",
    "replay": "やり直す",
    "go_to_next_level": "次の段階へ",
    "move_forward": "前に1マス移動",
    "turn_left": "左側",
    "turn_right": "右側",
    "turn_en": " ",
    "turn_ko": "に回転",
    "jump_over": "ジャンプする",
    "when_start_is_pressed": "スタートをクリックしたとき",
    "repeat_until_ko": "出会うまで繰り返す",
    "repeat_until_en": " ",
    "repeat_until": "出会うまで繰り返す",
    "if_there_is_1": "もし前に",
    "if_there_is_2": "あるなら",
    "used_blocks": "使用ブロック",
    "maximum": "目標ブロック",
    "used_command": "使用コマンド数",
    "maximum_command": "目標コマンド数",
    "block_box": "ブロックリスト",
    "block_assembly": "ブロック組立所",
    "command_box": "コマンドリスト",
    "command_assembly": "コマンド組立所",
    "start": "スタート",
    "engine_running": "実行中",
    "engine_replay": "戻る",
    "goto_show": "見に行く",
    "make_together": "共に制作するエントリー",
    "make_together_content": "エントリーは学校の先生方と学生たちが一緒に考えながら作成していきます。",
    "project_nobody_like": "この作品が気に入ったら、「いいね!」を押してください。",
    "project_nobody_interest": "「関心作品」を押すと、マイページで閲覧することができます。",
    "lecture_nobody_like": "この講義が気に入ったら、「いいね!」を押してください。",
    "lecture_nobody_interest": "「関心講義」を押すと、マイページで閲覧することができます。",
    "course_nobody_like": "この講義集が気に入ったら、「いいね」を押してください。",
    "course_nobody_interest": "「関心講義集」を押すと、マイページで閲覧することができます。",
    "before_changed": "変更前",
    "after_changed": "変更後",
    "from_changed": "(2016年4月17日より ) ",
    "essential": "必須",
    "access_term_title": "こんにちは。エントリー教育研究所です。 <br>エントリーをご愛顧いただいている皆様に御礼申し上げます。<br>エントリー教育研究所ウェブサイトの利用規約が<br> 2016年4月17日付で以下のように改定されましたのでご報告いたします。 ",
    "member_info": "会員案内",
    "personal_info": "個人情報の取り扱いに同意します。",
    "option": "選択",
    "news": "最新情報",
    "edu_material": "教育資料",
    "latest_news": "最近のニュース",
    "edu_data": "教育資料",
    "training_program": "研修支援",
    "footer_phrase": "エントリーは、誰でも無料でソフトウェア教育を受けられるように開発された非営利教育プラットフォームです。",
    "footer_use_free": "エントリー教育研究所のすべての著作物は、教育的目的に限り出処を明らかにして自由に利用できます。",
    "footer_description_1": "エントリーは非営利教育プラットフォームであり、エントリー内の著作物はすべて教育的目的に限り出処を明らかにして自由に利用できます。",
    "footer_description_2": " ",
    "nonprofit_platform": "非営利教育プラットフォーム",
    "this_is": "です。",
    "privacy": "プライバシーポリシー",
    "entry_addr": "京畿道 城南市 盆唐區 佛亭路 6 NAVER グリーンファクトリー16階",
    "entry_addr_additional_phone": "02-6202-9783",
    "entry_addr_additional_email": "entry@connect.or.kr",
    "entry_addr_additional_opensource": "Open Source License",
    "phone": "電話番号",
    "alert_agree_term": "利用規約に同意してください。",
    "alert_private_policy": "個人情報の取り扱い規約に同意してください。",
    "agree": "同意",
    "optional": "選択",
    "start_software": "ソフトウェア教育の第一歩",
    "analyze_procedure": "手順",
    "analyze_repeat": "反復",
    "analyze_condition": "分岐",
    "analyze_interaction": "相互作用",
    "analyze_dataRepresentation": "データ表現",
    "analyze_abstraction": "抽象化",
    "analyze_sync": "並列及び同期化",
    "jr_intro_1": "やあ! 僕はジュニだよ! 僕の友達のエントリーボットが右にいるんだ! 僕を友達のところに連れて行ってね!",
    "jr_intro_2": "エントリーボットが左にいるよ! 左に行ってみよう。",
    "jr_intro_3": "エントリーボットが上にいるよ! 友達に会えるように手伝って!",
    "jr_intro_4": "早くエントリーボットに会いに行こう! 下の方向に行ってね~ ",
    "jr_intro_5": "わっ! 友達が遠く離れたところにいるよ。エントリーボットがいる場所まで案内してもらえるかな? ",
    "jr_intro_6": "あそこにエントリーボットがいるね。早く会いに行こう。",
    "jr_intro_7": "きれいな花があるね。花を集めてエントリーボットのところに行こう!",
    "jr_intro_8": "途中に花があるね! 花を集めてエントリーボットのところに行こう!",
    "jr_intro_9": "エントリーボットが遠いところにいるね。一番早いルートでエントリーボットのところに行こう。",
    "jr_intro_10": "エントリーボットに会いに行く途中、花を全部集めながら行こう。",
    "jr_intro_11": "エントリーボットのところに行くには、右に5回も行かなきゃいけないよね? リピートブロックを使ってもっと簡単に行ってみよう。",
    "jr_intro_12": "「繰り返す」を使ってエントリーボットに会いに行こう。",
    "jr_intro_13": "今のブロックだと友達のところには行けないよ。繰り返す回数を変えてエントリーボットのところに行けるようにしてね。",
    "jr_intro_14": "リピートブロックを使ってエントリーボットのところに連れて行ってね。",
    "jr_intro_15": "エントリーボットがとても遠くにいるよね? でも、リピートブロックを使えば簡単にエントリーボットのところに行けるはずだよ。",
    "jr_whats_ur_name": "証明書に記入する、きみのお名前は？",
    "jr_down_cert": "証明書を受け取る",
    "jr_popup_prefix_1": "よし! エントリーボットに会えたよ!",
    "jr_popup_prefix_2": "わっ! エントリーボットに会えたよ! <br> でもね、もっと少ないブロックを使ってもエントリーボットに<br>会えるんだけど、もう一度やってみる? ",
    "jr_popup_prefix_3": "やった! カバンを準備したよ!",
    "jr_popup_prefix_4": "わっ! カバンのある場所に来たよ! でもね、もっと少ないブロックを使ってもカバンの方に行けるんだけど、もう一度やってみる?",
    "jr_popup_suffix_1": "ありがとう~。おかげでカバンを持って学校に行けたよ~。次に学校に行くときも一緒に行こうね~",
    "jr_popup_suffix": "ありがとう~。おかげでエントリーボットと楽しく遊べたよ~。<br>次またエントリーボットと遊ぼうね~",
    "jr_fail_dont_go": "わわっ、そこには行けないよ。行く道をもう一度教えて~",
    "jr_fail_dont_know": "ん? 今からどこに行くの? どこに行くのかもっと教えて~",
    "jr_fail_no_flower": "ここには花はないよ。花のある場所で使ってみよう~",
    "jr_fail_forgot_flower": "あっ! エントリーボットにあげる花を忘れちゃったよ。花を集めてから行こう~",
    "jr_fail_need_repeat": "リピートブロックがないよ! リピートブロックを使ってみよう~",
    "jr_hint_1": "やあ! 僕はジュニだよ! 僕の友達のエントリーボットが右にいるんだ! 僕を友達のところに連れて行ってね!",
    "jr_hint_2": "エントリーボットが左にいるよ! 左に行ってみよう。",
    "jr_hint_3": "エントリーボットが上にいるよ! 友達に会えるように手伝って!",
    "jr_hint_4": "早くエントリーボットに会いに行こう! 下の方向に行ってね~",
    "jr_hint_5": "わっ! 友達が遠く離れたところにいるよ。エントリーボットがいる場所まで案内してもらえるかな?",
    "jr_hint_6": "間違ったブロックのせいで友達に会いに行けないよ! 間違ったブロックを消してエントリーボットのところに行けるように手伝って!",
    "jr_hint_7": "きれいな花があるね。花を集めてエントリーボットのところに行こう!",
    "jr_hint_8": "途中に花があるね! 花を集めてエントリーボットのところに行こう!",
    "jr_hint_9": "エントリーボットが遠いところにいるね。一番早いルートでエントリーボットのところに行こう。",
    "jr_hint_10": "あっ、ブロックを間違って組み立てちゃったからうまく行けないね。途中で花を全部集めてエントリーボットに持っていけるように直してみよう。",
    "jr_hint_11": "エントリーボットのところに行くには、右に5回も行かなきゃいけないよね? リピートブロックを使ってもっと簡単に行ってみよう。",
    "jr_hint_12": "「繰り返す」を使ってエントリーボットに会いに行こう。",
    "jr_hint_13": "今のブロックだと友達のところには行けないよ。反復回数を変えてエントリーボットのところに行けるようにしてね。",
    "jr_hint_14": "リピートブロックを使ってエントリーボットのところに連れて行ってね。",
    "jr_hint_15": "エントリーボットがすごく遠くにいるよね? でも、リピートブロックを使えば簡単にエントリーボットのところに行けるはずだよ。",
    "jr_certification": "証明書",
    "jr_congrat": "おめでとうございます!",
    "jr_congrat_msg": "問題解決課程を無事修了しました。",
    "jr_share": "共有",
    "go_see_friends": "友達に会いに行きましょう~!",
    "junior_naver": "JUNIOR NAVER",
    "junior_naver_contents_1": "のオシャレなクマの「ジュニ」がエントリーに遊びにきました! ",
    "junior_naver_contents_2": "ですが、ジュニは道を探すのがまだ難しいみたいです。",
    "junior_naver_contents_3": "ジュニがエントリーボットに会えるように進む方向を教えてください~",
    "basic_content": "基礎",
    "jr_help": "ヘルプ",
    "help": "ヘルプ",
    "cparty_robot_intro_1": "やあ、僕はエントリーボットだよ。僕はパーツを手に入れて体を直さなくちゃいけないんだ。前に進むブロックでパーツを手に入れられるように手伝ってくれ!",
    "cparty_robot_intro_2": "よし! 前にもパーツがあるけど、今度は間違って行ってしまうと感電しちゃうみたいだね。ジャンプするブロックを使ってパーツのところまで連れて行ってくれ。",
    "cparty_robot_intro_3": "すごい! あそこにもパーツがあるよ! 道はちょっと曲がりくねってるけど、回転するブロックを使えば十分行けるはず! ",
    "cparty_robot_intro_4": "よし、もう動くのはだいぶ楽になったよ! 今度は回転とジャンプを一緒に使ってあのパーツを手に入れよう! ",
    "cparty_robot_intro_5": "おかげで体がすごくよくなったよ! 今度は回転とジャンプを一緒に使う必要があるよ! さあ、行ってみよう!",
    "cparty_robot_intro_6": "すごいね! もうかなり体がよくなったから、同じことを何回やっても大丈夫なはず! 一度繰り返すを使って進んでみよう!",
    "cparty_robot_intro_7": "ん? 行く途中にジャンプしなくちゃいけない場所があるね! でも、繰り返すで十分に行けるはずだよ!",
    "cparty_robot_intro_8": "そんな! 今度はパーツがずっと遠くにあるよ。でも、繰り返すを使えば簡単に行けるんだ! 早く手伝って!",
    "cparty_robot_intro_9": "わあ~、体はもうほとんど直ったみたいだよ! 今度は繰り返すを利用してパーツを手に入れに行こう!",
    "cparty_robot_intro_10": "すごいよ! もう最後のパーツさえあれば僕の体を完璧に直すことができるはず! 早く、繰り返すで手伝って!",
    "cparty_car_intro_1": "やあ! 僕はエントリーボットだよ。車に乗って移動し続けるには燃料が必要なんだ! 前にある燃料を手に入れられるように手伝ってくれないかな?",
    "cparty_car_intro_2": "よし! だけど、今度は道がまっすぐじゃないね! 左/右に回転するブロックでうまく運転して、一緒に燃料を手に入れに行こうか?",
    "cparty_car_intro_3": "うまいね! 今度の道の前にはスピードバンプがあるよ。スピードを出して運転すると事故が起こるかもしれないから、ゆっくり進むブロックを使って燃料を手に入れに行こう!",
    "cparty_car_intro_4": "やっほー、もう運転はだいぶ楽になったよ! この道路ではリピートブロックを使って燃料を補給しに行ってみようか?",
    "cparty_car_intro_5": "わぁ、今度の道路はちょっと複雑そうだけど、前に進むと左/右に回転するブロックを繰り返しながら行けばOKだよ! 落ち着いて燃料のところまで行ってみよう",
    "cparty_car_intro_6": "今度は道路に障害物があるから、うまく回らないといけなさそうだね。もし障害物が前にあったらどのようにすればいいか教えてね!",
    "cparty_car_intro_7": "うん、うまいね! もう一度もしブロックを使って障害物を避けながら燃料を手に入れに行こう!",
    "cparty_car_intro_8": "あっ、さっき見かけたスピードバンプが2つもあるよ。ゆっくり進むブロックを利用して安全に燃料を補給しに行こう!",
    "cparty_car_intro_9": "複雑そうな道だけど、前に使ったリピートブロックともしブロックをうまく利用すれば十分運転できるよ。燃料を補給できるように手伝って!",
    "cparty_car_intro_10": "本当にすごいね! ブロックの順序をうまく並べて、今から最後に残った燃料に向かって頑張って進んで行こう!",
    "cparty_car_popup_prefix_1": "よし! 燃料を手に入れたよ!",
    "cparty_car_popup_prefix_2": "わあ! 燃料を手に入れたよ! <br> でもね、もっと少ないブロックを使っても<br>燃料を手に入れられるんだけど、もう一度やってみる? ",
    "cparty_car_popup_prefix_2_text": "わあ! 燃料を手に入れたよ! <br> でもね、もっと少ないコマンドを使っても<br>燃料を手に入れられるんだけど、もう一度やってみる? ",
    "cparty_car_popup_suffix": "ありがとう~。おかげでバッテリーを全部手に入れることができたよ~。<br>また一緒に遊んでね~",
    "all_grade": "全学年",
    "grade_e3_e4": "小学校3 ~ 4年生以上",
    "grade_e5_e6": "小学校5 ~ 6年生以上",
    "grade_m1_m3": "中学校1 ~ 3年生以上",
    "entry_first_step": "エントリーの第一歩",
    "entry_monthly": "月刊エントリー",
    "play_sw_2": "EBS ソフトウェア、遊ぼう2",
    "entry_programming": "実践、プログラミング!",
    "entry_recommanded_course": "エントリーのオススメコース",
    "introduce_course": "誰でも簡単に見て真似しながら様々なソフトウェアを楽しく制作できる講義コースを紹介します。",
    "all_free": "*講義動画、作る、教材などをすべて無料で提供しています。",
    "cparty_result_fail_1": "わわっ、そこには行けないよ。道をもう一度教えて~",
    "cparty_result_fail_2": "あいたたた、痛い。ジャンプしなくちゃいけない場所だったよ。やり直そう。",
    "cparty_result_fail_3": "わあ、大変だ。下のブロックを使わなかったらとっても大変だね! 下のブロックで作り直してね。",
    "cparty_result_fail_4": "ん? どこに進めばいいの? どこに進めばいいのかもっと教えてよ~",
    "cparty_result_fail_5": "あっ! スピードバンプでは速度を落とさないといけないよ。ゆっくり進むブロックを使ってみてね~",
    "cparty_result_success_1": "よし! パーツを手に入れたよ!",
    "cparty_result_success_2": "わあ! 燃料を手に入れたよ! <br>でもね、もっと少ないブロックを使っても燃料を手に入れられるんだけど、もう一度やってみる? ",
    "cparty_result_success_2_text": "わあ! パーツを手に入れたよ! <br>でもねもっと少ないコマンドを使っても燃料を手に入れられるんだけど、もう一度やってみる? ",
    "cparty_result_success_3": "ありがとう~。おかげで体が完全に直ったよ~。また一緒に遊んでね~",
    "cparty_insert_name": "名前を入力してください。",
    "offline_file": "ファイル",
    "offline_edit": "編集",
    "offline_undo": "戻す",
    "offline_redo": "再実行",
    "offline_quit": "終了",
    "select_one": "選択してください。",
    "evaluate_challenge": "挑戦したミッションの難易度を評価してください。",
    "very_easy": "とても簡単",
    "easy": "簡単",
    "normal": "普通",
    "difficult": "難しい",
    "very_difficult": "とても難しい",
    "save_dismiss": "変更内容を保存していません。続けますか?",
    "entry_info": "エントリー情報",
    "actual_size": "実際のサイズ",
    "zoom_in": "拡大",
    "zoom_out": "縮小",
    "cparty_jr_intro_1": "やあ! 僕はエントリーボットだよ! 学校にカバンを持っていけるように手伝って! ",
    "cparty_jr_intro_2": "カバンが僕の左にあるよ! 左に行ってみよう。",
    "cparty_jr_intro_3": "カバンが上にあるよ! カバンを持っていけるように手伝ってね!",
    "cparty_jr_intro_4": "早くカバンを取りに行こう! 下に行くんだよ~",
    "cparty_jr_intro_5": "わっ! カバンが遠く離れた場所にあるよ。カバンがある場所まで案内してくれないかな?",
    "cparty_jr_intro_6": "カバンがあるよ! 早く取りに行こう~",
    "cparty_jr_intro_7": "道の上に鉛筆があるね。鉛筆を集めてカバンを取りに行こう!",
    "cparty_jr_intro_8": "学校に行く途中に鉛筆があるよ! 鉛筆を集めてカバンを取りに行こう!",
    "cparty_jr_intro_9": "カバンが遠く離れた場所にあるね。一番早いルートでカバンを取りに行こう。",
    "cparty_jr_intro_10": "途中にある鉛筆をすべて集めてカバンを持っていこう!",
    "cparty_jr_intro_11": "カバンを手に入れるには、右に5回も行かなくちゃいけないよね? リピートブロックを使ってもっと簡単に行ってみよう。",
    "cparty_jr_intro_12": "「繰り返す」を使ってカバンを取りに行こう。",
    "cparty_jr_intro_13": "今のブロックだと友達のところには行けないよ。反復回数を変えてエントリーボットのところに行けるようにしてね。",
    "cparty_jr_intro_14": "リピートブロックを使ってカバンを取りに行ってね。",
    "cparty_jr_intro_15": "学校がとーっても遠くにあるよね? でも、リピートブロックを使うと簡単に学校に到着できるんだ。",
    "make_new_project": "新しい作品を作る",
    "open_old_project": "保存された作品を読み込む",
    "offline_download": "エントリーダウンロード",
    "offline_release": "エントリーのオフラインエディターリリース!",
    "offline_description_1": "エントリーのオフラインバージョンは",
    "offline_description_2": "インターネットに接続されていない状態でも使用できます。",
    "offline_description_3": "今すぐダウンロードして始めてください!",
    "sw_week_2015": "2015ソフトウェア教育体験ウィーク",
    "cparty_desc": "ワクワクするソフトウェアとの初対面",
    "entry_offline_download": "エントリーオフライン\nダウンロード",
    "entry_download_detail": "ダウンロード\nへ移動",
    "offline_desc_1": "インターネットに接続せずに、エントリーを利用することができるオフラインバージョンです。",
    "offline_desc_2": "今すぐダウンロードして始めてください!",
    "download": "ダウンロード",
    "version": "バージョン",
    "file_size": "サイズ",
    "update": "アップデート",
    "use_range": "使用範囲",
    "offline_desc_free": "エントリーオフラインは、企業と個人の方すべてが制限なく無料でご利用いただけます。",
    "offline_required": "システム要件",
    "offline_required_detail": "ハードディスクの空き容量1GB以上、Windows7またはMac OS 10.8以上",
    "offline_notice": "インストールの前にお読みください",
    "offline_notice_1": "1. バージョン",
    "offline_notice_1_1": "ハードウェア接続ソフトが内蔵されています。",
    "offline_notice_2": "2. ウェブブラウザは別途必要ありません。",
    "offline_notice_3": "各バージョンの変更内容について",
    "offline_notice_4": "各バージョンをダウンロード",
    "offline_notice_5": "各バージョンの変更内容の詳細について",
    "hardware_online_badge": "オンライン",
    "hardware_title": "エントリーハードウェア接続ソフトをダウンロード",
    "hardware_desc": "エントリーオンラインの「作品を作る」でハードウェアを接続してエントリーを利用する場合のみ、別途インストールする必要があります。",
    "hardware_release": "ハードウェア接続ソフト変更内容の詳細は、次のアドレスで確認できます。",
    "hardware_window_download": "Windows<br />ダウンロード",
    "hardware_osx_download": "Mac<br />ダウンロード",
    "cparty_jr_result_2": "ありがとう~。おかげでカバンを持って学校に来ることができたよ~ <br>次に学校に行くときも一緒に行こうね~",
    "cparty_jr_result_3": "わあ! 学校まで来れたよ! <br>でももっと少ないブロックを使っても学校に行けるんだけど、<br>もう一度やってみる?",
    "cparty_jr_result_4": "わっ! カバンを手に入れたよ!<br> でももっと少ないブロックを使ってもカバンを手に入れられるんだけど、<br>もう一度やってみる? ",
    "lms_no_class": "まだ作成したクラスがありません。",
    "lms_create_class": "クラスを作成してください",
    "lms_add_class": "クラス作成",
    "lms_base_class": "基本",
    "lms_delete_class": "削除",
    "lms_my_class": "自分の",
    "lms_grade_1": "小学校1",
    "lms_grade_2": "小学校2",
    "lms_grade_3": "小学校3",
    "lms_grade_4": "小学校4",
    "lms_grade_5": "小学校5",
    "lms_grade_6": "小学校6",
    "lms_grade_7": "中学校1",
    "lms_grade_8": "中学校2",
    "lms_grade_9": "中学校3",
    "lms_grade_10": "一般",
    "lms_add_groupId_personal": "先生から受け取ったクラスIDを入力して会員情報に追加してください。",
    "lms_add_groupId": "クラスIDを追加する",
    "lms_add_group_account": "クラスアカウント追加",
    "lms_enter_group_info": "発行されたクラスIDとパスワードを入力してください。",
    "lms_group_id": "クラスID",
    "lms_group_pw": "パスワード",
    "lms_group_name": "所属クラス名",
    "personal_pwd_alert": "正しいパスワード形式を入力してください",
    "personal_form_alert": "正しい形式で入力してください",
    "personal_form_alert_2": "すべての入力フォームを作成してください",
    "personal_no_pwd_alert": "パスワードを入力してください",
    "select_gender": "性別を選択してください",
    "enter_group_id": "クラスIDを入力してください",
    "enter_group_pwd": "パスワードを入力してください",
    "info_added": "追加されました",
    "no_group_id": "クラスIDが存在しません",
    "no_group_pwd": "パスワードが一致しません",
    "lms_please_choice": "選択してください。",
    "group_lesson": "自分のクラス講義",
    "lms_banner_add_group": "クラス機能導入",
    "lms_banner_entry_group": "エントリークラスを作成する",
    "lms_banner_desc_1": "クラスの学生たちをエントリーに登録してください!",
    "lms_banner_desc_2": "もっと簡単かつ便利にクラスの学生たちの作品を検索し、",
    "lms_banner_desc_3": "成長する姿を確認できます。",
    "lms_banner_download_manual": "マニュアルダウンロード",
    "lms_banner_detail": "詳細",
    "already_exist_email": "メールアドレスはすでに存在します。",
    "same_registered_email": "メールアドレスはすでに存在します。",
    "email_correnctly_please": "メールアドレスを正しく入力してください",
    "remove_project": "作品を削除しますか?",
    "study_lesson": "クラスで学習する",
    "open_project": "作品を読み込む",
    "make_group": "クラス作成",
    "project_share": "作品を共有する",
    "group_project_share": "クラスで共有する",
    "group_discuss": "クラスに投稿する",
    "my_profile": "マイページ",
    "search_updated": "最新作品",
    "search_recent": "照会数の多い最新作品",
    "search_complexity": "制作に力を入れた最新作品",
    "search_staffPicked": "スタッフのピックアップ作品",
    "search_childCnt": "コピーが多い作品",
    "search_likeCnt": "いいね!が多い最新作品",
    "search_recentLikeCnt": "いいね!が多い最新作品",
    "gnb_share": "共有する",
    "gnb_community": "コミュニティ",
    "lms_add_lectures": "講義をコメントする",
    "lms_add_course": "講義集をコメントする",
    "lms_add_homework": "課題をコメントする",
    "remove_lecture_confirm": "講義を本当に削除しますか?",
    "popup_delete": "削除する",
    "remove_course_confirm": "講義集を本当に削除しますか?",
    "lms_no_lecture_teacher_1": "追加された講義がありません。",
    "lms_no_lecture_teacher_2": "クラス講義を追加してください。",
    "gnb_download": "ダウンロード",
    "lms_no_lecture_student_1": "まだアップロードされた講義がありません。",
    "lms_no_lecture_student_2": "先生が講義をアップロードすると、",
    "lms_no_lecture_student_3": "学習内容を確認できます。",
    "lms_no_class_teacher": "まだ作成したクラスがありません。",
    "lms_no_course_teacher_1": "追加された講義集がありません。",
    "lms_no_course_teacher_2": "クラス講義集を追加してください。",
    "lms_no_course_student_1": "まだアップロードされた講義集がありません。",
    "lms_no_course_student_2": "先生が講義集をアップロードすると、",
    "lms_no_course_student_3": "学習内容を確認できます。",
    "lms_no_hw_teacher_1": "追加された課題がありません。",
    "lms_no_hw_teacher_2": "クラス課題を追加してください。",
    "lms_no_hw_student_1": "まだアップロードされた課題がありません。",
    "lms_no_hw_student_2": "先生が課題をアップロードすると、",
    "lms_no_hw_student_3": "学習内容を確認できます。",
    "modal_edit": "修正する",
    "modal_deadline": "締切日設定",
    "modal_hw_desc": "詳細説明(選択)",
    "desc_optional": " ",
    "modal_create_hw": "課題を作成する",
    "vol": "回目",
    "hw_title": "課題名",
    "hw_description": "内容",
    "deadline": "締切日",
    "do_homework": "課題をする",
    "hw_progress": "進行状況",
    "hw_submit": "提出",
    "view_list": "名簿を見る",
    "view_desc": "内容を見る",
    "do_submit": "提出する",
    "popup_notice": "通知",
    "no_selected_hw": "選択された課題がありません。",
    "hw_delete_confirm": "選択した課題を本当に削除しますか?",
    "hw_submitter": "課題提出者名簿",
    "hw_student_desc_1": "*「提出する」を押して提出を完了するまでは何度でも修正できます。",
    "hw_student_desc_2": "* 提出期限が過ぎると課題を提出できません。",
    "popup_create_class": "クラス作成",
    "class_name": "クラス名",
    "image": "画像",
    "select_class_image": "クラスの画像を選択してください。",
    "type_class_description": "クラス紹介を入力",
    "set_as_primary_group": "基本クラスに指定",
    "set_primary_group": "指定",
    "not_primary_group": "指定しない",
    "type_class_name": "クラス名を入力してください。",
    "type_class_description_long": "クラス紹介を入力してください。170文字以内",
    "add_students": "学生を追加する",
    "invite_students": "学生を招待する",
    "invite_with_class": "1. クラスコードで招待する",
    "invite_code_expiration": "コード有効期限",
    "generate_code_button": "コード再発行",
    "generate_code_desc": "学生のクラスコード入力方法",
    "generate_code_desc1": "エントリーのホームページでログインしてください。",
    "generate_code_desc2": "メニューバーで<自分のクラス>を選択してください。",
    "generate_code_desc3": "<クラスコードを入力する>を押してクラスコードを入力してください。",
    "invite_with_url": "2. クラスURLで招待する",
    "copy_invite_url": "コピーする",
    "download_as_pdf": "クラスアカウントをPDFでダウンロード",
    "download_as_excel": "クラスアカウントをExcelでダウンロード",
    "temp_password": "ワンタイムパスワード発行",
    "step_name": "名前入力",
    "step_info": "情報追加/修正",
    "preview": "プレビュー",
    "type_name_enter": "クラスに追加する学生の名前を入力してエンターキーを押してください。",
    "multiple_name_possible": "複数の名前を入力できます。",
    "id_auto_create": "学籍番号を別途修正しない場合、自動で作成されます。",
    "student_id_desc_1": "クラスIDは別途入力する必要なく自動で作成されます。",
    "student_id_desc_2": "ただし、エントリーにすでに会員登録している学生をクラスに追加する場合、学生のエントリーIDを",
    "student_id_desc_3": "入力してください。その学生は、ログイン後にクラス招待を承認すると追加されます。",
    "student_number": "学籍番号",
    "temp_password_desc_1": "ワンタイムパスワードでログインした後、",
    "temp_password_desc_2": "新規パスワードを再設定できるように案内してください。",
    "temp_password_desc_3": "*発行されたワンタイムパスワードは一度しか確認できません。",
    "temp_password_demo": "ログインできない案内用の例示アカウントです。",
    "temp_works": "作品を見る",
    "student_delete_confirm": "学生を本当に削除しますか?",
    "no_student_selected": "選択された学生がいません。",
    "class_assignment": "クラス課題",
    "class_list": "クラスリスト",
    "select_grade": "学年を選択してください。",
    "add_project": "作品を共有する",
    "no_project_display": "学生たちが展示している作品がありません。",
    "plz_display_project": "自分の作品を展示してください。",
    "refuse_confirm": "クラス招待を本当に拒否しますか?",
    "select_class": "クラス選択",
    "group_already_registered": "すでに入っているクラスです。",
    "my_page_entry": "ENTRY",
    "my_page_title": "マイページ -",
    "my_classGroup_title": "私のクラス",
    "my_classGroup_title_view": "自分のクラスを確認する",
    "my_space_area": "自分だけのスペース",
    "mon": "月",
    "tue": "火",
    "wed": "水",
    "thu": "木",
    "fri": "金",
    "sat": "土",
    "sun": "日",
    "jan": "1月",
    "feb": "2月",
    "mar": "3月",
    "apr": "4月",
    "may": "5月",
    "jun": "6月",
    "jul": "7月",
    "aug": "8月",
    "sep": "9月",
    "oct": "10月",
    "nov": "11月",
    "dec": "12月",
    "plz_select_lecture": "講義を選択してください。",
    "plz_set_deadline": "締切日を設定してください。",
    "hide_entry": "エントリーを表示しない",
    "hide_others": "その他を表示しない",
    "show_all": "すべて見る",
    "lecture_description": "先生方が直接作成するエントリーの学習スペースです。講義で作品例を見て作品を制作しながら学んでください。",
    "curriculum_description": "学習の順番とテーマに沿って複数の講義が集められている学習スペースです。講義集の順番に合わせて少しずつ学んでください。",
    "linebreak_off_desc_1": "テキストボックスのサイズが文字のサイズを決定します。",
    "linebreak_off_desc_2": "内容は1行のみ作成できます。",
    "linebreak_off_desc_3": "新しい文字が追加されると、テキストボックスの左右の長さが長くなります。",
    "linebreak_on_desc_1": "テキストボックスのサイズが文字を入力できるスペースを決定します。",
    "linebreak_on_desc_2": "内容を作成する時、エンターキーで改行できます。",
    "linebreak_on_desc_3": "内容を作成または新しい文字を追加する時、長さがテキストボックスの横幅を超えると自動的に改行されます。",
    "not_supported_text": "この書体は漢字に対応していません。",
    "entry_with": "一緒に作るエントリー",
    "ebs_season_1": "シーズン1を見に行く",
    "ebs_season_2": "シーズン2を見に行く",
    "hello_ebs": "ハロー! EBS ソフトウェア",
    "hello_ebs_desc": "<ハロー! EBSソフトウェア> エントリーバージョンの両方向サービスをお楽しみください! \n <ハロー! EBSソフトウェア>の動画講義を通して\n ソフトウェアコーディングの基本概念を学習した後、両方向コーディングミッションにチャレンジしてください!\n 放送では見られなかった<大.騒.動>友達の\n裏話も見ることができます!",
    "hello_ebs_sub_1": "EBS中学エントリーバージョンの両方向サービスを",
    "hello_ebs_sub_2": "お楽しみください! ",
    "exhibit_4th_title": "4th Anniversary of Entry",
    "exhibit_4th_subtitle": "Entry Project Contest",
    "exhibit_4th_desc1": "We hold an Entry Project Contest ",
    "exhibit_4th_desc2": "to celebrate the 4th anniversary of entry.",
    "exhibit_4th_desc3": "Show off your great project!",
    "exhibit_4th_button": "View Details",
    "visang_edu_entry": "ビサン教育　エントリーを学習する",
    "cmass_edu_entry": "CMAS　エントリーを学習する",
    "chunjae_edu_entry": "天才教科書　エントリーを学習する",
    "kumsungemt_edu_entry": "ギムソン出版社 エントリーを学習する",
    "kumsungMid_edu_entry": "ギムソン出版社 エントリーを学習する",
    "gilbutEdu_edu_entry": "ギルバート出版社 エントリーを学習する",
    "miraenCoding_edu_entry": "ミライエン エントリーを学習する",
    "textbook_help_data": "助力資料",
    "textbook_teaching_activity": "授業教案&活動誌",
    "textbook_kyohacksa": "Kyohaksa",
    "textbook_kumsung": "Kumsung Publishing",
    "textbook_donga": "Dong-a Publishing",
    "textbook_chunjae": "Chunjae Education",
    "textbook_miraen": "Mirae-n",
    "textbook_visang": "Visang",
    "partner": "パートナー",
    "project_term_popup_title": "作品公開に伴うエントリー著作権ポリシーに同意",
    "project_term_popup_description_1": "作品公開のため",
    "project_term_popup_description_2": "以下のポリシーを確認してください。",
    "project_term_popup_description_3": " ",
    "project_term_popup_description_4": " ",
    "project_term_agree_1_1": "自分が作った作品及びそのソースコードの公開に同意します。",
    "project_term_agree_2_1": "他人が自分の作品を利用することを許可します。",
    "project_term_agree_2_2": "(コピー、配布、公衆送信を含む)",
    "project_term_agree_3_1": "他人が自分の作品を修正することを許可します。",
    "project_term_agree_3_2": "(リミックス、変形、2次著作物作成を含む)",
    "agree_all": "すべて同意",
    "select_login": "ログイン選択",
    "select": "選択してください",
    "with_login": "ログインして",
    "without_login": "ログインせずに",
    "start_challenge": "ミッションにチャレンジする",
    "start_challenge_2": "ミッションにチャレンジする",
    "if_not_save_not_login": "* ログインせずにミッションに参加すると、進行状況が保存されません。",
    "if_not_member_yet": "エントリー会員でない場合は?",
    "join_entry": "エントリー会員登録",
    "learned_computing": "これまでソフトウェア教育を受けたことがありますか?",
    "cparty_index_description_1": "ワクワクするソフトウェアとの初対面。",
    "cparty_index_description_2": "ソフトウェアと楽しく遊んでいるうちにソフトウェアの原理も学べる上、考える力もグンとUP!",
    "cparty_index_description_3": "エントリーを通してコーディングミッションにチャレンジし、証明書を受け取ってください。",
    "cparty_index_description_4": "2015 Online Coding Partyは",
    "cparty_index_description_5": "SW教育体験ウィーク",
    "cparty_index_description_6": "の一環として、",
    "cparty_index_description_7": "小学校コンピューティング教師協会",
    "cparty_index_description_8": "と共同制作されました。",
    "cparty_index_description_9": "2016 Online Coding Partyは",
    "cparty_index_description_10": "2017 Online Coding Partyは",
    "cparty_index_description_11": "「SW教育を準備する先生たちの会」",
    "congratulation": "おめでとうございます!",
    "warm_up": "体験",
    "beginner": "入門",
    "intermediate": "基本",
    "advanced": "発展",
    "applied": "応用",
    "cert_msg_tail": "課程が無事修了しました。",
    "cert_msg_head": " ",
    "maze_text_content_1": "やあ。僕はエントリーボットだよ。いま僕は工場から脱出しなくちゃいけないんだ! 脱出するには先に体を直さなくちゃいけなさそうだ。前にあるパーツを手に入れられるよう手伝ってくれないかな? move()",
    "maze_text_content_2": "うん、とっても上手だね! おかげで体がだいぶ軽くなったよ! 今度もパーツボックスまで僕を移動させてね。だけど、途中に障害物もあるよ。障害物の前ではjump()",
    "maze_text_content_3": "すごいよ! あそこにもパーツがあるね! 道はちょっと曲がりくねってるけど、右や左に回転できるright(); left(); コマンドを使えば十分行けるはず! ",
    "maze_text_content_4": "よし、もう動くのがだいぶ楽になったよ! 今度は今まで学んだコマンドを併せて使ってあのパーツボックスまで行ってみよう!",
    "maze_text_content_5": "わあ、パーツが2つもあるね! 2つとも手に入れて行こう! そうすれば体を早く直せると思うよ!",
    "maze_text_content_6": "今度が最後のパーツになるよ! あれさえあれば僕の体を完璧に直すことができるはず! 今回も手伝ってくれるよね?",
    "maze_text_content_7": "おかげで体がとても良くなったよ! 今から同じことを数回繰り返しても大丈夫なはず。ん? ところで、前にいるあのロボットは何だろ? 手伝ってあげる必要がありそうだよ!　助けてあげよう! for コマンドを使ってあの友達のところに僕を連れて行って!",
    "maze_text_content_8": "よし! おかげで友達ロボットを助け出せたよ! だけど、前にも助けが必要な友達がいるね。でも、今度は蜂の巣があるから気を付けて蜂の巣に触れないようにジャンプして行こう! できるよね? 今度もforコマンドを使って友達がいる場所まで僕を移動させてね!",
    "maze_text_content_9": "今度はforコマンドの代わりにミッションが終了するまで同じことを繰り返すようにするwhileコマンドを使ってみて! 僕を友達のところに連れて行けばミッション完了だよ!",
    "maze_text_content_10": "今度はifコマンドが出てきたね! Ifとwhileコマンドを使って僕がいつ、どの方向に回転するのか教えてね!",
    "maze_text_content_11": "よし、さっきみたいにやってみようか? いつ左に回転するのか教えてほしいな。",
    "maze_text_content_12": "今度は途中に蜂の巣(bee)があるね? いつジャンプすればいいのか教えてくれるかな?",
    "maze_text_content_13": "あちこちに手助けが必要な友達がたくさんいるね! 全員のところに行って助けてあげよう!",
    "maze_text_content_14": "わあ、今度も手助けが必要な友達がたくさんいるね。まず小さな四角形をターンするようにコマンドを作成して、作ったものを繰り返して友達全員を助けてあげよう。",
    "maze_text_content_15": "長い間動いていたらもう疲れちゃったよ。よく使うコマンドをfunctionコマンドを使って関数として作成しておいたよ! 関数を使って僕をバッテリーのところまで移動させてね!",
    "maze_text_content_16": "よし、いいね! じゃあ今度は関数に入るコマンドを挿入して僕をバッテリーのところまで移動させてね!",
    "maze_text_content_17": "よし、今度は関数を作ってからそれを使ってバッテリーを手に入れるように助けてね! 関数を作る時はjump();をうまく混ぜてね!",
    "maze_text_content_18": "今度は道が少し複雑だね。でも、いつleft();を使って、いつright();を使えばいいのかさえ教えてくれれば、バッテリーのところまで行けるはずだよ!",
    "maze_text_content_19": "今度は関数があらかじめ決められているよ! でも関数だけ使ってバッテリーのところに行くのは難しいと思うよ。関数と他のコマンドを混ぜ合わせてバッテリーまで移動させてね!",
    "maze_text_content_20": "よし! 今まで本当によく頑張ってくれたね。おかげで最後のバッテリーを補充さえすればこれからは充電する必要はなさそうだよ。関数を利用してあのバッテリーを手に入れて、僕が自由の身になれるように手伝って!",
    "maze_content_1": "やあ! 僕はエントリーボットだよ。いま僕は工場から脱出しようとしてるんだけど、まずは体を直す必要がありそうなんだ。前にあるパーツを手に入れたいんだけど、手伝ってくれないかな? 前に進むブロックを組み立ててからスタートを押してみて。",
    "maze_content_2": "うん、とっても上手だね! おかげで体がだいぶ軽くなったよ! 前にもパーツがあるけど、今度は道を間違えちゃうと感電しちゃいそうだね。障害物をジャンプするブロックを使ってパーツまで行ってみようか?",
    "maze_content_3": "すごいよ! あそこにもパーツがあるね! 道はちょっと曲がりくねってるけど、回転するブロックを使えば十分行けるはず!  今度も手伝ってくれるよね?",
    "maze_content_4": "よし、もう動くのはだいぶ楽になったよ! 今度は回転とジャンプを一緒に使ってあのパーツを手に入れよう! ",
    "maze_content_5": "わあ、パーツが2つもあるね! 2つとも手に入れて行こう! そうすれば体を早く直せると思うよ!",
    "maze_content_6": "今度が最後のパーツになるよ! あれさえあれば僕の体を完璧に直すことができるはず! 今回も手伝ってくれるよね?",
    "maze_content_7": "おかげで体がとても良くなったよ! 今からは同じことを数回繰り返しても大丈夫なはずだよ。ん? だけど、前にいるあのロボットは何だろ? 手伝ってあげる必要がありそうだよ!　助けてあげよう! 早く繰り返す数字を変えて、あの友達のところに僕を連れて行って!",
    "maze_content_8": "よし! おかげで友達ロボットを助け出せたよ! だけど、前にも手助けが必要な友達がいるね。でも、今度は蜂の巣があるから気を付けて蜂の巣に触れないようにジャンプして行こう! できるよね?  じゃあ、さっきやったように繰り返すを使って友達のところに僕を連れて行ってくれるかな?",
    "maze_content_9": "今度は数字だけ繰り返すのではなく、友達ロボットのところに行く時まで同じことを繰り返すことができるよ! 今回も友達を助けられるよう手伝ってね!",
    "maze_content_10": "今度はもしブロックというのがあるね! もしブロックを使っていつ、どの方向に回転するのか教えてね!",
    "maze_content_11": "よし、さっきみたいにやってみようか? いつ左に回転するのか教えてほしいな。",
    "maze_content_12": "今度は途中に蜂の巣があるね? いつジャンプすればいいのか教えてくれるかな?",
    "maze_content_13": "あちこちに手助けが必要な友達がたくさんいるね! 全員のところに行って助けてあげよう!",
    "maze_content_14": "わあ、今回も手伝う必要のある友達がたくさんいるね。まず小さな四角をターンするようにコマンドを作成して、作ったものを繰り返して友達全員を助けてあげよう。",
    "maze_content_15": "繰り返すを何度も繰り返してたから、よく使うブロックは覚えられそうだよ! 約束ブロックはいま僕が覚えたブロックだよ! ひとまず、ずっと動き回って疲れちゃったから、バッテリーを補充できるように「約束呼び出し」ブロックを使ってバッテリーを補充できるようにしてね!",
    "maze_content_16": "よし、いいね! じゃあ今度は君がよく使うブロックを僕に教えてね! 約束定義ブロックの中によく使うブロックを入れておけばOKだよ!",
    "maze_content_17": "よし、今回も約束を利用してバッテリーを手に入れるように助けてくれるよね? 約束にジャンプするをうまく混ぜてね!",
    "maze_content_18": "今度は道が少し複雑だね。でもいつ左に回って、いつ右に回ればいいかを教えてくれれば充電できそうだよ。",
    "maze_content_19": "今度は約束があらかじめ決められているよ! だけどすぐに約束を使うのはダメみたいだね。僕が行く道を見て約束を使えばバッテリーを補充できるみたいだけど、手伝ってくれるよね?",
    "maze_content_20": "よし! 今まで本当によく頑張ってくれたね。おかげで最後のバッテリーを補充さえすればこれからは充電する必要はなさそうだよ。約束を利用してあのバッテリーを手に入れて、自由の身になれるように手伝ってくれるよね?",
    "maze_content_21": "やあ、僕はエントリーボットだよ。たくさんの友達が僕の助けを必要としてるんだ。繰り返すを利用して友達を助けられるよう連れていってね!",
    "maze_content_22": "ありがとう! 今度は蜂の巣をジャンプして友達を助けに行けるように手伝って!",
    "maze_content_23": "よし! 今度は友達ロボットのところに行くまで繰り返すを利用して友達を助けられるよう手伝って!",
    "maze_content_24": "やあ! 僕はエントリーボットだよ。動きすぎちゃってバッテリーを補充しなくちゃいけないんだ。約束を読み込むを使ってバッテリーを補充できるように手伝って!",
    "maze_content_25": "いいね! 今度は約束をいくつか読み込んでバッテリーがある場所まで行ってみよう!",
    "maze_content_26": "よし! 今から約束するブロックを僕に教えてね! 約束するブロックの中によく使われるブロックを入れればOKだよ!",
    "maze_content_27": "今はあらかじめ約束が決められているよ。だけど、約束を使うには僕が行く方向を見て約束を使う必要があるんだ。手伝ってくれるよね?",
    "maze_content_28": "ついに最後だよ! 約束を利用して最後のバッテリーを手に入れられるように手伝って!",
    "ai_content_1": "やあ! 僕はエントリーボットだよ。宇宙探査を終えて地球に戻ろうとしているんだけど、宇宙をさまよう石のせいでなかなか難しいね。僕が無事に家に帰れるように手伝ってくれないかな? 僕の宇宙船には僕の前と上、それと下に何がどれくらいの距離にいるのかを教えてくれるレーダーがあるんだ。君の判断に役立つはずだよ!",
    "ai_content_2": "ありがとう! おかげで石を簡単に避けられたよ。だけど、今度はもっとたくさんの石があるよね? ブロックを並べて石をあちこちに避けてみよう!",
    "ai_content_3": "いいね! 無事に石を避けられたよ。でも前を見て! さっきよりずっとたくさんの石があるよ。だけど心配する必要はないんだ。僕にはリピートブロックがあるからね。リピートブロックの中に動くブロックを入れれば目的地に到着するまで動き続けるからね!",
    "ai_content_4": "すごいね! リピートブロックを使ったらたくさんの石を避けるのがずっと楽になったよ! だけど、こうやっていちいち操るのは疲れるね。僕にはレーダーがあるから、前に何が出てくるか分かるんだ。前に進んでいるときに前に石があったら避けられるようにしてくれるかな?",
    "ai_content_5": "うまいね! ここまで来れてとっても嬉しいな。今度はレーダーが前にある物体までの距離を話してくれるよ。この機能を使って石を避けてみよう! 石までの距離が遠い時は前に進み続けて、距離が近づくと避けるようにしてくれるかな?",
    "ai_content_6": "わ~すごいね! レーダーを活用して石をうまく避けているよ! 今度はいくつかのレーダーを使って、石をあちこちに避けながら進めるようにしてくれるかな?",
    "ai_content_7": "ふ~。地球にだんだん近づいているね! 石を避ける時、できれば安全な道に行きたいな! 石がもっと遠くにある道がもっと安全なんだよね? 上方向レーダーと下方向レーダーを比較してもっと安全な方角に動くようにしてくれるかな?",
    "ai_content_8": "無事に飛行できてるよ。ん?　ところであれは何だろ?　あれは僕がとても危険な状況で使える特別なエネルギーだよ! 今度はあのアイテムをすべて集めながら進もう!",
    "ai_content_9": "すごいよ! 地球までもうすぐだよ。だけど、前を見ると石で道が完全に塞がれてて先に行けないよね?　でも心配する必要はないよ。アイテムをゲットして使うと、前にある塞いでいる石をなくすことができるんだ!",
    "ai_content_10": "とうとうあそこに地球が見えたよ!　そ、そんな!　飛んでくる石を前もって見ることができないじゃん! 石がどうやって飛んでくるのか分からなくても今までみたいに動けばうまく避けられるはずだよ!　地球まで行くんだ!",
    "maze_hints_title_1": "はじめ方",
    "maze_hints_content_1": "エントリーボットはどうすれば動きますか?",
    "maze_hints_detail_1": "1. ブロックリストからブロックを取り出して「スタートをクリックしたとき」にブロックを繋げてみてね <br> 2. 全部組み立てたら、スタートを押してみて <br> 3.僕は君が組み立てたブロックどおりに上から順番に動くからね",
    "maze_hints_title_2": "障害物をジャンプする",
    "maze_hints_content_2": "障害物がある時はどうすればいいですか?",
    "maze_hints_detail_2": "道の途中で障害物と遭遇することがあるよ。<br>障害物が前にある時にはジャンプするブロックを使う必要があるよ。",
    "maze_hints_title_3": "リピートブロック(1)",
    "maze_hints_content_3": "(3)回リピートブロックはどうやって使いますか?",
    "maze_hints_detail_3": "同じ行動を複数回繰り返すには、~回繰り返すブロックを使う必要があるよ。<br>繰り返したいブロックを～回繰り返すの中に入れて反復回数を入力すればOKだよ。",
    "maze_hints_title_4": "リピートブロック(2)",
    "maze_hints_content_4": "「~に会うまで繰り返す」ブロックはどうやって使いますか?",
    "maze_hints_detail_4": "「~まで繰り返す」を使うと、同じ行動をいつまで繰り返すのか決められるよ。<br>繰り返したいブロックを~まで繰り返すの中に入れればOKだよ。<br>そうすれば、{画像}みたいにタイルの上にいる場合、繰り返しがストップするからね。",
    "maze_hints_title_5": "もしブロック",
    "maze_hints_content_5": "もし~ならブロックはどのように動作しますか?",
    "maze_hints_detail_5": "「前に{画像}があるなら」ブロックを使うと、前に{画像}がある時にどんな行動をするのか決めることができるよ。<br>前に{画像}がある時だけブロックの中のブロックを実行して、<br>そうでない時は実行しないようになるんだ。",
    "maze_hints_title_6": "リピートブロック(3)",
    "maze_hints_content_6": "すべての~に会う時までブロックはどのように動作しますか?",
    "maze_hints_detail_6": "すべての{タイル}に一度ずつ到着するまでその中にあるブロックを繰り返して実行するよ。<br>すべての{タイル}に一度ずつ到着すると繰り返しがストップするからね。",
    "maze_hints_title_7": "特別ヒント",
    "maze_hints_content_7": "難しすぎます。助けてください。",
    "maze_hints_detail_7": "僕が行かなくちゃいけない道を詳しく見てみて。小さな四角が4つ見えるよね?<br>小さな四角を回るブロックを作って、繰り返すを使ってみたらどうかな?",
    "maze_hints_title_8": "約束",
    "maze_hints_content_8": "「約束する/約束を読み込む」は何ですか? どうやって使いますか?",
    "maze_hints_detail_8": "僕を動かすためによく使うブロックのリストを「約束する」ブロックの下に並べて約束として作成できるよ。<br>一度作っておいた約束は「約束を読み込む」ブロックを使って何度も取り出して使えるんだ。",
    "ai_hints_title_1_1": "ゲームの目標",
    "ai_hints_content_1_1": "石を避けて右の惑星まで無事に移動できるように手伝ってください。",
    "ai_hints_detail_1_1": "石を避けて右の惑星まで無事に移動できるように手伝ってください。",
    "ai_hints_title_1_2": "はじめ方",
    "ai_hints_content_1_2": "どうすれば始められますか?",
    "ai_hints_detail_1_2": "1. ブロックリストからブロックを取り出して「スタートをクリックしたとき」にブロックを繋げてみてね <br> 2. 全部組み立てたら、スタートを押してみて <br> 3.僕は君が組み立てたブロックどおりに上から順番に動くからね",
    "ai_hints_title_1_3": "動かす",
    "ai_hints_content_1_3": "エントリーボットはどうすれば動きますか?",
    "ai_hints_detail_1_3": "僕は上に行ったり、前や下に行ったりできるよ。<br>方向を決める時は、石のない方向に安全に行けるようにしてね。<br>僕を画面の外に行かせてしまうと宇宙の迷子になっちゃうから気を付けて!",
    "ai_hints_title_2_1": "ゲームの目標",
    "ai_hints_content_2_1": "リピートブロックで石を避けられるように手伝ってください。",
    "ai_hints_detail_2_1": "リピートブロックで石を避けられるように手伝ってください。",
    "ai_hints_title_2_2": "リピートブロック",
    "ai_hints_content_2_2": "リピートブロックはどんなブロックですか?",
    "ai_hints_detail_2_2": "ふ～。遠くまで行かなくちゃいけないのに、1つずつ組み立てるのは大変そうだね。リピートブロックを使用してみよう。<br>同じように繰り返されるブロックをリピートブロックでくくっておけば、とても長いブロックを短くすることができるよ!",
    "ai_hints_content_3_1": "もしブロックで石を避けられるように手伝ってください。",
    "ai_hints_title_3_2": "もしブロック(1)",
    "ai_hints_content_3_2": "もし~ならブロックはどのように動作しますか?",
    "ai_hints_detail_3_2": "もし前に~があるなら/そうでなければブロックを使うと、自分の目の前に石があるのか確認して違う動きができるよ~。<br>もし自分の目の前に石があるなら「もし」の下にあるブロックを実行して、石がないなら「そうでなければ」の中にあるブロックを実行するんだ。<br>僕の目の前に石がある時とない時でどう動くのかをちゃんと決めてね~",
    "ai_hints_content_4_1": "レーダーの使用方法を身に着けて石を避けてみてください。",
    "ai_hints_detail_4_1": "レーダーの使用方法を身に着けて石を避けてみてください。",
    "ai_hints_title_4_2": "レーダー(1)",
    "ai_hints_content_4_2": "レーダーとは何ですか? どうすれば活用できますか?",
    "ai_hints_detail_4_2": "レーダーは、物体と自分が今どれだけ離れているかを教えてくれる機械だよ。<br>もし自分の前に何かがあるなら、前方向レーダーは'1'を表示するよ。<br>それと、レーダーは１人でいる時、もし&lt;true&gt;なら/そうでなければブロック<br>のように使えばとっても強力な道具になるんだ。<br>例えば、僕の前にある物体との距離が1より大きい時は安全に前に行けるけど、そうでなければ上と下、どちらかに避けることもできるよね。",
    "ai_hints_title_4_3": "もしブロック(2)",
    "ai_hints_content_4_3": "もし<true>ならブロックはどうやって使いますか?",
    "ai_hints_detail_4_3": "もし&lt;true&gt;なら/ そうでなければブロックは&lt;true&gt;の中にある内容が合っていれば、「もし」の下にあるブロックを実行して、違うなら「そうでなければ」の下にあるブロックを実行するんだ。<br>どんな状況で違う動きをしたいのかをよく考えて、&lt;true&gt;の中に適切な判断条件を作成して入れてみてね。<br>判断条件を満たして「もし」の下にあるブロックを実行すると、「そうでなければ」の下にあるブロックは実行されないから覚えておいてね!",
    "ai_hints_content_5_1": "レーダーを活用して石を簡単に避けられるように手伝ってください。",
    "ai_hints_detail_5_1": "レーダーを活用して石を簡単に避けられるように手伝ってください。",
    "ai_hints_title_5_2": "もしブロック(3)",
    "ai_hints_content_5_2": "もしブロックが重なっている時はどのように動作しますか?",
    "ai_hints_detail_5_2": "もし~ / そうでなければブロックの中にも、もし~/そうでなければブロックを入れられるよ! こうすれば、様々な状況で自分がどのように行動すればいいか決めることができるんだ。<br>例えば、前に石が道をふさいでいる時とそうでない時の行動を決めると、石がある時の状況でも状況に応じて上と下、どちらに行くのかを選択できるようになるよ",
    "ai_hints_title_6_1": "レーダー(2)",
    "ai_hints_content_6_1": "上方向レーダーと下方向レーダーの値を比較したい時はどうすればいいですか?",
    "ai_hints_detail_6_1": "([上方向]レーダー)ブロックは、上の物体までの距離を意味するブロックだよ。<br>上と下のどちらが石からもっと遠いのかを確認する時に使えるブロックなんだ。<br>石を避ける道を選択する時は、遠く離れている方に避けるのが遠くまで行く時に有利なはずだよ~",
    "ai_hints_content_7_1": "アイテムに向かって移動し、石を避けてください。",
    "ai_hints_detail_7_1": "アイテムに向かって移動し、石を避けてください。",
    "ai_hints_title_7_2": "物体名確認",
    "ai_hints_content_7_2": "前に遭遇する物体の名前を確認すると何ができますか?",
    "ai_hints_detail_7_2": "アイテムを獲得するためには、アイテムがどこにあるのか確認する必要があるよ。<br>そんな時に使えるブロックが[上]の物体は[アイテム]か?ブロックだよ。<br>このブロックを使うとアイテムがどの位置にあるかが分かるから、アイテムのある方向に動くようにブロックを組み立てられるよ。",
    "ai_hints_content_8_1": "適切なアイテムを使って石を避けてみてください。",
    "ai_hints_detail_8_1": "適切なアイテムを使って石を避けてみてください。",
    "ai_hints_title_8_2": "アイテム",
    "ai_hints_content_8_2": "アイテムはどのように手に入れて使いますか?",
    "ai_hints_detail_8_2": "石をあちこちにうまく避けていても、前が石で全部ふさがれてしまっている…こんな時に抜け出す方法はないのかな? こんな時は、アイテム使用ブロックを使ってみてね。<br>このブロックは自分の前の石をすべて消すブロックだよ。<br>ただし、アイテムがなければブロックを使うことはできないよ。アイテムは画像を通過するとゲットできるんだ。",
    "ai_hints_content_9_1": "今まで学んできたことをすべて生かして、できる限り遠くまで行ってください。",
    "ai_hints_detail_9_1": "今まで学んできたことをすべて生かして、できる限り遠くまで行ってください。",
    "ai_hints_title_9_2": "そして",
    "ai_hints_content_9_2": "そしてブロックはどうやって使いますか?",
    "ai_hints_detail_9_2": "そしてブロックには複数の条件を入れることができるよ。入れたすべての条件がtrueの時だけtrueになって、もしブロックの中にあるブロックが実行されるよ。1つでもfalseがあるとfalseと認識してその中にあるブロックは実行しないんだ",
    "maze_text_goal_1": "move(); コマンドを使って、パーツボックスまで僕を移動させてね!",
    "maze_text_goal_2": "jump(); コマンドで障害物を避けてパーツボックスまで僕を移動させてね!",
    "maze_text_goal_3": "left(); right(); コマンドでパーツボックスまで僕を移動させてね!",
    "maze_text_goal_4": "いろんなコマンドを使って、パーツボックスまで僕を移動させてね!",
    "maze_text_goal_5": "2つのパーツボックス両方に行けるように僕を移動させてね!",
    "maze_text_goal_6": "2つのパーツボックス両方に行けるように僕を移動させてね!",
    "maze_text_goal_7": "for コマンドを使って、友達がいる場所まで僕を移動させてね!",
    "maze_text_goal_8": "for コマンドを使って、障害物を避けながら友達がいる場所まで僕を移動させてね!",
    "maze_text_goal_9": "whileコマンドを使って、友達がいる場所まで僕を移動させてね!",
    "maze_text_goal_10": "ifとwhileコマンドを使って、友達がいる場所まで僕を移動させてね!",
    "maze_text_goal_11": "ifとwhileコマンドを使って、友達がいる場所まで僕を移動させてね!",
    "maze_text_goal_12": "ifとwhileコマンドを使って、友達がいる場所まで僕を移動させてね!",
    "maze_text_goal_13": "whileとforコマンドを使って、友達全員に会えるように僕を移動させてね!",
    "maze_text_goal_14": "whileとfor コマンドを使って、友達全員に会えるように僕を移動させてね!",
    "maze_text_goal_15": "関数を呼び出してバッテリーまで僕を移動させてね!",
    "maze_text_goal_16": "関数にコマンドを入れ、関数を呼び出してバッテリーまで僕を移動させてね!",
    "maze_text_goal_17": "関数にコマンドを入れ、関数を呼び出してバッテリーまで僕を移動させてね!",
    "maze_text_goal_18": "関数にコマンドを入れ、関数を呼び出してバッテリーまで僕を移動させてね!",
    "maze_text_goal_19": "関数にコマンドを入れ、関数を呼び出してバッテリーまで僕を移動させてね!",
    "maze_text_goal_20": "関数と他のコマンドを混ぜて使って、バッテリーまで僕を移動させてね!",
    "maze_attack_range": "攻撃可能回数",
    "maze_attack": "攻撃",
    "maze_attack_both_sides": "両側攻撃",
    "above_radar": "上方向レーダー",
    "above_radar_text_mode": "radar_up",
    "bottom_radar": "下方向レーダー",
    "bottom_radar_text_mode": "radar_down",
    "front_radar": "前方向レーダー",
    "front_radar_text_mode": "radar_right",
    "above_object": "上の物体",
    "above_object_text_mode": "object_up",
    "front_object": "前の物体",
    "front_object_text_mode": "object_right",
    "below_object": "下の物体",
    "below_object_text_mode": "object_down",
    "destination": "目的地",
    "asteroids": "石",
    "item": "アイテム",
    "wall": "壁",
    "destination_text_mode": "destination",
    "asteroids_text_mode": "stone",
    "item_text_mode": "item",
    "wall_text_mode": "wall",
    "buy_now": "購入へ移動",
    "goals": "目標",
    "instructions": "利用案内",
    "object_info": "オブジェクト情報",
    "entry_basic_mission": "エントリー基本ミッション",
    "entry_application_mission": "エントリー応用ミッション",
    "maze_move_forward": "前に1マス移動",
    "maze_when_run": "スタートをクリックしたとき",
    "maze_turn_left": "左側に回転",
    "maze_turn_right": "右側に回転",
    "maze_repeat_times_1": " ",
    "maze_repeat_times_2": "回繰り返す",
    "maze_repeat_until_1": " ",
    "maze_repeat_until_2": "に会うまで繰り返す",
    "maze_call_function": "約束を読み込む",
    "maze_function": "約束する",
    "maze_repeat_until_all_1": "すべて",
    "maze_repeat_until_all_2": "会うまで繰り返す",
    "command_guide": "コマンドヘルプ",
    "ai_success_msg_1": "おかげで無事に地球に到着できたよ! ありがとう!",
    "ai_success_msg_2": "よかった! おかげで",
    "ai_success_msg_3": "回前に進むことができたから地球に救助信号を送ったよ! 今から地球から救助隊が来るはずだよ! ありがとう!",
    "ai_success_msg_4": "いいね!",
    "ai_cause_msg_1": "大変だ、どう動くべきなのかもっと話してもらえるかな?",
    "ai_cause_msg_2": "うわっ! 本当に危なかったよ! もう一度チャレンジしてみよう",
    "ai_cause_msg_3": "わわっ! 行くべき道から外れると宇宙の迷子になっちゃうよ。もう一度チャレンジしてみよう",
    "ai_cause_msg_4": "すごく複雑だね。このブロックを使って動かしてみる?",
    "ai_move_forward": "前に進む",
    "ai_move_above": "上に行く",
    "ai_move_under": "下に行く",
    "ai_repeat_until_dest": "目的地に到達するまで繰り返す",
    "ai_if_front_1": "もし前に",
    "ai_if_front_2": "があるなら",
    "ai_else": "そうでなければ",
    "ai_if_1": "もし",
    "ai_if_2": "なら",
    "ai_use_item": "アイテム使用",
    "ai_radar": "レーダー",
    "ai_above": "上方向",
    "ai_front": "前方向",
    "ai_under": "下方向",
    "ai_object_is_1": " ",
    "ai_object_is_2": "物体は",
    "challengeMission": "他のミッションにチャレンジする",
    "nextMission": "次のミッションにチャレンジする",
    "withTeacher": "一緒に制作した先生方",
    "host": "主催",
    "support": "後援",
    "subjectivity": "主管",
    "learnMore": " もっと学びたいです",
    "ai_object_is_3": "なのか?",
    "stage_is_not_available": "このステージはまだ進められません。順番にステージを進めてください。",
    "progress_not_saved": "進行状況は保存されません。",
    "want_refresh": "このページを更新しますか?",
    "monthly_entry_grade": "小学校3学年 ~ 中学校3学年",
    "monthly_entry_contents": "毎月発刊される月刊エントリーと共にソフトウェア教育を始めてみましょう! 少しずつ進めて行けば簡単に身に着けられるよう、ライトに構成されています。基本、応用コンテンツに加え、さらにその先まで! 毎月アップデートされる8つのコンテンツと教材をお楽しみください~",
    "monthly_entry_etc1": "*メインページの月刊エントリーオススメコースを活用すれば、もっと簡単に授業を進めることができます。",
    "monthly_entry_etc2": "*月刊エントリーは学期中にのみ発刊されます。",
    "group_make_lecture_1": "自分が作った講義がありません。",
    "group_make_lecture_2": "「作成する>オープン講義を作成する」で",
    "group_make_lecture_3": "クラスの学習内容に追加したい講義を作成してください。",
    "group_make_lecture_4": "講義を作成する",
    "group_add_lecture_1": "関心講義がありません。",
    "group_add_lecture_2": "「学習する>オープン講義>講義」でクラスの学習内容に",
    "group_add_lecture_3": "追加したい講義を関心講義に登録してください。",
    "group_add_lecture_4": "講義を見る",
    "group_make_course_1": "自分が作った講義集がありません。",
    "group_make_course_2": "「作る > オープン講義を作成する>講義集を作成する」で",
    "group_make_course_3": "学習内容に追加したい講義集を作成してください。",
    "group_make_course_4": "講義集を作成する",
    "group_add_course_1": "関心講義集がありません。",
    "group_add_course_2": "「学習する > オープン講義>講義集」でクラスの学習内容に",
    "group_add_course_3": "追加したい講義集を関心講義集に登録してください。",
    "group_add_course_4": "講義集を見る",
    "hw_main_title": "プログラムダウンロード",
    "datablock_contest_title": "データ分析ブロック",
    "datablock_content_head": "データを加工して表現しよう",
    "datablock_content_body1": "生活の中で出会う色んなデータをチャートで表現して意味を探し、",
    "datablock_content_body2": "実際の問題を解決してみよう！",
    "campaign_contest_title": "Let's make a beautiful internet world",
    "campaign_content_head": "Entry Project Contest",
    "campaign_content_body1": "Create an originative project about 'internet ethics'",
    "campaign_content_body2": "and apply for the contest!",
    "campaign_content_button": "View details",
    "code_management_1": "ENTRYキャンペーン#1 コードを上手に管理しよう",
    "code_management_2": "マイボックスとメモの活用",
    "code_management_3": "新しい機能と一緒にコードを管理し、",
    "code_management_4": "作品を作って共有する方法について知りましょう。",
    "code_management_5": "キャンペーンを見る",
    "shcoolbook_study_1": "教科書の内容をそのまま",
    "shcoolbook_study_2": "教科書で学ぶ",
    "shcoolbook_study_3": "先生は教室で授業を、",
    "shcoolbook_study_4": "生徒は家で復習することができます！",
    "shcoolbook_study_5": "学ぶ",
    "main_learn_1": "エントリーが初めてなら",
    "main_learn_2": "エントリーについて知ろう",
    "main_learn_3": "動画でエントリーのさまざまな機能を学び,",
    "main_learn_4": "ステキな作品を作って友だちと共有してみましょう！",
    "main_learn_5": "動画を見る",
    "hw_desc_wrapper": "ハードウェア結合プログラムとオフ\nラインバージョンが\より一層レベルアップしてアップグ\nレードされました。",
    "hw_downolad_link": "ハードウェア結合\nプログラムダウンロード",
    "save_as_image_all": "すべてのコードを画像で保存する",
    "save_as_image": "画像で保存する",
    "maze_perfect_success": "さすが！完璧だったね~",
    "maze_success_many_block_1": "よし",
    "maze_fail_obstacle_remain": "みんなが怪我をしないよう、すべての<span class='bitmap_obstacle_spider'></span>をなくそう。",
    "maze_fail_item_remain": "サリー姫を救出できるようにミネラルを全部集めよう。サリー姫を救出できるようにミネラルを全部集めよう。",
    "maple_fail_item_remain": "食べ物が全部食べられなかったから力が出ないよ。食べ物を全部食べられるように手伝って。",
    "maze_fail_not_found_destory_object": "何もないマスで無駄にスキルを使っちゃダメだよ!",
    "maze_fail_not_found_destory_monster": "モンスターがいないマスでは攻撃しちゃダメだよ!",
    "maple_fail_not_found_destory_monster": "攻撃ブロックはモンスターがある時だけ使うんだよ!",
    "maze_fail_more_move": "目的地に着くには、もっと進まないと!",
    "maze_fail_wall_crash": "うわ! そこは突き当たりだよ!",
    "maze_fail_contact_brick": "あいたたた…ぶつかっちゃったよ!",
    "maze_fail_contact_iron1": "うわ! 障害物にぶつかっちゃったね",
    "maze_fail_contact_iron2": "うわ! 障害物が落ちてきてぶつかっちゃったよ。障害物が落ちてくる前に動いてね…",
    "maze_fail_fall_hole": "あぁ、落とし穴に落ちちゃったね…",
    "maze_fail_hit_unit": "モンスターにやられてしまった! 危険なモンスターをやっつける<ハートを飛ばす>ブロックを使ってね!",
    "maze_fail_hit_unit2": "くぅ、モンスターにやられてしまった! 2マス離れたところから攻撃してね!",
    "maze_fail_hit_unit_by_mushroom": "メイプルキノコにやられてしまった!<br /><img src='/img/assets/maze/icon/mushroom.png' />攻略するブロックを使って悪いモンスターをこやっつけよう!",
    "maze_fail_hit_unit_by_lupin": "ルパンにやられてしまった!<br /><img src='/img/assets/maze/icon/lupin.png' />攻略するブロックを2マス離れたところで使って、悪いモンスターをやっつけよう!",
    "maze_fail_elnath_fail": "うわっ！悪いモンスターから攻撃されちゃった！<br/>悪いモンスターが近づかないようにやっつけて！",
    "maze_fail_pepe": " ",
    "maze_fail_yeti": "そのモンスターはとても強いから、<img width='24px' src='/img/assets/week/blocks/yeti.png'/>攻攻撃するブロックではやっつけられないよ！<br/><img width='24px' src='/img/assets/week/blocks/bigYeti.png'/>攻略するブロックを使ってみよう。",
    "maze_fail_peti": "そのモンスターに<img width='24px' src='/img/assets/week/blocks/bigYeti.png'/>攻略するブロックを使うと、<br/>強いモンスターの<img width='24px' src='/img/assets/week/blocks/bigYeti.png'/>がが現れたときにやっつけられないよ！<br/><img width='24px' src='/img/assets/week/blocks/yeti.png'/>攻略するブロックを使ってみよう。",
    "maze_fail_both_side": "両隣を攻撃するブロックは両隣にモンスターがいるときしか使っちゃダメだよ！",
    "maze_wrong_attack_obstacle": "ここからは<img src='/img/assets/maze/icon/lupin.png' />攻撃するブロックは使えないよ！<br/>メイプルキノコには<img src='/img/assets/maze/icon/mushroom.png' />攻撃するブロックを使ってみよう。",
    "maze_fail_contact_spider": "クモの巣に引っかかって動けないぃ…",
    "maze_success_perfect": "さすが!完璧だったね~",
    "maze_success_block_excess": "よし! %1個のブロックを使って成功させたね!<br>でも%2個のブロックだけで成功させる方法もあるよ。もう一度チャレンジしてみない?",
    "maze_success_not_essential": "よし! %1個のブロックを使って成功させたね!<br>でもこのブロックを使えば、もっと簡単に解決できるよ。もう一度チャレンジしてみない?",
    "maze_success_final_perfect_basic": "よし!サリー姫の居場所が確認できたよ!これでサリー姫が救えるはず!",
    "maze_success_final_block_excess_basic": "よし!サリー姫の居場所が確認できたよ!これでサリー姫が救えるはず!%1個のブロックを使ったけど、%2個のブロックだけで成功させる方法もあるよ。もう一度チャレンジしてみない?",
    "maze_success_final_perfect_advanced": "サリー姫の居場所に着いたよ!さあ、メフィストを倒してサリーを救おう!",
    "maze_success_final_block_excess_advanced": "サリー姫の居場所に着いたよ!さあ、メフィストを倒してサリーを救おう!%1個のブロックを使ったけど、%2個のブロックだけで成功させる方法もあるよ。もう一度チャレンジしてみない?",
    "maze_success_final_distance": "よし!ついにみんなでサリー姫を無事に救出できたよ。手伝ってくれて本当にありがとう! <br>%1マス動いて成功させたけど、もう一度チャレンジして60マスまで行ってみない?",
    "maze_success_final_perfect_ai": "よし!ついにみんなでサリー姫を無事に救出できたよ。手伝ってくれて本当にありがとう! ",
    "maple_success_perfect": "さすが!完璧だったね~!!",
    "maple_success_block_excess": "よし!( )個のブロックを使って成功させたね! <br> でも、%2個のブロックだけで成功させる方法もあるよ。もう一度チャレンジしてみない?",
    "maple_success_not_essential": "よし! %1個のブロックを使って成功させたね! <br>でも、このブロックを使えばもっと簡単に解決できるよ。もう一度チャレンジしてみない?",
    "maple_success_final_perfect_henesys": "素晴らしい！見事にヘネシスの冒険を成功させたね！",
    "maple_success_final_perfect_excess_henesys": "素晴らしい！見事にヘネシスの冒険を成功させたね！<br />でも、%2個のブロックだけで成功させる方法もあるよ。もう一度チャレンジしてみない?",
    "maple_success_final_not_essential_henesys": "素晴らしい！見事にヘネシスの冒険を成功させたね！<br />でも、このブロックを使えばもっと簡単に解決できるよ。もう一度チャレンジしてみない?",
    "maple_success_final_perfect_ellinia": "ここでの冒険は本当に楽しかったよ！<br/>次の冒険にも付き合ってくれるよね?",
    "maple_success_final_perfect_excess_ellinia": "ここでの冒険は本当に楽しかったよ！<br />でも、%2個のブロックだけで成功させる方法もあるよ。もう一度チャレンジしてみない?",
    "maple_success_final_not_essential_ellinia": "ここでの冒険は本当に楽しかったよ！<br />でも、このブロックを使えばもっと簡単に解決できるよ。もう一度チャレンジしてみない?",
    "maple_fail_fall_hole": "うわっ！落ちちゃったね…<br />ジャンプするブロックを使ってジャンプしてみよう。",
    "maple_fail_ladder_fall_hole": "うわっ！落ちちゃったね…<br />はしごを使うブロックを使って他の道に行ってみよう.",
    "maple_fail_more_move": "成功するには、目的地までもっと進まないと!",
    "maple_fail_not_found_ladder": "残念！ここには登れるはしごがないよ。<br />はしごを使うブロックははしごがある場所でしか使っちゃダメだよ。",
    "maple_fail_not_found_meat": "残念！ここには食べられる食べ物がないよ!<br />食べ物を食べるブロックは食べ物がある場所でしか使っちゃダメだよ。",
    "maple_cert_input_title": "証明書に記入する、きみのお名前は？",
    "maze_distance1": "距離1",
    "maze_distance2": "距離2",
    "maze_distance3": "距離3",
    "ev3": "EV3",
    "roborobo_roduino": "Roduino",
    "roborobo_schoolkit": "School Kit",
    "smartboard": "Sciencebox Codingboard",
    "smartboardbt": "Sciencebox Codingboard(Bluetooth)",
    "codestar": "Codestar",
    "cobl": "Cobl",
    "cobl_bt": "Cobl BT",
    "block_coding": "ブロック",
    "python_coding": "エントリーパイソン",
    "dadublock": "DaduBlock",
    "dadublock_car": "DaduBlock Car",
    "blacksmith": "Blacksmith Board",
    "course_submit_homework": "課題提出",
    "course_done_study": "学習完了",
    "course_show_list": "リスト",
    "modi": "MODI",
    "chocopi": "ChocoPi",
    "coconut": "coconut",
    "jdkit": "JDKit",
    "practical_course": "教科用を作成する",
    "entry_user_policy": "エントリー利用ポリシー",
    "entry_scholarship_title": "エントリー学術資料",
    "entry_scholarship_content": "エントリーは大学/学会などと共に多様な研究を行い、専門性を強化し続けています。エントリーで提供している研究用資料を確認してみてください。",
    "entry_scholarship_content_sub": "*エントリーで提供するデータは、研究及び分析に活用されるようオンラインコーディングパーティーに参加したユーザーたちがミッションを解決する一連の過程をログ形式で保存したデータです。",
    "entry_scholarship_download": "資料ダウンロード",
    "codingparty_2016_title": "2016オンラインコーディングパーティー",
    "codingparty_2016_content": "ミッションに参加したユーザーたちのブロック組み立て順、成功/失敗状況が学年、性別情報と共に提供されます。",
    "codingparty_2017_title": "2017 Online coding party",
    "scholarship_go_mission": "ミッションを確認する",
    "scholarship_guide": "資料活用方法",
    "scholarship_see_guide": "ガイドを見る",
    "scholarship_guide_desc": "研究用資料を読み、活用できる方法が書かれている開発ガイドです。",
    "scholarship_example": "資料活用例",
    "scholarship_example_desc": "研究用資料を活用して発表された論文を確認できます。",
    "scholarship_see_example": "論文ダウンロード",
    "altino": "Altino",
    "private_project": "非公開作品です。",
    "learn_programming_entry_mission": "「エントリーボット」と一緒にミッションを解決する",
    "learn_programming_line_mission": "「LINEレンジャー」と一緒にサリーを救え",
    "learn_programming_choseok": "「ココロの声」のジョソクとゲームを作る",
    "learn_programming_maple": "「ピンクビーン」と一緒に楽しいメイプルワールドへ!",
    "learn_programming_level_novice": "基礎",
    "learn_programming_level_inter": "中級",
    "learn_programming_level_advanced": "上級",
    "line_look_for": "サリーを探して",
    "line_rangers_title_string": "学習する : ライン・レンジャーズ",
    "online_codingparty_certificate_string": "オンラインコーディングパーティー",
    "online_codingparty_line_title_string": "ライン・レンジャーズ",
    "line_look_for_desc_1": "LINEレンジャーの力を一つに合わせ、最強ボス・メフィストを倒してサリーを救ってください!",
    "line_save": "サリーを救え",
    "line_save_desc_1": "メフィストの基地に閉じ込められたサリー。LINEレンジャーが障害物を避けてサリーを探し出せるように手伝ってください!",
    "line_escape": "サリーと脱出する",
    "line_escape_desc_1": "爆破されたメフィスト基地からサリーとLINEレンジャーが無事に脱出できるよう、手伝ってください!",
    "solve_choseok": "じゃんけんゲームを作ろう",
    "solve_choseok_desc_1": "漫画キャラクターのジョソクがじゃんけんゲームを作れるよう手伝ってください!",
    "solve_henesys": "ヘネシス",
    "solve_ellinia": "エリニア",
    "solve_elnath": "エルナス",
    "solve_henesys_desc_1": "村を冒険し、お腹をすかせたピンクビーンが食べ物をお腹いっぱい食べられるように手伝ってください!",
    "solve_ellinia_desc_1": "森の中を探検し、悪いモンスターたちをやっつけて友達モンスターを助けてください!",
    "solve_elnath_desc_1": "悪いモンスターが占領した雪山を越えて新しい冒険をスタートできるように、違うポータルを求めて旅立ってください!",
    "save_modified_shape": "Do you want to save the modified shape?",
    "save_modified_table": "修正したテーブルを保存しますか？",
    "attach_file": "添付",
    "enter_discuss_title": "タイトルを入力してください(40文字以下)",
    "enter_discuss_title_alert": "タイトルを入力してください",
    "discuss_upload_warn": "10MB以下のファイルをアップロードしてください。",
    "discuss_list": "リストを見る",
    "discuss_write_notice": "クラスのお知らせに設定し、掲示板の最上段に表示します。",
    "discuss_write_notice_open": "お知らせに設定し、掲示板の最上段に表示します。",
    "search_전체": "すべて",
    "search_게임": "ゲーム",
    "search_애니메이션": "アニメーション",
    "search_미디어아트": "メディアアート",
    "search_피지컬": "フィジカル",
    "search_기타": "その他",
    "discuss_write_textarea_placeholer": "ENTRYコミュニティは、みんなでいっしょにきずいていく空間です。\n互いに気づかう言葉で楽しいコミュニティにしましょう！",
    "discuss_write_textarea_placeholer_qna": "このページはQ&Aの掲示板です。\nお互い思いやる言葉を使って楽しいコミュニティにしましょう。",
    "discuss_write_textarea_placeholer_tips": "このページはノウハウ＆ティップの掲示板です。\nお互い思いやる言葉を使って楽しいコミュニティにしましょう。",
    "discuss_write_textarea_placeholer_free": "このページはENTRYストーリー掲示板です。\nお互い思いやる言葉を使って楽しいコミュニティにしましょう。",
    "discuss_write_textarea_placeholer_report": "このページは提案＆意見掲示板です。\nお互い思いやる言葉を使って楽しいコミュニティにしましょう。",
    "discuss_write_textarea_placeholer_contest2019": "※ 아래 양식으로 작성하여 제출해주세요.\n\n1. 학년 (예: 초등학교 5학년)\n\n2. 작품 URL (‘공유하기 > 작품 공유하기’에 작품을 공유한 다음, 작품 URL을 복사하여 적어주세요.)\n\n3. 작품 설명\n\n※ 공모전 수상자에게는 이메일이 발송될 예정입니다.\n엔트리의 ‘내 정보 수정‘에 이메일 정보를 꼭 입력해주세요!",
    "maze_road": "道",
    "account_deletion": "会員退会",
    "bug_report_too_many_request": "通報内容を送信しています。しばらくしてからやり直してください。",
    "pinkbean_index_title": "ピンクビーンと一緒に楽しいメイプルワールドへ!",
    "pinkbean_index_content": "退屈に耐えられなかったピンクビーンはメイプルワールドへの冒険に出ることにしました。<br />ピンクビーンと一緒に楽しいメイプルワールドを冒険しながら冒険日記を書いてください。<br />各ステージをクリアしながら自然にソフトウェアについて学ぶことができ、ミッションをすべてクリアすれば証明書ももらえます。",
    "rangers_index_title": "LINEレンジャーと一緒にサリーを救いに出発!",
    "rangers_index_content": "最強ボス・メフィストに連れ去られたサリーを救うため、LINEレンジャーが一つになりました。<br/>プログラミングの原理で障害物を克服し、サリーを救うヒーローになってください。各ステップを<br/>進むと自然にプログラミングを学ぶことができ、ミッションを終えたら証明書ももらえます。",
    "rangers_replay_button": "動画を見る",
    "rangers_start_button": "スタート",
    "lms_curriculum_intro": "",
    "lms_curriculum_goal": "",
    "lms_curriculum_prepare": "",
    "lms_curriculum_study": "",
    "lms_curriculum_summary": "",
    "lms_curriculum_quiz": "",
    "lms_curriculum_now_stage": "",
    "bug_report_title": "バグ報告",
    "bug_report_content": "利用中に発生するエラーやバグの報告のほか、エントリーのためにすばらしい意見をお寄せ下さい。",
    "object_import_syntax_error": "Since the object has syntax error blocks, it cannot be loaded. Please convert into block mode to load the object.",
    "choseok_top_wrapper_panel_title": "ジョソクと一緒にじゃんけんゲームを作ってみよう!",
    "choseok_top_wrapper_panel_des": "ウェブ漫画「ココロの声」がコーディングパーティーのミッションとして登場しました。<br/>漫画の中でジョソクが(じゃんけんゲーム)を作っていく過程に参加し、<br/>ミッションにチャレンジしてみてください。<br/>各ステップをクリアしていくことでソフトウェアについて学ぶことができ、<br/>ミッションを全てクリアすると<br/>証明書と共に自分だけのゲームを手に入れることができます。",
    "choseok_mission_statement1": "ジョソクを動かす",
    "choseok_mission_statement2": "じゃんけん対決スタート",
    "choseok_mission_statement3": "じゃんけんで勝負を決める",
    "choseok_mission_statement4": "じゃんけん対決の結果を表示する",
    "choseok_mission_statement5": "自由に作ってみる",
    "choseok_mission_statement_top1": "ミッション1：ジョソクを動かす",
    "choseok_mission_statement_top2": "ミッション2：じゃんけん対決スタート",
    "choseok_mission_statement_top3": "ミッション3：じゃんけんで勝負を決める",
    "choseok_mission_statement_top4": "ミッション4：じゃんけん対決の結果を表示する",
    "choseok_mission_statement_top5": "ミッション5：自由に作ってみる",
    "advisory_title": "Entry Advisory Group",
    "advisory_sub_title": "This is an advisory group including teachers and students who make Entry together.",
    "data_table_column": "列",
    "data_table_row": "行",
    "data_table_provider": "提供",
    "data_table_modifidate": "修正日",
    "draw_new_table_ques_1": "データを直接入力してテーブルで保存ができます。",
    "draw_new_table_ques_2": "テーブルの画面に移動しますか?"
};
Lang.Msgs = {
    "microbit_led_erase_all": "初期化",
    "loading_plz_wait": "読み込んでいます。しばらくお待ちください",
    "ai_utilize_audio_listening": "聞いている",
    "upload_error_title": "ファイルが拒否されました",
    "upload_error_content": "使用ポリシーに準拠していないファイルは除外されます。",
    "monthly_intro_0": "<月刊エントリー>は、ソフトウェア教育に不慣れな先生でも簡単かつ楽しくソフトウェア教育ができるように作成された ",
    "monthly_intro_1": "SW教育雑誌です。面白い学習漫画と共にお送りするSW教育コンテンツをお楽しみください!",
    "monthly_title_0": "犬を散歩させる / 線対称図形描画",
    "monthly_title_1": "動画の原理 / 音楽プレイヤー作成する",
    "monthly_title_2": "大韓民国地図パズル / 桜の花アニメーション",
    "monthly_title_3": "マウスゾロゾロ、魚の群れ / 太陽系惑星",
    "monthly_title_4": "ジャガイモ堀り / いちご牛乳の濃さ",
    "monthly_description_0": "キーボード入力に沿って動く犬と、信号と座標を通して図形を描く作品を制作します。",
    "monthly_description_1": "変数を活用して、写真映像作品や音楽プレイヤー作品を制作します。",
    "monthly_description_2": "~の間繰り返すを利用したパズルゲームとコピー、乱数を利用したアニメーション作品を制作します。",
    "monthly_description_3": "続けて繰り返すブロックと数学演算ブロックを使って、魚のメディアアート作品と太陽系を制作します。",
    "monthly_description_4": "信号と変数、数学演算ブロックを活用してジャガイモを堀る作品といちご牛乳を作る作品を制作します。",
    "save_canvas_alert": "保存中です。",
    "feedback_too_many_post": "通報した内容を送信しています。10秒後にもう一度やり直してください。",
    "feedback_duplicated": "既に通報されています",
    "usable_object": "使用可能オブジェクト",
    "shared_varaible": "共有変数",
    "invalid_url": "映像URLを再確認してください。",
    "auth_only": "認証済みのユーザーのみ利用できます。",
    "runtime_error": "実行エラー",
    "to_be_continue": "準備中です。",
    "warn": "警告",
    "error_occured": "もう一度やり直してください。同じ問題が再度発生する時は、「提案と意見」掲示板にお問い合わせください。",
    "error_forbidden": "ログアウト状態であるため、作品を保存することができません。\n他のタブでログアウントされているか確認してください。\nログインの確認ができても、保存ができなければ”提案と意見”にてお問い合わせください。",
    "list_can_not_space": "リスト名のセルを空白にすることはできません。",
    "sign_can_not_space": "信号の名前のセルを空白にすることはできません。",
    "variable_can_not_space": "変数の名前のセルを空白にすることはできません。",
    "training_top_title": "研修プログラム",
    "training_top_desc": "エントリー研修支援プログラムについてご案内いたします。",
    "training_main_title01": "教師のための講師紹介プログラム",
    "training_target01": "教育対象 l 教師",
    "training_sub_title01": "“うちのクラスにSWの翼をつけよう”",
    "training_desc01": "ソフトウェア(SW)教員研修が必要な学校ですか?\nSW教員研修が必要な学校に、SW教育専門教師(ゴートゥーティーチャー)または専門講師をご紹介いたします。",
    "training_etc_ment01": "*講義費などの研修費用は学校側で負担していただく必要があります。",
    "training_main_title02": "ソフトウェア(SW)リード校に訪問する教員研修",
    "training_target02": "教育対象 l SWリード、研究学校",
    "training_sub_title02": "“訪ねて、教えて、つないでいく”",
    "training_desc02": "SW教員研修にお申込みいただいたリード校を抽選でランダムに選び、上半期(4・5・6月)と\n下半期(9・10・11月)に各地域のSW教育専門教師(ゴートゥーティーチャー)が充実した内容の\n楽しいSW基礎研修実施と豊富な教育事例を共有するために訪ねます。",
    "training_etc_ment02": " ",
    "training_main_title03": "保護者と学生のための紹介プログラム",
    "training_target03": "教育対象 l 保護者、学生",
    "training_sub_title03": "“SWともっと近くで触れ合えるチャンス”",
    "training_desc03": "保護者と学生たちを対象に、ソフトウェア(SW)研修が必要な学校に各地域のSW教育専門教師(ゴートゥーティーチャー)または専門講師をご紹介いたします。",
    "training_etc_ment03": "*講義費などの研修費用は学校側で負担していただく必要があります。",
    "training_apply": "申し込み",
    "training_ready": "準備中です。",
    "new_version_title": "最新バージョンインストールのご案内",
    "new_version_text1": "ハードウェア結合プログラムがインストールされていません。",
    "new_version_text2": "<strong>最新バージョン</strong>ではありません。",
    "new_version_text3": "サービスをより一層レベルアップしてアップデートされた",
    "new_version_text4": "最新バージョンの結合プログラムをインストールしてください。",
    "new_version_download": "最新バージョンダウンロード<span class='download_icon'></span>",
    "not_install_title": "未インストールのご案内",
    "hw_download_text1": "ハードウェア結合のために",
    "hw_download_text2": "<strong>ハードウェア結合プログラム</strong>をインストールしてください。",
    "hw_download_text3": "ハードウェア結合プログラムがインストールされていません。",
    "hw_download_text4": "最新バージョンの連結プログラムをインストールしてください。",
    "hw_download_btn": "連結プログラムダウンロード<span class='download_icon'></span>",
    "not_support_browser": "このブラウザには対応していません。",
    "quiz_complete1": "クイズ終了!",
    "quiz_complete2": "全{0}問のうち{1}問に正解しました。",
    "quiz_incorrect": "わわっ。もう一度考えてみよう。",
    "quiz_correct": "正解だよ!",
    "hw_connection_success": "ハードウェア結合成功",
    "hw_connection_success_desc": "ハードウェアアイコンをダブルクリックすると、センサー値のみ確認できます。",
    "hw_connection_success_desc2": "作品でハードウェアを使うことができます。",
    "hw_connection_termination_title": "ハードウェア接続解除",
    "hw_connection_termination_desc": "ハードウェアと接続が解除されました。",
    "hw_connection_failed_title": "ハードウェア接続失敗",
    "hw_connection_failed_desc": "作品で使われたハードウェアが\n接続されているか確認してください。",
    "ie_page_title": "このブラウザには<br/>対応していません。",
    "ie_page_desc": "エントリーはIE 10以上またはchromeでご利用いただけます。<br/>Windowsアップデートを行うか、chromeをインストールしてください。<br/>エントリーオフラインバージョンはインターネットに接続されていない状態でも使用できます。今すぐダウンロードして始めてください!",
    "ie_page_chrome_download": "chrome<br/>をダウンロード",
    "ie_page_windows_update": "Windowsの最新バージョン<br>をアップデート",
    "ie_page_offline_32bit_download": "エントリーオフライン32bit<br>をダウンロード",
    "ie_page_offline_64bit_download": "エントリーオフライン64bit<br>をダウンロード",
    "ie_page_offline_mac_download": "エントリーオフライン<br>をダウンロード",
    "cancel_deletion_your_account": "$1さんの<br />会員退会申請を取消しますか?",
    "account_deletion_canceled_complete": "会員退会申請が取消されました。",
    "journal_henesys_no1_title": "ヘネシス冒険日記　その1",
    "journal_henesys_no2_title": "ヘネシス冒険日記　その2",
    "journal_henesys_no1_content": "ヘネシスで書くはじめての冒険日記だね。今日はヘネシスで一番の古株だと言われている鍛冶屋の家に行こうと思ってジャンプしたら危うく落ちそうになったの。あのおじさん、どうして家の庭にあんなに大きな穴を作ってるんだろう？私ほど強いモンスターじゃない限り、この穴を飛び越えられるような子はあまりいないと思うんだけどね！とりあえず情報ももらえたし、おじさんがおすすめしてくれた食堂にでも行ってみようかな！",
    "journal_henesys_no2_content": "食べ過ぎちゃった… 特に、あの食堂のお肉がすごく美味しかったね。どうすればあんなに柔らかくできるんだろう？！でも、その隣の店のパンはイマイチだったよ。どうやらパティシエさんが食べ物の修練を言い訳に毎日遊び回ってるみたい。そういう時間があるならもっとパンを作ってみるのがいいんじゃないかな。まぁ、お腹もいっぱいになったことだし、本格的に冒険をはじめてみようかな！",
    "journal_ellinia_no1_title": "エリニア冒険日記 その1",
    "journal_ellinia_no2_title": "エリニア冒険日記 その2",
    "journal_ellinia_no1_content": "知らないうちにメイプルキノコを組み敷いてしまったよ… 怒られて当然だよね。 でもさ、だからといって一斉で攻撃してくることないんじゃない？ 本当に怖いやつらだよ。スライムたちが苦戦するのも分かっちゃうなぁ。 でも、このピンクビーン様がやっつけたからもう心配要らないよ！スライムたちも仲間に加わったことだし、もっとテンション上げて素敵な森を冒険してみよう！",
    "journal_ellinia_no2_content": "冒険中に出会った友だち、ロイヤルフェアリーから最近エルナスに怖い噂が出回ってるって聞いたんだけど、なんだろう？今夜は友だちと家で遊ぶことになってるからその時に聞いてみよう。だって気になるんだもん～！ しかし、何を着ていけばいいんだろう…最近太りすぎて着れる洋服がないんだよね… まぁ、私はいつでも可愛いからどんな洋服を着てもみんな喜ぶだろうけどね！",
    "journal_elnath_no1_title": "エルナス冒険日記 その1",
    "journal_elnath_no2_title": "エルナス冒険日記 その2",
    "journal_elnath_no1_content": "うわー！ これが噂の雪ってやつかな？私が住んでいる村はいつでも春だから、雪を見るのは初めてなんだ。モンスターたちのせいでちゃんと見る余裕がなかったんだけど、今見たら世界中がこんなにも真っ白で冷たくなってるなんてビックリだよ！ふわふわでキラキラしてるから美味しそうだなぁと思ったんだけど、特に味はなかった… でもね、甘いチョコシロップをかけて食べたら美味しそうじゃない？少しだけ持っていきたいんだけど持っていける方法がなくて残念だね。",
    "journal_elnath_no2_content": "ペッペッペッ、間違えて石炭の粉を食べてしまったよ。あれもこれも全部悪いモンスターたちのせいだよ！逃げるなら静かに逃げればいいのに、石炭の粉を撒き散らしながら逃げるなんてね！おかげさまで私のツヤツヤで綺麗なピンク色の肌が汚れてちゃったじゃない！早くここを抜け出してお風呂に入りたい… いくら冒険が好きだと行っても、こんなに汚い格好をしたまま歩き回るのはこのピンクビーン様のプライドが許さないよ…",
    "bug_report_alert_msg": "貴重なご意見ありがとうございます。",
    "version_update_msg1": "最新バージョン(%1)を\nご利用いただけます。",
    "version_update_msg2": "エントリーハードウェアの最新バージョン(%1)を\nご使用いただけます。",
    "version_update_msg3": "いまアップデートしますか?",
    "select_the_hardware": "Select the hardware<br />that you would use in the lesson.",
    "select_hardware_button": "Select",
    "select_the_expansion_block": "Select the expansion block that you would use in the lesson.",
    "select_hardware_not_support_info": "ハードウェアブロックはオープンクラスに使用できない。",
    "select_hardware_not_support_info2": "少々お待ちください。",
    "select_expansion_block_button": "Select",
    "expansion_weather_description": "気温、降水量、PM10濃度など韓国の天気と関連したブロックをまとめたものです。",
    "expansion_festival_description": "国内地地方の様々な行事や祭りに関連するブロックをまとめたものです。",
    "expansion_translate_description": "Papagoを使って他の言語に翻訳できるブロックをまとめたものです。",
    "expansion_behaviorConductDisaster_description": "自然災害の発生時に国民が守らなければならない基本的な行動要領（国民安全処からの提供）",
    "expansion_behaviorConductLifeSafety_description": "生活安全のため、国民が守らなければならない基本的な行動要領（国民安全処からの提供）",
    "ai_utilize_tts_description": "nVoiceを使って色んな音声で文章を読むことができるブロックのまとめです。",
    "hardware_need_update_title": "ハードウエア接続ソフトアップデート",
    "hardware_need_update_content": "セキュリティアップデートに伴い、\nバージョン1.76以上をサポートしています。\nバージョンが1.76以下の場合は、\n「接続ソフトをダウンロード」から\nアップデートしてください。",
    "ai_utilize_audio_description": "マイクを利用して、音と音声を検出することができるブロックのコレクションです。",
    "ai_utilize_video_description": "カメラを利用して動きと方向値、そして撮影されるオブジェクトなどを認識できるブロック集です。"
};
Lang.Users = {
    "auth_failed": "認証に失敗しました。",
    "birth_year": "生年",
    "birth_year_before_1990": "1990年以前",
    "edit_personal": "情報修正",
    "email": "メールアドレス",
    "email_desc": "新しいニュースや情報を得られるメールアドレス",
    "email_inuse": "すでに登録されたメールアドレスです",
    "email_match": "メールアドレスを正しく入力してください",
    "forgot_password": "パスワードをお忘れですか?",
    "job": "職業",
    "language": "言語",
    "name": "名前",
    "name_desc": "サイト内で表示される名前またはニックネーム",
    "name_not_empty": "名前を必ず入力してください",
    "password": "パスワード",
    "password_desc": "最低4文字以上の英数字、記号",
    "password_invalid": "パスワードが正しくありません",
    "password_long": "パスワードは4~20文字の英数字、記号で入力してください",
    "password_required": "パスワードは必須入力項目です",
    "project_list": "作品照会",
    "regist": "登録完了",
    "rememberme": "自動ログイン",
    "repeat_password": "パスワード確認",
    "repeat_password_desc": "パスワードをもう一度入力してください",
    "repeat_password_not_match": "パスワードが一致しません",
    "sex": "性別",
    "signup_required_for_save": "保存するには、ログインが必要です。",
    "username": "ID",
    "username_desc": "ログイン時に使用するID",
    "username_inuse": "すでに使用中のIDです",
    "username_long": "IDは4~20文字のアルファベットで入力してください",
    "username_unknown": "このユーザーは存在しません",
    "already_verified": "すでに認証済みのメールアドレスです。",
    "email_address_unavailable": "この認証メールは無効です。",
    "email_address_invalid_for_idpw": "無効なメールアドレスです。\n ID確認／パスワード再登録のメールを再発送してみて下さい。",
    "email_address_invalid_for_certification": "無効なメールアドレスです。\n 認証メールを再送して下さい。",
    "verification_complete": "メールアドレスの認証に成功しました。",
    "reset_password_mail_sent": "Email for password resetting has been sent. Please check your email.",
    "email_not_verified": "This email is not verified. Please verify your email to click 'Verifying email' first.",
    "verification_email_send_complete": "Verifying email has been sent. Please verify your email first.",
    "email_send_failed": "Sending email was failed. Please try again.",
    "email_not_exist": "This email does not exist.",
    "not_valid_email": "Please enter a correct type of email."
};
Lang.Workspace = {
    "picture_rotation": "回転",
    "picture_size": "サイズ",
    "thickness": "太さ",
    "follow": "やってみる",
    "SaveWithPicture": "保存されていない図があります。保存しますか?",
    "RecursiveCallWarningTitle": "関数呼び出し制限",
    "RecursiveCallWarningContent": "一度に多くの関数が呼び出されました。関数の呼び出し回数を減らしてください。",
    "SelectShape": "移動",
    "SelectCut": "切り取り",
    "Pencil": "ペン",
    "Line": "直線",
    "Rectangle": "四角形",
    "Ellipse": "円",
    "Text": "テキストボックス",
    "Fill": "塗りつぶし",
    "Eraser": "クリア",
    "Magnifier": "拡大/縮小",
    "block_helper": "ブロックヘルプ",
    "new_project": "新しいプロジェクト",
    "add_object": "オブジェクトを追加する",
    "download_image_name": "entry_ブロック",
    "all": "すべて",
    "animal": "動物",
    "arduino_entry": "Program for connect to Arduino",
    "arduino_program": "Arduino program",
    "arduino_sample": "Sample code for Arduino",
    "arduino_driver": "Driver for arduino",
    "cannot_add_object": "実行中にはオブジェクトを追加できません。",
    "cannot_add_picture": "実行中には模様を追加できません。",
    "cannot_add_sound": "実行中にはサウンドを追加できません。",
    "cannot_add_expansion_block": "Cannot add expansion block while running a project.",
    "add_object_before_edit": "模様編集のために<br>オブジェクトを追加してください",
    "add_table_before_edit": "テーブルを追加してください。",
    "cannot_edit_click_to_stop": "実行中には修正できません。<br>クリックして停止する。",
    "cannot_open_private_project": "非公開作品は読み込めません。ホームに移動します。",
    "cannot_save_running_project": "実行中には保存できません。",
    "character_gen": "キャラクターを作成する",
    "check_runtime_error": "赤色で表示されたブロックを確認してください。",
    "check_browser_error": "IE/Safariではサポートしていないブロックです。",
    "check_microphone_error": "コンピューターにマイクが接続されていません",
    "check_webcam_error": "コンピューターにカメラが接続されていません",
    "context_download": "PCに保存",
    "context_duplicate": "コピー",
    "context_remove": "削除",
    "context_rename": "名前修正",
    "coordinate": "座標",
    "create_function": "関数を作成する",
    "direction": "移動方向(°)",
    "drawing": "直接描画",
    "enter_list_name": "新しいリストの名前を入力してください(10文字以下)",
    "enter_name": "新しい名前を入力してください",
    "enter_new_message": "新しい信号の名前を入力してください",
    "enter_variable_name": "新しい変数の名前を入力してください(10文字以下)",
    "family": "エントリーボットの家族",
    "fantasy": "ファンタジー/その他",
    "file_new": "新規",
    "file_open": "オンラインの作品を読み込む",
    "file_upload": "オフラインの作品を読み込む",
    "file_upload_login_check_msg": "オフライン作品を読み込むにはログインする必要があります。",
    "file_save": "保存する",
    "file_save_as": "コピーで保存する",
    "file_save_download": "マイコンピューターに保存する",
    "func": "関数",
    "function_create": "関数を作成する",
    "function_add": "関数追加",
    "interface": "インターフェイス",
    "landscape": "背景",
    "list": "リスト",
    "list_add_calcel": "リスト追加取消",
    "list_add_calcel_msg": "リスト追加を取り消しました。",
    "list_add_fail": "リスト追加失敗",
    "list_add_fail_msg1": "同名のリストがすでに存在します。",
    "list_add_fail_msg2": "リストの名前が適切ではありません。",
    "list_add_ok": "リスト追加完了",
    "list_add_ok_msg": "を追加しました。",
    "list_create": "リスト追加",
    "list_create_placeholder": "リスト名を入力してください。",
    "list_dup": "同名のリストがすでに存在します。",
    "list_newname": "新しい名前",
    "list_export": "書き出し",
    "list_import": "読み込み",
    "list_remove": "リスト削除",
    "list_rename": "リスト名変更",
    "list_rename_failed": "リスト名変更失敗",
    "list_rename_ok": "リストの名前の変更に成功しました。",
    "list_too_long": "リストの名前が長すぎます。",
    "message": "信号",
    "message_add_cancel": "信号追加取消",
    "message_add_cancel_msg": "信号追加を取り消しました。",
    "message_add_fail": "信号追加失敗",
    "message_add_fail_msg": "同名の信号がすでに存在します。",
    "message_add_ok": "信号追加完了",
    "message_add_ok_msg": "を追加しました。",
    "message_create": "信号追加",
    "message_create_placeholder": "信号名を入力してください。",
    "message_dup": "同名の信号がすでに存在します。",
    "message_remove": "信号削除",
    "message_remove_canceled": "信号削除を取り消しました。",
    "message_rename": "信号名を変更しました。",
    "message_rename_failed": "信号名の変更に失敗しました。",
    "message_rename_ok": "信号の名前の変更に成功しました。",
    "message_too_long": "信号の名前が長すぎます。",
    "no_message_to_remove": "削除する信号がありません。",
    "no_use": "使われていません。",
    "no_variable_to_remove": "削除する変数がありません。",
    "no_variable_to_rename": "変更する変数がありません。",
    "object_not_found": "ブロックで指定したオブジェクトが存在しません。",
    "object_not_found_for_paste": "ペーストするオブジェクトがありません。",
    "people": "一般人",
    "picture_add": "模様追加",
    "table_add": "テーブルを追加する",
    "draw_new_table": "新しいテーブル",
    "plant": "植物",
    "project": "作品",
    "project_copied": "のコピー",
    "PROJECTDEFAULTNAME": ['おしゃれな', '面白い', '善良な', '大きい', '立派な', 'イケメンな', '幸運の'],
    "remove_object": "オブジェクト削除",
    "remove_object_msg": "が削除されました。",
    "removed_msg": "の削除に成功しました。",
    "rotate_method": "回転方式",
    "rotation": "方向(°)",
    "run": "スタート",
    "saved": "保存完了",
    "saved_msg": "が保存されました。",
    "save_failed": "保存中に問題が発生しました。もう一度やり直してください。",
    "select_library": "オブジェクト選択",
    "select_sprite": "適用するスプライトを1つ以上選択してください。",
    "shape_remove_fail": "模様削除失敗",
    "shape_remove_fail_msg": "最低1つ以上の模様がなければなりません。",
    "shape_remove_ok": "模様が削除されました。",
    "shape_remove_ok_msg": "が削除されました。",
    "load_expansion_block": "拡張ブロック追加する",
    "load_ai_utilize_block": "AIブロックの読み込み",
    "load_ai_utilize_train_block": "鉄道模型",
    "select_expansion_block": "Select block",
    "deselect_expansion_block_warning": "The selected block cannot be deleted. \nThe specified block is currently in use.",
    "deselect_ai_utilize_block_warning": "The selected block cannot be deleted. \nThe specified block is currently in use.",
    "sound_add": "サウンド追加",
    "sound_remove_fail": "サウンド削除失敗",
    "sound_remove_ok": "サウンド削除完了",
    "sound_remove_ok_msg": "が削除されました。",
    "stop": "停止する",
    "pause": "一時停止",
    "restart": "再スタート",
    "speed": "速度を調節する",
    "tab_attribute": "属性",
    "tab_table": "テーブル",
    "tab_code": "ブロック",
    "tab_picture": "形",
    "tab_sound": "サウンド",
    "tab_text": "テキストボックス",
    "textbox": "テキストボックス",
    "textbox_edit": "テキストボックス編集",
    "textbox_input": "テキストボックスの内容を入力してください。",
    "things": "物",
    "textcoding_tooltip1": "ブロックコーディングとエントリーパイソンを<br/>選択して自由に<br/>コーディングに挑戦することができます。",
    "textcoding_tooltip2": "実際の開発環境と同様に<br/>エントリーパイソンモードの実行結果を<br/>確認できます。",
    "textcoding_tooltip3": "エントリーパイソンに対する<br/>基本的な内容を案内しています<br/><エントリーパイソン利用案内>を確認してください!",
    "upload": "ファイルアップロード",
    "upload_addfile": "ファイル追加",
    "variable": "変数",
    "variable_add_calcel": "変数追加取消",
    "variable_add_calcel_msg": "変数追加を取り消しました。",
    "variable_add_fail": "変数追加失敗",
    "variable_add_fail_msg1": "同名の変数がすでに存在します。",
    "variable_add_fail_msg2": "変数の名前が適切ではありません。",
    "variable_add_ok": "変数追加完了",
    "variable_add_ok_msg": "を追加しました。",
    "variable_create": "変数を作成する",
    "variable_add": "変数追加",
    "variable_dup": "同名の変数がすでに存在します。",
    "variable_newname": "新しい名前",
    "variable_remove": "変数削除",
    "variable_remove_canceled": "変数削除を取り消しました。",
    "variable_rename": "変数名を変更します。",
    "variable_rename_failed": "変数名の変更に失敗しました。",
    "variable_rename_msg": "「変数の名前の変更に成功しました。」",
    "variable_rename_ok": "変数の名前の変更に成功しました。",
    "variable_select": "変数を選択してください",
    "variable_too_long": "変数の名前が長すぎます。",
    "open_analizy_data_import": "データ画面を開く",
    "vehicle": "乗り物",
    "add_object_alert_msg": "オブジェクトを追加してください",
    "add_object_alert": "警告",
    "create_variable_block": "変数を作成する",
    "create_list_block": "リストを作成する",
    "Variable_Timer": "ストップウォッチ",
    "Variable_placeholder_name": "変数名",
    "Message_placeholder_name": "Signal name",
    "Variable_property": "変数の属性",
    "Variable_placeholder_content": "変数名を入力してください。",
    "Variable_use_all_objects": "すべてのオブジェクトで使用",
    "Variable_use_this_object": "このオブジェクトで使用",
    "Variable_used_at_all_objects": "すべてのオブジェクトで使われている変数",
    "variable_create_normal": "일반 변수로 사용\n(작품에 저장)",
    "variable_create_cloud": "共有変数として使用\n(サーバーに保存)",
    "variable_create_real_time": "リアルタイム変数として使用\n(サーバーに保存)",
    "Variable_used_at_special_object": "特定のオブジェクトでのみ使われている変数",
    "Variable_used_objects": "使用されたオブジェクト",
    "draw_new": "新しく描画",
    "draw_new_ebs": "直接描画",
    "painter_file": "ファイル▼",
    "painter_file_save": "保存する",
    "painter_file_saveas": "新しい模様で保存",
    "new_picture": "新しい図",
    "painter_edit": "編集 ▼",
    "get_file": "インポート",
    "copy_file": "コピーする",
    "cut_picture": "切り取り",
    "paste_picture": "貼り付け",
    "remove_all": "すべて削除",
    "flip_horizontal": "左右反転",
    "flip_vertical": "上下反転",
    "regular": "普通",
    "bold": "太字",
    "font_underline": "下線",
    "font_tilt": "斜線",
    "font_cancel": "取り消し線",
    "font_color": "文字の色",
    "font_fill": "背景色",
    "font_family": "フォント",
    "align_left": "左揃え",
    "align_center": "中央揃え",
    "align_right": "右揃え",
    "italic": "斜体",
    "textStyle": "文字",
    "add_picture": "模様追加",
    "select_picture": "模様選択",
    "select_table": "テーブルを選択",
    "select_sound": "サウンド選択",
    "Size": "サイズ",
    "show_variable": "変数表示",
    "default_value": "基本値 ",
    "slide": "スライド",
    "min_value": "最小値",
    "max_value": "最大値",
    "number_of_list": "リスト項目数",
    "empty_of_list": "項目が追加されていません。",
    "use_all_objects": "すべてのオブジェクトに使用",
    "list_name": "リスト名",
    "list_property": "リストの属性",
    "list_used_specific_objects": "特定のオブジェクトでのみ使われているリスト",
    "List_used_all_objects": "すべてのオブジェクトで使われているリスト",
    "List_used_objects": "使用されたオブジェクト",
    "Scene_delete_error": "シーンは最低1つ以上なければなりません。",
    "Scene_add_error": "シーンは最大20件まで追加できます。",
    "replica_of_object": "のコピー",
    "will_you_delete_scene": "シーンは一度削除すると取り消すことができません。\n本当に削除しますか?",
    "will_you_delete_function": "関数は一度削除すると取り消すことができません。\n本当に削除しますか?",
    "duplicate_scene": "コピーする",
    "block_explain": "ブロック説明 ",
    "block_intro": "ブロックをクリックすると、ブロックに関する説明が表示されます。",
    "blocks_reference": "ブロック説明",
    "hardware_guide": "ハードウェア結合案内",
    "robot_guide": "ロボット連結案内",
    "python_guide": "エントリーパイソン利用案内",
    "show_list_workspace": "リスト表示",
    "list_create_normal": "リストとして使用\n(作品に保存)",
    "list_create_cloud": "共有リストとして使用\n(サーバーに保存されます)",
    "list_create_real_time": "リアルタイムリストとして使用\n(サーバーに保存)",
    "confirm_quit": "変更した内容を保存しませんでした。",
    "confirm_load_temporary": "保存されていない作品があります。開きますか?",
    "login_to_save": "ログイン後に保存してください。",
    "cannot_save_in_edit_func": "関数編集中には保存できません。",
    "new_object": "新しいオブジェクト",
    "arduino_connect": "",
    "arduino_connect_success": "",
    "confirm_load_header": "作品復旧",
    "uploading_msg": "アップロード中です。",
    "upload_fail_msg": "アップロードに失敗しました。</br>もう一度やり直してください。",
    "upload_not_supported_msg": "この形式には対応していません。",
    "upload_not_supported_file_msg": "このファイル形式には対応していません。",
    "file_converting_msg": "ファイル変換中です。",
    "file_converting_fail_msg": "ファイル変換に失敗しました。",
    "fail_contact_msg": "続けて問題が発生する場合は</br>entry@connect.or.krにお問い合わせください。",
    "saving_msg": "保存中です。",
    "saving_fail_msg": "保存に失敗しました。</br>もう一度やり直してください。",
    "loading_msg": "読み込み中です。",
    "loading_fail_msg": "読み込みに失敗しました。</br>もう一度やり直してください。",
    "restore_project_msg": "正常に保存されていない作品があります。この作品を復旧しますか?",
    "quit_stop_msg": "保存中は終了できません。",
    "ent_drag_and_drop": "アップロードしたいファイルをドロップしてください。",
    "not_supported_file_msg": "このファイル形式には対応していません。",
    "broken_file_msg": "ファイルが壊れているか間違ったファイルを読み込みました。",
    "check_audio_msg": "mp3以外のオーディオファイルはプレイできません。",
    "check_entry_file_msg": "ENTファイルのみ読み込むことができます。",
    "hardware_version_alert_text": "5月30日から旧バージョンの結合プログラムの使用が中止されます。\nハードウェア結合プログラムを最新バージョンにアップデートしてください。",
    "variable_name_auto_edited_title": "変数名自動変更",
    "variable_name_auto_edited_content": "変数名は10文字を超過できません。",
    "list_name_auto_edited_title": "リスト名自動変更",
    "list_name_auto_edited_content": "リスト名は10文字を超過できません。",
    "cloned_scene": "コピー_",
    "default_mode": "基本型",
    "practical_course_mode": "教科型",
    "practical_course": "実科",
    "select_mode": "モード選択",
    "select_mode_popup_title": "エントリーを作成する環境を選択してください。",
    "select_mode_popup_lable1": "基本型",
    "select_mode_popup_lable2": "教科型",
    "select_mode_popup_desc1": "エントリーのすべての機能を利用して<br/>自由に作品を制作します。",
    "select_mode_popup_desc2": "実科の教科書に登場する機能のみを<br/>利用して作品を制作します。",
    "practical_course_notice": "案内",
    "practical_course_desc": "<span class='practical_cource_title'>教科用を作成する</span>は<br />実科の教科書でソフトウェアを学ぶ時に<br />必要な機能のみを提供します。",
    "practical_course_desc2": "*「基本型の作品を作る」を利用すると、さらに多くの機能を<br />使用して作品を作ることができます。",
    "practical_course_tooltip": "すべての機能を利用するには<br/>基本型を選択してください。",
    "name_already_exists": "名前が重複しています。",
    "enter_the_name": "名前を入力してください。",
    "object_not_exist_error": "オブジェクトが存在しません。オブジェクトを追加してからやり直してください。",
    "workspace_tutorial_popup_desc": "<span class='practical_cource_title'>作品を作る</span>では<br />クリエイティブな作品づくりができるように<br /> いろんなブロックを用意しています。",
    "start_guide_tutorial": "「作る」利用案内",
    "language": "言語選択",
    "file": "ファイル",
    "save": "保存する",
    "help": "ヘルプ",
    "print": "印刷",
    "undo": "元に戻す",
    "redo": "やり直し",
    "workspace_title_tooltip": "The default project name has changed. You can\nrecognize what project is through the date you create in\nthe project name.",
    "workspace_object_tooltip": "You can change the order of the object by\ndragging the image of the object. (It is the same\nin the ‘Shape’ and ‘Sound’ sections.)",
    "workspace_comment_tooltip": "You can hide or show all the memos\nadded.",
    "workspace_zoom_tooltip": "You can zoom in/out the blocks. If you click ‘=’\nthe block will be back to original size.",
    "workspace_image_tooltip": "Create your own\nproject with new\nfunctions!",
    "playground_block_drop": "マイボックスのブロックを\nブロック組み立て所に追加します。",
    "container_object_drop": "マイボックスのオブジェクトを\nオブジェクトリストに追加します。",
    "my_storage_block_drop": "ブロックを\nマイボックスに\n追加します。",
    "my_storage_object_drop": "オブジェクトを\nマイボックスに\n追加します。",
    "my_storage": "マイボックス",
    "my_block": "マイブロック",
    "red": "赤(R)",
    "green": "緑(G)",
    "blue": "青(B)",
    "hue": "色相",
    "saturation": "彩度",
    "brightness": "明度",
    "spoid": "スポイト",
    "palette_mode": "パレットモード",
    "slider_mode": "スライダーモード",
    "toast_error_title_object_center": "注意！",
    "toast_error_contents_object_center": "キャラクターの中心点がキャラクターから離れすぎため、修正しました。",
    "blocks_comming_soon": "熱心に研究中です。\nちょっと待ってください!",
    "data_table": "table",
    "select_all": "모두",
    "now_loading_msg": "読み込んでいます。\nしばらくお待ちください。"
};
Lang.code = "コードを見る";
Lang.EntryStatic = {
    "event100": "イベント",
    "groupProject": "クラスを共有する",
    "usage_parallel": "並列",
    "usage_expansion": "Expansion",
    "usage_hw": "ハードウェア",
    "usage_sequence": "順次",
    "privateProject": "自分だけ見る",
    "privateCurriculum": "自分だけ見る",
    "publicCurriculum": "講義集を共有する",
    "publicProject": "作品を共有する",
    "group": "クラスを共有する",
    "groupCurriculum": "クラスを共有する",
    "private": "自分だけ見る",
    "public": "講義を共有する",
    "lecture_is_open_true": "公開",
    "lecture_is_open_false": "非公開",
    "category_all": "すべての作品",
    "category_game": "ゲーム",
    "category_animation": "アニメーション",
    "category_media_art": "メディアアート",
    "category_physical": "フィジカル",
    "category_etc": "その他",
    "category_category_game": "ゲーム",
    "category_category_animation": "アニメーション",
    "category_category_media_art": "メディアアート",
    "category_category_physical": "フィジカル",
    "category_category_etc": "その他",
    "sort_created": "最新順",
    "sort_updated": "最新順",
    "sort_visit": "照会順",
    "sort_likeCnt": "いいね!順",
    "sort_comment": "コメント順",
    "period_all": "すべての期間",
    "period_1": "今日",
    "period_7": "1週間以内",
    "period_30": "1か月以内",
    "period_90": "3か月以内",
    "lecture_required_time_1": " ~ 15分",
    "lecture_required_time_2": "15分 ~ 30分",
    "lecture_required_time_3": "30分 ~ 45分",
    "lecture_required_time_4": "45分 ~ 60分",
    "lecture_required_time_5": "1時間以上",
    "usage_event": "イベント",
    "usage_signal": "信号を送る",
    "usage_scene": "シーン",
    "usage_repeat": "繰り返す",
    "usage_condition_repeat": "条件繰り返し",
    "usage_condition": "選択",
    "usage_clone": "コピー",
    "usage_rotation": "回転",
    "usage_coordinate": "座標移動",
    "usage_arrow_move": "矢印移動",
    "usage_shape": "模様",
    "usage_speak": "話す",
    "usage_picture_effect": "図の効果",
    "usage_textBox": "テキストボックス",
    "usage_draw": "描画",
    "usage_sound": "サウンド",
    "usage_confirm": "判断",
    "usage_comp_operation": "比較演算",
    "usage_logical_operation": "論理演算",
    "usage_math_operation": "数理演算",
    "usage_random": "乱数",
    "usage_timer": "ストップウォッチ",
    "usage_variable": "変数",
    "usage_list": "リスト",
    "usage_ask_answer": "入出力",
    "usage_function": "関数",
    "usage_arduino": "Arduino",
    "concept_resource_analytics": "資料収集/分析/表現",
    "concept_procedual": "アルゴリズムと手順",
    "concept_abstractive": "抽象化",
    "concept_individual": "問題分解",
    "concept_automation": "自動化",
    "concept_simulation": "シミュレーション",
    "concept_parallel": "並列化",
    "subject_korean": "国語",
    "subject_english": "英語",
    "subject_mathmatics": "数学",
    "subject_social": "社会",
    "subject_science": "科学",
    "subject_music": "音楽",
    "subject_paint": "美術",
    "subject_athletic": "体育",
    "subject_courtesy": "道徳",
    "subject_progmatic": "実科",
    "lecture_grade_1": "小1",
    "lecture_grade_2": "小2",
    "lecture_grade_3": "小3",
    "lecture_grade_4": "小4",
    "lecture_grade_5": "小5",
    "lecture_grade_6": "小6",
    "lecture_grade_7": "中1",
    "lecture_grade_8": "中2",
    "lecture_grade_9": "中3",
    "lecture_grade_10": "一般",
    "lecture_level_1": "簡単",
    "lecture_level_2": "普通",
    "lecture_level_3": "難しい",
    "listEnable": "リスト",
    "functionEnable": "関数",
    "messageEnable": "信号",
    "objectEditable": "オブジェクト",
    "pictureeditable": "模様",
    "sceneEditable": "シーン",
    "soundeditable": "サウンド",
    "variableEnable": "変数",
    "e_1": "小学校1年生",
    "e_2": "小学校2年生",
    "e_3": "小学校3年生",
    "e_4": "小学校4年生",
    "e_5": "小学校5年生",
    "e_6": "小学校6年生",
    "m_1": "中学校1年生",
    "m_2": "中学校2年生",
    "m_3": "中学校3年生",
    "general": "一般",
    "curriculum_is_open_true": "公開",
    "curriculum_open_false": "非公開",
    "contest2019": "Contest",
    "exhibit": "Contest",
    "notice": "お知らせ",
    "qna": "Q＆A",
    "tips": "ノウハウ&TIP",
    "free": "自由掲示板",
    "report": "提案と意見",
    "art_category_all": "すべての作品",
    "art_category_game": "ゲーム",
    "art_category_animation": "アニメーション",
    "art_category_physical": "フィジカル",
    "art_category_etc": "その他",
    "art_category_media": "メディアアート",
    "art_sort_updated": "最新順",
    "art_sort_visit": "照会順",
    "art_sort_likeCnt": "いいね!順",
    "art_sort_comment": "コメント順",
    "art_period_all": "すべての期間",
    "art_period_day": "今日",
    "art_period_week": "1週間以内",
    "art_period_month": "1か月以内",
    "art_period_three_month": "3か月以内",
    "level_high": "上",
    "level_mid": "中",
    "level_row": "下",
    "discuss_sort_created": "最新順",
    "discuss_sort_visit": "照会順",
    "discuss_sort_likesLength": "いいね!順",
    "discuss_sort_commentsLength": "コメント順",
    "discuss_period_all": "すべての期間",
    "discuss_period_day": "今日",
    "discuss_period_week": "1週間以内",
    "discuss_period_month": "1か月以内",
    "discuss_period_three_month": "3か月以内"
};
Lang.Helper = {
    "when_run_button_click": "スタートボタンをクリックすると、下に連結されたブロックを実行します。",
    "when_some_key_pressed": "指定されたキーを押すと、下に連結されたブロックを実行します",
    "mouse_clicked": "マウスをクリックした時、下に連結されたブロックを実行します。",
    "mouse_click_cancled": "マウスクリックを解除した時、下に連結されたブロックを実行します。",
    "when_object_click": "当該オブジェクトをクリックした時、下に連結されたブロックを実行します。",
    "when_object_click_canceled": "当該オブジェクトクリックを解除した時、下に連結されたブロックを実行します。",
    "when_message_cast": "当該信号を受け取ると、連結されたブロックを実行します。",
    "message_cast": "リストに選択された信号を送ります。",
    "message_cast_wait": "リストに選択された信号を送り、その信号を受け取るブロックの実行が終わるまで待機します。",
    "when_scene_start": "シーンが始まると下に連結されたブロックを実行します。",
    "start_scene": "選択したシーンを始めます。",
    "start_neighbor_scene": "前のシーンまたは次のシーンを始めます。",
    "wait_second": "設定した時間だけ待機した後、次のブロックを実行します。",
    "repeat_basic": "設定した回数だけ包んであるブロックを繰り返し実行します。",
    "repeat_inf": "包んであるブロックを続けて繰り返し実行します。",
    "repeat_while_true": "判断がtrueの間、包んであるブロックを繰り返し実行します。",
    "stop_repeat": "このブロックを包む最も近いリピートブロックの繰り返しを中断します。",
    "_if": "もし判断がtrueの場合、包んであるブロックを実行します。",
    "if_else": "判断がtrueの場合、最初の包んであるブロックを実行し、Falseなら2番目の包んであるブロックを実行します。",
    "restart_project": "すべてのオブジェクトを最初から再実行します。",
    "stop_object": "すべての: すべてのオブジェクトが直ちに実行を中断します。<br> 自分 : 当該オブジェクトのすべてのブロックを中断します。<br> このコード: このブロックが含まれるコードが直ちに実行を中断します。<br> 自分の他のコード:  当該オブジェクトのうち、このブロックが含まれるコードを除くすべてのコードが直ちに実行を中断します。<br/>他のオブジェクトの: 他のオブジェクトのすべてのブロックを中断します。",
    "wait_until_true": "判断がtrueになるまで実行を中断して待機します。",
    "when_clone_start": "当該オブジェクトのコピーが新しく作成された時、下に連結されたブロックを実行します。",
    "create_clone": "選択したオブジェクトのコピーを作成します。",
    "delete_clone": "「コピーが最初に作成された時」ブロックを一緒に使用して作成されたコピーを削除します。",
    "remove_all_clones": "当該オブジェクトのすべてのコピーを削除します。",
    "move_direction": "設定した値だけオブジェクトの移動方向矢印が示す方向に動きます。",
    "move_x": "オブジェクトのX座標を設定した値だけ変更します。",
    "move_y": "オブジェクトのY座標を設定した値だけ変更します。",
    "move_xy_time": "オブジェクトが入力した時間に渡り、xとy座標を設定した値だけ変更します。",
    "locate_object_time": "オブジェクトが入力した時間に渡り、選択したオブジェクトまたはマウスポインターの位置に移動します。(オブジェクトの中心点が基準になります。)",
    "locate_x": "オブジェクトが入力したx座標に移動します。(オブジェクトの中心点が基準になります。)",
    "locate_y": "オブジェクトが入力したy座標に移動します。(オブジェクトの中心点が基準になります。)",
    "locate_xy": "オブジェクトが入力したxとy座標に移動します。(オブジェクトの中心点が基準になります。)",
    "locate_xy_time": "オブジェクトが入力した時間に渡り、指定したx, y座標に移動します。(オブジェクトの中心点が基準になります。)",
    "locate": "オブジェクトが選択したオブジェクトまたはマウスポインターの位置に移動します。(オブジェクトの中心点が基準になります。)",
    "rotate_absolute": "当該オブジェクトの方向を入力した角度にします。",
    "rotate_by_time": "オブジェクトの方向を入力した時間に渡り、入力した角度だけ時計方向に回転します。(オブジェクトの中心点を基準に回転します。)",
    "rotate_relative": "オブジェクトの方向を入力した角度だけ時計方向に回転します。(オブジェクトの中心点を基準に回転します。)",
    "direction_absolute": "当該オブジェクトの移動方向を入力した角度にします。",
    "direction_relative": "オブジェクトの移動方向を入力した角度だけ回転します。",
    "move_to_angle": "設定した角度方向に入力した値だけ動きます。(実行画面の上側が0度、時計方向に行くたびに角度増加)",
    "see_angle_object": "当該オブジェクトが他のオブジェクトまたはマウスポインターの方向を向きます。オブジェクトの移動方向が選択された項目を向くようにオブジェクトの方向を回転させます。",
    "bounce_wall": "当該オブジェクトが画面の端に到達すると弾かれます。",
    "show": "当該オブジェクトを画面に表示します。",
    "hide": "当該オブジェクトを画面から非表示にします。",
    "dialog_time": "オブジェクトが入力した内容を入力した時間中吹き出しで話した後、次のブロックが実行されます。",
    "dialog": "オブジェクトが入力した内容を吹き出しで話すと同時に次のブロックが実行されます。",
    "remove_dialog": "オブジェクトが話している吹き出しを消します。",
    "change_to_some_shape": "オブジェクトを選択した模様に変更します。(内部ブロックを分離すれば模様の番号を使用して模様を選択できます)",
    "change_to_next_shape": "オブジェクトの模様を次の模様に変更します。",
    "set_effect_volume": "当該オブジェクトで選択した効果を入力した値だけ加えます。",
    "set_effect_amount": "色 : オブジェクトに色効果を入力した値だけ加えます。(0~100を周期に反復)<br>明度 : オブジェクトに明度効果を入力した値だけ加えます。(-100~100の範囲。-100以下は-100で、100以上は100で処理) <br> 透明度 : オブジェクトに透明度効果を入力した値だけ加えます。(0~100の範囲。0以下は0で、100以上は100で処理)",
    "set_effect": "当該オブジェクトの値を選択した効果を入力した値にします。",
    "set_entity_effect": "当該オブジェクトの値を選択した効果を入力した値にします。",
    "add_effect_amount": "当該オブジェクトに対し選択した効果を入力した値だけ加えます。",
    "change_effect_amount": "色 : オブジェクトの色効果を入力した値にします。(0~100を周期として反復) <br> 明度 : オブジェクトの明度効果を入力した値にします。(-100~100の間の範囲。-100以下は-100で、100以上は100で処理) <br> 透明度 : オブジェクトの透明度効果を入力した値にします。(0~100の間の範囲。0以下は0で、100以上は100で処理)",
    "change_scale_percent": "当該オブジェクトのサイズを入力した値だけ変更します。",
    "set_scale_percent": "当該オブジェクトのサイズを入力した値にします。",
    "change_scale_size": "当該オブジェクトのサイズを入力した値だけ変更します。",
    "set_scale_size": "当該オブジェクトのサイズを入力した値にします。",
    "flip_x": "当該オブジェクトの上下の模様を入れ替えます。",
    "flip_y": "当該オブジェクトの左右の模様を入れ替えます。",
    "change_object_index": "一番前に : 当該オブジェクトを画面の一番前に移動させます。<br> 前に : 当該オブジェクトを1レイヤー前に移動させます。<br> 後ろに : 当該オブジェクトを1レイヤー後ろに移動させます。<br> 一番後ろに : 当該オブジェクトを画面の一番後ろに移動させます。",
    "set_object_order": "当該オブジェクトが設定した順序で上がります。",
    "brush_stamp": "オブジェクトの模様を実行画面上にスタンプのように押します。",
    "start_drawing": "オブジェクトが移動する経路に沿って線を引きます。(オブジェクトの中心点が基準)",
    "stop_drawing": "オブジェクトが線を描くのを中断します。",
    "set_color": "オブジェクトが描く線の色を選択した色にします。",
    "set_random_color": "オブジェクトが描く線の色をランダムにします。",
    "change_thickness": "オブジェクトが描く線の太さを入力した値に変更します。(1~無限の範囲。1以下は1で処理)",
    "set_thickness": "オブジェクトが描く線の太さを入力した値にします。(1~無限の範囲。1以下は1で処理)",
    "change_opacity": "当該オブジェクトが描く筆の透明度を入力した値だけ変更します。",
    "change_brush_transparency": "当該オブジェクトが描く筆の透明度を入力した値だけ変更します。(0~100の範囲。0以下は0、100以上は100で処理)",
    "set_opacity": "当該オブジェクトが描く筆の透明度を入力した値にします。",
    "set_brush_tranparency": "当該オブジェクトが描く筆の透明度を入力した値にします。(0~100の範囲。0以下は0、100以上は100で処理)",
    "brush_erase_all": "当該オブジェクトが描いた線とスタンプをすべて削除します。",
    "sound_something_with_block": "当該オブジェクトが選択したサウンドを再生すると同時に、次のブロックを実行します。",
    "sound_something_second_with_block": "当該オブジェクトが選択したサウンドを入力した時間だけ再生すると同時に、次のブロックを実行します。",
    "sound_something_wait_with_block": "当該オブジェクトが選択したサウンドを再生し、サウンドの再生が終わると次のブロックを実行します。",
    "sound_something_second_wait_with_block": "当該オブジェクトが選択したサウンドを入力した時間だけ再生し、サウンドの再生が終わると次のブロックを実行します。",
    "sound_volume_change": "作品で再生されるすべてのサウンドのボリュームを入力したパーセント分変更します。",
    "sound_volume_set": "作品で再生されるすべてのサウンドのボリュームを入力したパーセントにします。",
    "sound_silent_all": "現在再生中のすべてのサウンドをストップします。",
    "is_clicked": "マウスをクリックした場合、「true」と判断します。",
    "is_press_some_key": "選択したキーが押されている場合、「true」と判断します。",
    "reach_something": "当該オブジェクトが選択した項目に触れた場合、「true」と判断します。",
    "is_included_in_list": "選択したリストに入力した値を持つ項目が含まれているか確認します。",
    "boolean_basic_operator": "= : 左側に位置する値と右側に位置する値が同じなら「true」と判断します。<br>> : 左側に位置する値が右側に位置する値より大きいなら「true」と判断します。<br>< : 左側に位置する値が右側に位置する値より小さいなら「true」と判断します。<br>≥ : 左側に位置する値が右側に位置する値より大きいか同じなら「true」と判断します。<br>≤ : 左側に位置する値が右側に位置する値より小さいか同じなら「true」と判断します。",
    "function_create": "よく使うコードをこのブロック下に並べて組み立てて関数として作成します。[関数を定義する]の右側の空白セルに[名前]を並べて関数名を決めることができます。関数を実行する際に入力値が必要な場合、空白セルに[文字/数字値]、[判断値]を並べて媒介変数として使用します。",
    "function_field_label": "「関数を定義する」の空白セル中に組み立て、名前を入力して関数名を決定します。",
    "function_field_string": "当該関数を実行するにあたり文字/数字値が必要な場合、空白セルの中に並べて媒介変数として使用します。このブロック内部の[文字/数字値]を分離して関数のコードのうち必要な部分に入れて使用します。",
    "function_field_boolean": "当該関数を実行するにあたりtrueまたはfalseの判断が必要な場合、空白セルの中に並べて媒介変数として使用します。このブロック内部の[判断値]を分離して関数のコードのうち必要な部分に入れて使用します。",
    "function_general": "現在作成している関数ブロックまたは今まで作成しておいた関数ブロックです。",
    "boolean_and": "2つの判断がすべてtrueの場合、「true」と判断します。",
    "boolean_or": "2つの判断のうち1つでもtrueがある場合、「true」と判断します。",
    "boolean_not": "判断がTrueならfalse、Falseならtrueにします。",
    "is_boost_mode": "ブーストモードがオンになっている場合は「正しい」で判断します。",
    "calc_basic": "+ : 入力した2つの数を足した値です。<br>- : 入力した2つの数を引いた値です。<br>X : 入力した2つの数をかけた値です。<br>/ : 入力した2つの数を割った値です。",
    "calc_rand": "入力した2つの数の間から選択された乱数の値です。(2つの数とも整数を入力した場合は整数が、2つの数のうち1つでも少数を入力した場合は少数が乱数として選択されます。)",
    "get_x_coordinate": "当該オブジェクトのx座標値を表します。",
    "get_y_coordinate": "当該オブジェクトのy座標値を表します。",
    "coordinate_mouse": "マウスポインターのxまたはyの座標値を表します。",
    "coordinate_object": "選択したオブジェクトまたは自分の各種情報値(x座標、y座標、方向、移動方向、サイズ、模様番号、模様名)です。",
    "quotient_and_mod": "商 : 前の数で後ろの数を割って得られた商の値です。<br> あまり : 前の数で後ろの数を割って得られたあまりの値です。",
    "get_rotation_direction": "当該オブジェクトの方向値、移動方向値を表します。",
    "calc_share": "前の数で後ろの数を割って得られた商を表します。",
    "calc_mod": "前の数で後ろの数を割って得られたあまりを表します。",
    "calc_operation": "入力した数に関する様々な数学式の計算値です。",
    "get_date": "現在の年度、月、日、時刻などの時間に関する値です。",
    "distance_something": "自分と選択したオブジェクトまたはマウスポインター間の距離の値です。",
    "get_sound_duration": "選択したサウンドの長さ(秒)の値です。",
    "get_user_name": "作品を実行しているユーザーのIDの値です。",
    "get_nickname": "作品をプレーしているユーザーのニックネーム値です。",
    "get_project_timer_value": "このブロックが実行された瞬間、ストップウォッチに保存された値です。",
    "choose_project_timer_action": "スタート: ストップウォッチを始めます。<br> 停止する: ストップウォッチを停止します。<br> 初期化する: ストップウォッチの値を0に初期化します。<br> (このブロックをブロック組立所に持っていくと、実行画面に「ストップウォッチウィンドウ」が作成されます。)",
    "reset_project_timer": "実行されていたタイマーを0に初期化します。",
    "set_visible_project_timer": "ストップウォッチウィンドウを画面で表示または非表示にします。",
    "ask_and_wait": "当該オブジェクトが入力した文字を吹き出しで尋ね、回答の入力を受けます。(このブロックをブロック組立所に持っていくと、実行画面に「回答ウィンドウ」が作成されます。)",
    "get_canvas_input_value": "尋ねて待機により入力された値です。",
    "set_visible_answer": "実行画面にある「回答ウィンドウ」を表示または非表示にできます。",
    "combine_something": "入力した2つの資料を結合した値です。",
    "get_variable": "選択された変数に保存された値です。",
    "change_variable": "選択した変数に入力した値を足します。",
    "set_variable": "選択した変数の値を入力した値にします。",
    "robotis_carCont_sensor_value": "왼쪽 접속 센서 : 접촉(1), 비접촉(0) 값 입니다.<br/>오른쪽 접촉 센서 : 접촉(1), 비접촉(0) 값 입니다.<br/>선택 버튼 상태 : 접촉(1), 비접촉(0) 값 입니다.<br/>최종 소리 감지 횟수 : 마지막 실시간 소리 감지 횟수 값 입니다.<br/>실시간 소리 감지 횟수 : 약 1초 안에 다음 소리가 감지되면 1씩 증가합니다.<br/>왼쪽 적외선 센서 : 물체와 가까울 수록 큰 값 입니다.<br/>오른쪽 적외선 센서 : 물체와 가까울 수록 큰 값 값 입니다.<br/>왼쪽 적외선 센서 캘리브레이션 값 : 적외선 센서의 캘리브레이션 값 입니다.<br/>오른쪽 적외선 센서 캘리브레이션 값 : 적외선 센서의 캘리브레이션 값 입니다.<br/>(*캘리브레이션 값 - 적외선센서 조정 값)",
    "robotis_carCont_cm_led": "4개의 LED 중 1번 또는 4번 LED 를 켜거나 끕니다.<br/>LED 2번과 3번은 동작 지원하지 않습니다.",
    "robotis_carCont_cm_sound_detected_clear": "최종 소리 감지횟 수를 0 으로 초기화 합니다.",
    "robotis_carCont_aux_motor_speed": "감속모터 속도를 0 ~ 1023 의 값(으)로 정합니다.",
    "robotis_carCont_cm_calibration": "적외선센서 조정 값(http://support.robotis.com/ko/: 자동차로봇> 2. B. 적외선 값 조정)을 직접 정합니다.",
    "robotis_openCM70_sensor_value": "최종 소리 감지 횟수 : 마지막 실시간 소리 감지 횟수 값 입니다.<br/>실시간 소리 감지 횟수 : 약 1초 안에 다음 소리가 감지되면 1씩 증가합니다.<br/>사용자 버튼 상태 : 접촉(1), 비접촉(0) 값 입니다.최종 소리 감지 횟수 : 마지막 실시간 소리 감지 횟수 값 입니다.<br/>실시간 소리 감지 횟수 : 약 1초 안에 다음 소리가 감지되면 1씩 증가합니다.<br/>사용자 버튼 상태 : 접촉(1), 비접촉(0) 값 입니다.",
    "robotis_openCM70_aux_sensor_value": "서보모터 위치 : 0 ~ 1023, 중간 위치의 값은 512 입니다.<br/>적외선센서 :  물체와 가까울 수록 큰 값 입니다.<br/>접촉센서 : 접촉(1), 비접촉(0) 값 입니다.<br/>조도센서(CDS) : 0 ~ 1023, 밝을 수록 큰 값 입니다.<br/>온습도센서(습도) : 0 ~ 100, 습할 수록 큰 값 입니다.<br/>온습도센서(온도) : -20 ~ 100, 온도가 높을 수록 큰 값 입니다.<br/>온도센서 :  -20 ~ 100, 온도가 높을 수록 큰 값 입니다.<br/>초음파센서 : -<br/>자석센서 : 접촉(1), 비접촉(0) 값 입니다.<br/>동작감지센서 : 동작 감지(1), 동작 미감지(0) 값 입니다.<br/>컬러센서 : 알수없음(0), 흰색(1), 검은색(2), 빨간색(3), 녹색(4), 파란색(5), 노란색(6) 값 입니다.<br/>사용자 장치 : 사용자 센서 제작에 대한 설명은 ROBOTIS e-매뉴얼(http://support.robotis.com/ko/)을 참고하세요.",
    "robotis_openCM70_cm_buzzer_index": "음계를 0.1 ~ 5 초 동안 연주 합니다.",
    "robotis_openCM70_cm_buzzer_melody": "멜로디를 연주 합니다.<br/>멜로디를 연속으로 재생하는 경우, 다음 소리가 재생되지 않으면 '흐름 > X 초 기다리기' 블록을 사용하여 기다린 후 실행합니다.",
    "robotis_openCM70_cm_sound_detected_clear": "최종 소리 감지횟 수를 0 으로 초기화 합니다.",
    "robotis_openCM70_cm_led": "제어기의 빨간색, 녹색, 파란색 LED 를 켜거나 끕니다.",
    "robotis_openCM70_cm_motion": "제어기에 다운로드 되어있는 모션을 실행합니다.",
    "robotis_openCM70_cm_autodrive_motor": "자율주행 자동차의 모터 포트를 지정합니다.",
    "robotis_openCM70_cm_autodrive_ir": "자율주행 자동차의 적외선 센서 포트를 지정합니다.",
    "robotis_openCM70_cm_autodrive_speed": "지정한 속도로 자율주행을 수행합니다.",
    "robotis_openCM70_aux_car_move": "로봇을 지정한 속도와 방향으로 움직이도록 합니다.",
    "robotis_openCM70_aux_motor_speed": "감속모터 속도를 0 ~ 100% 의 값으로 정합니다.",
    "robotis_openCM70_aux_servo_mode": "서보모터를 회전모드 또는 관절모드로 정합니다.<br/>한번 설정된 모드는 계속 적용됩니다.<br/>회전모드는 서보모터 속도를 지정하여 서보모터를 회전 시킵니다.<br/>관절모드는 지정한 서보모터 속도로 서보모터 위치를 이동 시킵니다.",
    "robotis_openCM70_aux_servo_speed": "서보모터 속도를 0 ~ 100% 의 값으로 정합니다.",
    "robotis_openCM70_aux_servo_position": "서보모터 위치를 -150도 ~ 150도 의 값(으)로 정합니다.<br/>서보모터 속도와 같이 사용해야 합니다.",
    "robotis_openCM70_aux_led_module": "LED 모듈의 LED 를 켜거나 끕니다.",
    "robotis_openCM70_aux_custom": "사용자 센서 제작에 대한 설명은 ROBOTIS e-매뉴얼(http://support.robotis.com/ko/)을 참고하세요.",
    "robotis_openCM70_cm_poweroff_timer": "제어기의 자동꺼짐 타이머를 설정합니다.<br/>설정된 만큼의 시간동안 통신이 진행되지 않으면 제어기는 자동으로 꺼집니다.",
    "robotis_openCM70_cm_custom_value": "컨트롤 테이블 주소를 직접 입력하여 값을 확인 합니다.<br/>컨트롤 테이블 대한 설명은 ROBOTIS e-매뉴얼(http://support.robotis.com/ko/)을 참고하세요.",
    "robotis_openCM70_cm_custom": "컨트롤 테이블 주소를 직접 입력하여 값을 정합니다.<br/>컨트롤 테이블 대한 설명은 ROBOTIS e-매뉴얼(http://support.robotis.com/ko/)을 참고하세요.",
    "show_variable": "選択した変数ウィンドウを実行画面に表示します。",
    "hide_variable": "選択した変数ウィンドウを実行画面で非表示にします。",
    "value_of_index_from_list": "選択したリストで選択した値の順序にある項目値を表します。(内部ブロックを分離すると順序を数字で入力できます)",
    "add_value_to_list": "入力した値が選択したリストの最後の項目に追加されます。",
    "remove_value_from_list": "選択したリストの入力した順序にある項目を削除します。",
    "insert_value_to_list": "選択したリストの入力した順序の位置に入力した項目を挿入します。(入力した項目の後にある各項目の順番は1つずつずれます。)",
    "change_value_list_index": "選択したリストで入力した順序にある項目の値を入力した値に変更します。",
    "length_of_list": "選択したリストが保有した項目の個数の値です。",
    "show_list": "選択したリストを実行画面に表示します。",
    "hide_list": "選択したリストを実行画面で非表示にします。",
    "text": "当該テキストボックスが表示している文字値を表します。",
    "text_read": "선택한 글상자 또는 글상자 자신의 내용입니다.<br />(내용 안에 줄바꿈이 있는 경우, 띄어쓰기하여 반환됩니다.)",
    "text_write": "テキストボックスの内容を入力した値に書き換えます。",
    "text_append": "テキストボックスの内容の後に入力した値を追加します。",
    "text_prepend": "テキストボックスの内容の前に入力した値を追加します。",
    "text_flush": "テキストボックスに保存された値をすべて削除します。",
    "erase_all_effects": "当該オブジェクトに適用された効果をすべて削除します。",
    "char_at": "入力した文字/数字値のうち入力した数字の 番目の文字値です。",
    "length_of_string": "入力した文字値のスペースを含む文字数です。",
    "substring": "入力した文字/数字値で入力した範囲内の文字/数字値です。",
    "replace_string": "入力した文字/数字値で指定した文字/数字値を探し、追加入力した文字/数字値にすべて置き換えた値です。(英文字で入力する場合、大文字と小文字を区別します。)",
    "index_of_string": "入力した文字/数字値で指定した文字/数字値が最初に登場する位置の値です。(やあ、エントリー!でエントリーの開始位置は5)",
    "change_string_case": "入力した英文字のすべてのアルファベットを大文字または小文字に置き換えた文字値を表します。",
    "direction_relative_duration": "当該オブジェクトの移動方向を入力した時間に渡り、入力した角度だけ時計方向に回転します。",
    "get_sound_volume": "現在、作品に設定されているサウンドのボリューム値を表します。",
    "sound_from_to": "当該オブジェクトが選択したサウンドを入力した時間部分だけ再生すると同時に次のブロックを実行します。",
    "sound_from_to_and_wait": "当該オブジェクトが選択したサウンドを入力した時間部分だけ再生し、サウンドの再生が終わると次のブロックを実行します。",
    "Block_info": "ブロック説明",
    "Block_click_msg": "ブロックをクリックすると、ブロックに関する説明が表示されます。",
    "hamster_beep": "버저 소리를 짧게 냅니다.",
    "hamster_change_both_wheels_by": "왼쪽과 오른쪽 바퀴의 현재 속도 값(%)에 입력한 값을 각각 더합니다. 더한 결과가 양수 값이면 바퀴가 앞으로 회전하고, 음수 값이면 뒤로 회전합니다.",
    "hamster_change_buzzer_by": "버저 소리의 현재 음 높이(Hz)에 입력한 값을 더합니다. 소수점 둘째 자리까지 입력할 수 있습니다.",
    "hamster_change_output_by": "선택한 외부 확장 포트의 현재 출력 값에 입력한 값을 더합니다. 더한 결과는 외부 확장 포트의 모드에 따라 다음의 범위를 가집니다.<br/>서보 출력: 유효한 값의 범위는 1 ~ 180도, 0이면 PWM 펄스 없이 항상 0을 출력<br/>PWM 출력: 0 ~ 100%, PWM 파형에서 ON 상태의 듀티비(%)<br/>디지털 출력: 0이면 LOW, 0이 아니면 HIGH",
    "hamster_change_tempo_by": "연주하거나 쉬는 속도의 현재 BPM(분당 박자 수)에 입력한 값을 더합니다.",
    "hamster_change_wheel_by": "왼쪽/오른쪽/양쪽 바퀴의 현재 속도 값(%)에 입력한 값을 더합니다. 더한 결과가 양수 값이면 바퀴가 앞으로 회전하고, 음수 값이면 뒤로 회전합니다.",
    "hamster_clear_buzzer": "버저 소리를 끕니다.",
    "hamster_clear_led": "왼쪽/오른쪽/양쪽 LED를 끕니다.",
    "hamster_follow_line_until": "왼쪽/오른쪽/앞쪽/뒤쪽의 검은색/하얀색 선을 따라 이동하다가 교차로를 만나면 정지합니다.",
    "hamster_follow_line_using": "왼쪽/오른쪽/양쪽 바닥 센서를 사용하여 검은색/하얀색 선을 따라 이동합니다.",
    "hamster_hand_found": "근접 센서 앞에 손 또는 물체가 있으면 '참'으로 판단하고, 아니면 '거짓'으로 판단합니다.",
    "hamster_move_backward_for_secs": "입력한 시간(초) 동안 뒤로 이동합니다.",
    "hamster_move_forward_for_secs": "입력한 시간(초) 동안 앞으로 이동합니다.",
    "hamster_move_forward_once": "말판 위에서 한 칸 앞으로 이동합니다.",
    "hamster_play_note_for": "선택한 계이름과 옥타브의 음을 입력한 박자만큼 소리 냅니다.",
    "hamster_rest_for": "입력한 박자만큼 쉽니다.",
    "hamster_set_both_wheels_to": "왼쪽과 오른쪽 바퀴의 속도를 입력한 값(-100 ~ 100%)으로 각각 설정합니다. 양수 값을 입력하면 바퀴가 앞으로 회전하고, 음수 값을 입력하면 뒤로 회전합니다. 숫자 0을 입력하면 정지합니다.",
    "hamster_set_buzzer_to": "버저 소리의 음 높이를 입력한 값(Hz)으로 설정합니다. 소수점 둘째 자리까지 입력할 수 있습니다. 숫자 0을 입력하면 버저 소리를 끕니다.",
    "hamster_set_following_speed_to": "선을 따라 이동하는 속도(1 ~ 8)를 설정합니다. 숫자가 클수록 이동하는 속도가 빠릅니다.",
    "hamster_set_led_to": "왼쪽/오른쪽/양쪽 LED를 선택한 색깔로 켭니다.",
    "hamster_set_output_to": "선택한 외부 확장 포트의 출력 값을 입력한 값으로 설정합니다. 입력하는 값은 외부 확장 포트의 모드에 따라 다음의 범위를 가집니다.<br/>서보 출력: 유효한 값의 범위는 1 ~ 180도, 0이면 PWM 펄스 없이 항상 0을 출력<br/>PWM 출력: 0 ~ 100%, PWM 파형에서 ON 상태의 듀티비(%)<br/>디지털 출력: 0이면 LOW, 0이 아니면 HIGH",
    "hamster_set_port_to": "선택한 외부 확장 포트의 입출력 모드를 선택한 모드로 설정합니다.",
    "hamster_set_tempo_to": "연주하거나 쉬는 속도를 입력한 BPM(분당 박자 수)으로 설정합니다.",
    "hamster_set_wheel_to": "왼쪽/오른쪽/양쪽 바퀴의 속도를 입력한 값(-100 ~ 100%)으로 설정합니다. 양수 값을 입력하면 바퀴가 앞으로 회전하고, 음수 값을 입력하면 뒤로 회전합니다. 숫자 0을 입력하면 정지합니다.",
    "hamster_stop": "양쪽 바퀴를 정지합니다.",
    "hamster_turn_for_secs": "입력한 시간(초) 동안 왼쪽/오른쪽 방향으로 제자리에서 회전합니다.",
    "hamster_turn_once": "말판 위에서 왼쪽/오른쪽 방향으로 제자리에서 90도 회전합니다.",
    "hamster_value": "왼쪽 근접 센서: 왼쪽 근접 센서의 값 (값의 범위: 0 ~ 255, 초기값: 0)<br/>오른쪽 근접 센서: 오른쪽 근접 센서의 값 (값의 범위: 0 ~ 255, 초기값: 0)<br/>왼쪽 바닥 센서: 왼쪽 바닥 센서의 값 (값의 범위: 0 ~ 100, 초기값: 0)<br/>오른쪽 바닥 센서: 오른쪽 바닥 센서의 값 (값의 범위: 0 ~ 100, 초기값: 0)<br/>x축 가속도: 가속도 센서의 X축 값 (값의 범위: -32768 ~ 32767, 초기값: 0) 로봇이 전진하는 방향이 X축의 양수 방향입니다.<br/>y축 가속도: 가속도 센서의 Y축 값 (값의 범위: -32768 ~ 32767, 초기값: 0) 로봇의 왼쪽 방향이 Y축의 양수 방향입니다.<br/>z축 가속도: 가속도 센서의 Z축 값 (값의 범위: -32768 ~ 32767, 초기값: 0) 로봇의 위쪽 방향이 Z축의 양수 방향입니다.<br/>밝기: 밝기 센서의 값 (값의 범위: 0 ~ 65535, 초기값: 0) 밝을 수록 값이 커집니다.<br/>온도: 로봇 내부의 온도 값 (값의 범위: 섭씨 -40 ~ 88도, 초기값: 0)<br/>신호 세기: 블루투스 무선 통신의 신호 세기 (값의 범위: -128 ~ 0 dBm, 초기값: 0) 신호의 세기가 셀수록 값이 커집니다.<br/>입력 A: 외부 확장 포트 A로 입력되는 신호의 값 (값의 범위: 아날로그 입력 0 ~ 255, 디지털 입력 0 또는 1, 초기값: 0)<br/>입력 B: 외부 확장 포트 B로 입력되는 신호의 값 (값의 범위: 아날로그 입력 0 ~ 255, 디지털 입력 0 또는 1, 초기값: 0)",
    "roboid_hamster_beep": "버저 소리를 짧게 냅니다.",
    "roboid_hamster_change_both_wheels_by": "왼쪽과 오른쪽 바퀴의 현재 속도 값(%)에 입력한 값을 각각 더합니다. 더한 결과가 양수 값이면 바퀴가 앞으로 회전하고, 음수 값이면 뒤로 회전합니다.",
    "roboid_hamster_change_buzzer_by": "버저 소리의 현재 음 높이(Hz)에 입력한 값을 더합니다. 소수점 둘째 자리까지 입력할 수 있습니다.",
    "roboid_hamster_change_output_by": "선택한 외부 확장 포트의 현재 출력 값에 입력한 값을 더합니다. 더한 결과는 외부 확장 포트의 모드에 따라 다음의 범위를 가집니다.<br/>서보 출력: 유효한 값의 범위는 1 ~ 180도, 0이면 PWM 펄스 없이 항상 0을 출력<br/>PWM 출력: 0 ~ 100%, PWM 파형에서 ON 상태의 듀티비(%)<br/>디지털 출력: 0이면 LOW, 0이 아니면 HIGH",
    "roboid_hamster_change_tempo_by": "연주하거나 쉬는 속도의 현재 BPM(분당 박자 수)에 입력한 값을 더합니다.",
    "roboid_hamster_change_wheel_by": "왼쪽/오른쪽/양쪽 바퀴의 현재 속도 값(%)에 입력한 값을 더합니다. 더한 결과가 양수 값이면 바퀴가 앞으로 회전하고, 음수 값이면 뒤로 회전합니다.",
    "roboid_hamster_clear_buzzer": "버저 소리를 끕니다.",
    "roboid_hamster_clear_led": "왼쪽/오른쪽/양쪽 LED를 끕니다.",
    "roboid_hamster_follow_line_until": "왼쪽/오른쪽/앞쪽/뒤쪽의 검은색/하얀색 선을 따라 이동하다가 교차로를 만나면 정지합니다.",
    "roboid_hamster_follow_line_using": "왼쪽/오른쪽/양쪽 바닥 센서를 사용하여 검은색/하얀색 선을 따라 이동합니다.",
    "roboid_hamster_hand_found": "근접 센서 앞에 손 또는 물체가 있으면 '참'으로 판단하고, 아니면 '거짓'으로 판단합니다.",
    "roboid_hamster_move_backward_for_secs": "입력한 시간(초) 동안 뒤로 이동합니다.",
    "roboid_hamster_move_forward_for_secs": "입력한 시간(초) 동안 앞으로 이동합니다.",
    "roboid_hamster_move_forward_once": "말판 위에서 한 칸 앞으로 이동합니다.",
    "roboid_hamster_play_note_for": "선택한 계이름과 옥타브의 음을 입력한 박자만큼 소리 냅니다.",
    "roboid_hamster_rest_for": "입력한 박자만큼 쉽니다.",
    "roboid_hamster_set_both_wheels_to": "왼쪽과 오른쪽 바퀴의 속도를 입력한 값(-100 ~ 100%)으로 각각 설정합니다. 양수 값을 입력하면 바퀴가 앞으로 회전하고, 음수 값을 입력하면 뒤로 회전합니다. 숫자 0을 입력하면 정지합니다.",
    "roboid_hamster_set_buzzer_to": "버저 소리의 음 높이를 입력한 값(Hz)으로 설정합니다. 소수점 둘째 자리까지 입력할 수 있습니다. 숫자 0을 입력하면 버저 소리를 끕니다.",
    "roboid_hamster_set_following_speed_to": "선을 따라 이동하는 속도(1 ~ 8)를 설정합니다. 숫자가 클수록 이동하는 속도가 빠릅니다.",
    "roboid_hamster_set_led_to": "왼쪽/오른쪽/양쪽 LED를 선택한 색깔로 켭니다.",
    "roboid_hamster_set_output_to": "선택한 외부 확장 포트의 출력 값을 입력한 값으로 설정합니다. 입력하는 값은 외부 확장 포트의 모드에 따라 다음의 범위를 가집니다.<br/>서보 출력: 유효한 값의 범위는 1 ~ 180도, 0이면 PWM 펄스 없이 항상 0을 출력<br/>PWM 출력: 0 ~ 100%, PWM 파형에서 ON 상태의 듀티비(%)<br/>디지털 출력: 0이면 LOW, 0이 아니면 HIGH",
    "roboid_hamster_set_port_to": "선택한 외부 확장 포트의 입출력 모드를 선택한 모드로 설정합니다.",
    "roboid_hamster_set_tempo_to": "연주하거나 쉬는 속도를 입력한 BPM(분당 박자 수)으로 설정합니다.",
    "roboid_hamster_set_wheel_to": "왼쪽/오른쪽/양쪽 바퀴의 속도를 입력한 값(-100 ~ 100%)으로 설정합니다. 양수 값을 입력하면 바퀴가 앞으로 회전하고, 음수 값을 입력하면 뒤로 회전합니다. 숫자 0을 입력하면 정지합니다.",
    "roboid_hamster_stop": "양쪽 바퀴를 정지합니다.",
    "roboid_hamster_turn_for_secs": "입력한 시간(초) 동안 왼쪽/오른쪽 방향으로 제자리에서 회전합니다.",
    "roboid_hamster_turn_once": "말판 위에서 왼쪽/오른쪽 방향으로 제자리에서 90도 회전합니다.",
    "roboid_hamster_value": "왼쪽 근접 센서: 왼쪽 근접 센서의 값 (값의 범위: 0 ~ 255, 초기값: 0)<br/>오른쪽 근접 센서: 오른쪽 근접 센서의 값 (값의 범위: 0 ~ 255, 초기값: 0)<br/>왼쪽 바닥 센서: 왼쪽 바닥 센서의 값 (값의 범위: 0 ~ 100, 초기값: 0)<br/>오른쪽 바닥 센서: 오른쪽 바닥 센서의 값 (값의 범위: 0 ~ 100, 초기값: 0)<br/>x축 가속도: 가속도 센서의 X축 값 (값의 범위: -32768 ~ 32767, 초기값: 0) 로봇이 전진하는 방향이 X축의 양수 방향입니다.<br/>y축 가속도: 가속도 센서의 Y축 값 (값의 범위: -32768 ~ 32767, 초기값: 0) 로봇의 왼쪽 방향이 Y축의 양수 방향입니다.<br/>z축 가속도: 가속도 센서의 Z축 값 (값의 범위: -32768 ~ 32767, 초기값: 0) 로봇의 위쪽 방향이 Z축의 양수 방향입니다.<br/>밝기: 밝기 센서의 값 (값의 범위: 0 ~ 65535, 초기값: 0) 밝을 수록 값이 커집니다.<br/>온도: 로봇 내부의 온도 값 (값의 범위: 섭씨 -40 ~ 88도, 초기값: 0)<br/>신호 세기: 블루투스 무선 통신의 신호 세기 (값의 범위: -128 ~ 0 dBm, 초기값: 0) 신호의 세기가 셀수록 값이 커집니다.<br/>입력 A: 외부 확장 포트 A로 입력되는 신호의 값 (값의 범위: 아날로그 입력 0 ~ 255, 디지털 입력 0 또는 1, 초기값: 0)<br/>입력 B: 외부 확장 포트 B로 입력되는 신호의 값 (값의 범위: 아날로그 입력 0 ~ 255, 디지털 입력 0 또는 1, 초기값: 0)",
    "roboid_turtle_button_state": "등 버튼을 클릭했으면/더블클릭했으면/길게 눌렀으면 '참'으로 판단하고, 아니면 '거짓'으로 판단합니다.",
    "roboid_turtle_change_buzzer_by": "버저 소리의 현재 음 높이(Hz)에 입력한 값을 더합니다. 소수점 둘째 자리까지 입력할 수 있습니다.",
    "roboid_turtle_change_head_led_by_rgb": "머리 LED의 현재 R, G, B 값에 입력한 값을 각각 더합니다.",
    "roboid_turtle_change_tempo_by": "연주하거나 쉬는 속도의 현재 BPM(분당 박자 수)에 입력한 값을 더합니다.",
    "roboid_turtle_change_wheel_by": "왼쪽/오른쪽/양쪽 바퀴의 현재 속도 값(%)에 입력한 값을 더합니다. 더한 결과가 양수 값이면 바퀴가 앞으로 회전하고, 음수 값이면 뒤로 회전합니다.",
    "roboid_turtle_change_wheels_by_left_right": "왼쪽과 오른쪽 바퀴의 현재 속도 값(%)에 입력한 값을 각각 더합니다. 더한 결과가 양수 값이면 바퀴가 앞으로 회전하고, 음수 값이면 뒤로 회전합니다.",
    "roboid_turtle_clear_head_led": "머리 LED를 끕니다.",
    "roboid_turtle_clear_sound": "소리를 끕니다.",
    "roboid_turtle_cross_intersection": "검은색 교차로에서 잠시 앞으로 이동한 후 검은색 선을 찾아 다시 이동합니다.",
    "roboid_turtle_follow_line": "하얀색 바탕 위에서 선택한 색깔의 선을 따라 이동합니다.",
    "roboid_turtle_follow_line_until": "하얀색 바탕 위에서 검은색 선을 따라 이동하다가 선택한 색깔을 컬러 센서가 감지하면 정지합니다.",
    "roboid_turtle_follow_line_until_black": "하얀색 바탕 위에서 선택한 색깔의 선을 따라 이동하다가 컬러 센서가 검은색을 감지하면 정지합니다.",
    "roboid_turtle_is_color_pattern": "선택한 색깔 패턴을 컬러 센서가 감지하였으면 '참'으로 판단하고, 아니면 '거짓'으로 판단합니다.",
    "roboid_turtle_move_backward_unit": "입력한 거리(cm)/시간(초)/펄스만큼 뒤로 이동합니다.",
    "roboid_turtle_move_forward_unit": "입력한 거리(cm)/시간(초)/펄스만큼 앞으로 이동합니다.",
    "roboid_turtle_pivot_around_wheel_unit_in_direction": "왼쪽/오른쪽 바퀴 중심으로 입력한 각도(도)/시간(초)/펄스만큼 머리/꼬리 방향으로 회전합니다.",
    "roboid_turtle_play_note": "선택한 계이름과 옥타브의 음을 계속 소리 냅니다.",
    "roboid_turtle_play_note_for_beats": "선택한 계이름과 옥타브의 음을 입력한 박자만큼 소리 냅니다.",
    "roboid_turtle_play_sound_times": "선택한 소리를 입력한 횟수만큼 재생합니다.",
    "roboid_turtle_play_sound_times_until_done": "선택한 소리를 입력한 횟수만큼 재생하고, 재생이 완료될 때까지 기다립니다.",
    "roboid_turtle_rest_for_beats": "입력한 박자만큼 쉽니다.",
    "roboid_turtle_set_buzzer_to": "버저 소리의 음 높이를 입력한 값(Hz)으로 설정합니다. 소수점 둘째 자리까지 입력할 수 있습니다. 숫자 0을 입력하면 소리를 끕니다.",
    "roboid_turtle_set_following_speed_to": "선을 따라 이동하는 속도(1 ~ 8)를 설정합니다. 숫자가 클수록 이동하는 속도가 빠릅니다.",
    "roboid_turtle_set_head_led_to": "머리 LED를 선택한 색깔로 켭니다.",
    "roboid_turtle_set_head_led_to_rgb": "머리 LED의 R, G, B 값을 입력한 값으로 각각 설정합니다.",
    "roboid_turtle_set_tempo_to": "연주하거나 쉬는 속도를 입력한 BPM(분당 박자 수)으로 설정합니다.",
    "roboid_turtle_set_wheel_to": "왼쪽/오른쪽/양쪽 바퀴의 속도를 입력한 값(-400 ~ 400%)으로 설정합니다. 양수 값을 입력하면 바퀴가 앞으로 회전하고, 음수 값을 입력하면 뒤로 회전합니다. 숫자 0을 입력하면 정지합니다.",
    "roboid_turtle_set_wheels_to_left_right": "왼쪽과 오른쪽 바퀴의 속도를 입력한 값(-400 ~ 400%)으로 각각 설정합니다. 양수 값을 입력하면 바퀴가 앞으로 회전하고, 음수 값을 입력하면 뒤로 회전합니다. 숫자 0을 입력하면 정지합니다.",
    "roboid_turtle_stop": "양쪽 바퀴를 정지합니다.",
    "roboid_turtle_touching_color": "선택한 색깔을 컬러 센서가 감지하였으면 '참'으로 판단하고, 아니면 '거짓'으로 판단합니다.",
    "roboid_turtle_turn_at_intersection": "검은색 교차로에서 잠시 앞으로 이동한 후 제자리에서 왼쪽/오른쪽/뒤쪽으로 회전하고 검은색 선을 찾아 다시 이동합니다.",
    "roboid_turtle_turn_unit_in_place": "입력한 각도(도)/시간(초)/펄스만큼 왼쪽/오른쪽 방향으로 제자리에서 회전합니다.",
    "roboid_turtle_turn_unit_with_radius_in_direction": "입력한 반지름의 원을 그리면서 입력한 각도(도)/시간(초)/펄스만큼 왼쪽/오른쪽, 머리/꼬리 방향으로 회전합니다.",
    "roboid_turtle_value": "색깔 번호: 컬러 센서가 감지한 색깔의 번호 (값의 범위: -1 ~ 8, 초기값: -1)<br/>색깔 패턴: 컬러 센서가 감지한 색깔 패턴의 값 (값의 범위: -1 ~ 88, 초기값: -1)<br/>바닥 센서: 바닥 센서의 값 (값의 범위: 0 ~ 100, 초기값: 0)<br/>버튼: 거북이 등 버튼의 상태 값 (누르면 1, 아니면 0, 초기값: 0)<br/>x축 가속도: 가속도 센서의 X축 값 (값의 범위: -32768 ~ 32767, 초기값: 0) 로봇이 전진하는 방향이 X축의 양수 방향입니다.<br/>y축 가속도: 가속도 센서의 Y축 값 (값의 범위: -32768 ~ 32767, 초기값: 0) 로봇의 왼쪽 방향이 Y축의 양수 방향입니다.<br/>z축 가속도: 가속도 센서의 Z축 값 (값의 범위: -32768 ~ 32767, 초기값: 0) 로봇의 위쪽 방향이 Z축의 양수 방향입니다.",
    "turtle_button_state": "등 버튼을 클릭했으면/더블클릭했으면/길게 눌렀으면 '참'으로 판단하고, 아니면 '거짓'으로 판단합니다.",
    "turtle_change_buzzer_by": "버저 소리의 현재 음 높이(Hz)에 입력한 값을 더합니다. 소수점 둘째 자리까지 입력할 수 있습니다.",
    "turtle_change_head_led_by_rgb": "머리 LED의 현재 R, G, B 값에 입력한 값을 각각 더합니다.",
    "turtle_change_tempo_by": "연주하거나 쉬는 속도의 현재 BPM(분당 박자 수)에 입력한 값을 더합니다.",
    "turtle_change_wheel_by": "왼쪽/오른쪽/양쪽 바퀴의 현재 속도 값(%)에 입력한 값을 더합니다. 더한 결과가 양수 값이면 바퀴가 앞으로 회전하고, 음수 값이면 뒤로 회전합니다.",
    "turtle_change_wheels_by_left_right": "왼쪽과 오른쪽 바퀴의 현재 속도 값(%)에 입력한 값을 각각 더합니다. 더한 결과가 양수 값이면 바퀴가 앞으로 회전하고, 음수 값이면 뒤로 회전합니다.",
    "turtle_clear_head_led": "머리 LED를 끕니다.",
    "turtle_clear_sound": "소리를 끕니다.",
    "turtle_cross_intersection": "검은색 교차로에서 잠시 앞으로 이동한 후 검은색 선을 찾아 다시 이동합니다.",
    "turtle_follow_line": "하얀색 바탕 위에서 선택한 색깔의 선을 따라 이동합니다.",
    "turtle_follow_line_until": "하얀색 바탕 위에서 검은색 선을 따라 이동하다가 선택한 색깔을 컬러 센서가 감지하면 정지합니다.",
    "turtle_follow_line_until_black": "하얀색 바탕 위에서 선택한 색깔의 선을 따라 이동하다가 컬러 센서가 검은색을 감지하면 정지합니다.",
    "turtle_is_color_pattern": "선택한 색깔 패턴을 컬러 센서가 감지하였으면 '참'으로 판단하고, 아니면 '거짓'으로 판단합니다.",
    "turtle_move_backward_unit": "입력한 거리(cm)/시간(초)/펄스만큼 뒤로 이동합니다.",
    "turtle_move_forward_unit": "입력한 거리(cm)/시간(초)/펄스만큼 앞으로 이동합니다.",
    "turtle_pivot_around_wheel_unit_in_direction": "왼쪽/오른쪽 바퀴 중심으로 입력한 각도(도)/시간(초)/펄스만큼 머리/꼬리 방향으로 회전합니다.",
    "turtle_play_note": "선택한 계이름과 옥타브의 음을 계속 소리 냅니다.",
    "turtle_play_note_for_beats": "선택한 계이름과 옥타브의 음을 입력한 박자만큼 소리 냅니다.",
    "turtle_play_sound_times": "선택한 소리를 입력한 횟수만큼 재생합니다.",
    "turtle_play_sound_times_until_done": "선택한 소리를 입력한 횟수만큼 재생하고, 재생이 완료될 때까지 기다립니다.",
    "turtle_rest_for_beats": "입력한 박자만큼 쉽니다.",
    "turtle_set_buzzer_to": "버저 소리의 음 높이를 입력한 값(Hz)으로 설정합니다. 소수점 둘째 자리까지 입력할 수 있습니다. 숫자 0을 입력하면 소리를 끕니다.",
    "turtle_set_following_speed_to": "선을 따라 이동하는 속도(1 ~ 8)를 설정합니다. 숫자가 클수록 이동하는 속도가 빠릅니다.",
    "turtle_set_head_led_to": "머리 LED를 선택한 색깔로 켭니다.",
    "turtle_set_head_led_to_rgb": "머리 LED의 R, G, B 값을 입력한 값으로 각각 설정합니다.",
    "turtle_set_tempo_to": "연주하거나 쉬는 속도를 입력한 BPM(분당 박자 수)으로 설정합니다.",
    "turtle_set_wheel_to": "왼쪽/오른쪽/양쪽 바퀴의 속도를 입력한 값(-400 ~ 400%)으로 설정합니다. 양수 값을 입력하면 바퀴가 앞으로 회전하고, 음수 값을 입력하면 뒤로 회전합니다. 숫자 0을 입력하면 정지합니다.",
    "turtle_set_wheels_to_left_right": "왼쪽과 오른쪽 바퀴의 속도를 입력한 값(-400 ~ 400%)으로 각각 설정합니다. 양수 값을 입력하면 바퀴가 앞으로 회전하고, 음수 값을 입력하면 뒤로 회전합니다. 숫자 0을 입력하면 정지합니다.",
    "turtle_stop": "양쪽 바퀴를 정지합니다.",
    "turtle_touching_color": "선택한 색깔을 컬러 센서가 감지하였으면 '참'으로 판단하고, 아니면 '거짓'으로 판단합니다.",
    "turtle_turn_at_intersection": "검은색 교차로에서 잠시 앞으로 이동한 후 제자리에서 왼쪽/오른쪽/뒤쪽으로 회전하고 검은색 선을 찾아 다시 이동합니다.",
    "turtle_turn_unit_in_place": "입력한 각도(도)/시간(초)/펄스만큼 왼쪽/오른쪽 방향으로 제자리에서 회전합니다.",
    "turtle_turn_unit_with_radius_in_direction": "입력한 반지름의 원을 그리면서 입력한 각도(도)/시간(초)/펄스만큼 왼쪽/오른쪽, 머리/꼬리 방향으로 회전합니다.",
    "turtle_value": "색깔 번호: 컬러 센서가 감지한 색깔의 번호 (값의 범위: -1 ~ 8, 초기값: -1)<br/>색깔 패턴: 컬러 센서가 감지한 색깔 패턴의 값 (값의 범위: -1 ~ 88, 초기값: -1)<br/>바닥 센서: 바닥 센서의 값 (값의 범위: 0 ~ 100, 초기값: 0)<br/>버튼: 거북이 등 버튼의 상태 값 (누르면 1, 아니면 0, 초기값: 0)<br/>x축 가속도: 가속도 센서의 X축 값 (값의 범위: -32768 ~ 32767, 초기값: 0) 로봇이 전진하는 방향이 X축의 양수 방향입니다.<br/>y축 가속도: 가속도 센서의 Y축 값 (값의 범위: -32768 ~ 32767, 초기값: 0) 로봇의 왼쪽 방향이 Y축의 양수 방향입니다.<br/>z축 가속도: 가속도 센서의 Z축 값 (값의 범위: -32768 ~ 32767, 초기값: 0) 로봇의 위쪽 방향이 Z축의 양수 방향입니다.",
    "neobot_sensor_value": "IN1 ~ IN3 포트 및 리모컨에서 입력되는 값 그리고 배터리 정보를 0부터 255의 숫자로 표시합니다.",
    "neobot_sensor_convert_scale": "선택한 포트 입력값의 변화를 특정범위의 값으로 표현범위를 조절할 수 있습니다.",
    "neobot_left_motor": "L모터 포트에 연결한 모터의 회전방향 및 속도를 설정합니다.",
    "neobot_stop_left_motor": "L모터 포트에 연결한 모터를 정지합니다.",
    "neobot_right_motor": "R모터 포트에 연결한 모터의 회전방향 및 속도를 설정합니다.",
    "neobot_stop_right_motor": "R모터 포트에 연결한 모터를 정지합니다.",
    "neobot_all_motor": "L모터 및 R모터 포트에 2개 모터를 연결하여 바퀴로 활용할 때 전, 후, 좌, 우 이동 방향 및 속도, 시간을 설정할 수 있습니다.",
    "neobot_stop_all_motor": "L모터 및 R모터에 연결한 모터를 모두 정지합니다.",
    "neobot_set_servo": "OUT1 ~ OUT3에 서보모터를 연결했을 때 0도 ~ 180도 범위 내에서 각도를 조절할 수 있습니다.",
    "neobot_set_output": "OUT1 ~ OUT3에 라이팅블록 및 전자회로를 연결했을 때 출력 전압을 설정할 수 있습니다.</br>0은 0V, 1 ~ 255는 2.4 ~ 4.96V의 전압을 나타냅니다.",
    "neobot_set_fnd": "FND로 0~99 까지의 숫자를 표시할 수 있습니다.",
    "neobot_set_fnd_off": "FND에 표시한 숫자를 끌 수 있습니다.",
    "neobot_play_note_for": "주파수 발진 방법을 이용해 멜로디에 반음 단위의 멜로디 음을 발생시킬 수 있습니다.",
    "rotate_by_angle_dropdown": "オブジェクトの方向を入力した角度だけ時計方向に回転します。(オブジェクトの中心点を基準に回転します。)",
    "chocopi_control_button": "버튼이 눌리면 참이 됩니다.<br/><br/>포트번호는 맞추지 않아도 됩니다.<br/>단, 같은 종류의 모듈을 여러 개 연결하는 경우에만 포트를 지정하면 됩니다.",
    "chocopi_control_event": "버튼을 누르거나 뗄 때 처리할 엔트리 블록들을 연결합니다.<br/><br/>포트번호는 맞추지 않아도 됩니다.<br/>단, 같은 종류의 모듈을 여러 개 연결하는 경우에만 포트를 지정하면 됩니다.",
    "chocopi_control_joystick": "조이스틱 좌우, 상하, 볼륨의 값은 0~4095까지 입니다.<br/>따라서 2047 근처가 중간이 됩니다.<br/><br/>포트번호는 맞추지 않아도 됩니다.<br/>단, 같은 종류의 모듈을 여러 개 연결하는 경우에만 포트를 지정하면 됩니다.",
    "chocopi_dc_motor": "DC모터 모듈에는 직류전동기 두개를 연결 할 수 있습니다.<br/> 직류 전동기는 최대 5V로 동작하게 됩니다.<br/>값은 100이 최대(100%)이고 음수를 넣으면 반대 방향으로 회전합니다.<br/><br/>포트번호는 맞추지 않아도 됩니다.<br/>단, 같은 종류의 모듈을 여러 개 연결하는 경우에만 포트를 지정하면 됩니다.",
    "chocopi_led": "LED번호는 LED블록에 연결된 순서이고 1번부터 시작합니다.<br/>RGB값은 0~255사이의 값입니다.<br/>빨강(Red),녹색(Green), 파랑(Blue)순서로  입력합니다.<br/>밝은 LED를 직접보면 눈이 아프니까 값을 0~5정도로 씁니다.<br/><br/>포트번호는 맞추지 않아도 됩니다.<br/>단, 같은 종류의 모듈을 여러 개 연결하는 경우에만 포트를 지정하면 됩니다.",
    "chocopi_motion_photogate_event": "포토게이트는 모션블록에 연결합니다.<br/>포토게이트는 한쪽에서 나온 빛을 맞은 편의 센서가 감지하는 장치입니다.<br/>빛센서를 물체로 가리거나 치우면 시작되는 엔트리 블록을 연결합니다<br/>모션 모듈에는 포토게이트 2개를 연결할 수 있습니다.<br/><br/>포트번호는 맞추지 않아도 됩니다.<br/>단, 같은 종류의 모듈을 여러 개 연결하는 경우에만 포트를 지정하면 됩니다.",
    "chocopi_motion_photogate_status": "포토게이트는 모션블록에 연결합니다.<br/>포토게이트는 한쪽에서 나온 빛을 맞은 편의 센서가 감지하는 장치입니다.<br>물체가 빛센서를 가리면 참</b>이됩니다.<br/><br/>포트번호는 맞추지 않아도 됩니다.<br/>단, 같은 종류의 모듈을 여러 개 연결하는 경우에만 포트를 지정하면 됩니다.",
    "chocopi_motion_photogate_time": "포토게이트는 모션블록에 연결합니다.<br/>포토게이트는 한쪽에서 나온 빛을 맞은 편의 센서가 감지하는 장치입니다.<br>이 블록은 물체가 빛센서를 가리거나 벗어난 시간을 가집니다.<br/>1/10000초까지 측정할 수 있습니다.<br/><br/>포트번호는 맞추지 않아도 됩니다.<br/>단, 같은 종류의 모듈을 여러 개 연결하는 경우에만 포트를 지정하면 됩니다.",
    "chocopi_motion_value": "모션 모듈에는 3개의 적외선 센서가 있습니다.<br/>0~4095사이의 값을 가질 수 있는데 물체가 빛을 많이 반사할 수록 작은 값을 가집니다. <br/>거리를 대략적으로 측정할 수 있습니다. <br/>가속도와 각가속도 값의 범위는 -32768~32767 까지입니다.<br/>가속도를 이용해서 센서의 기울기를 측정할 수도 있습니다.<br/><br/>포트번호는 맞추지 않아도 됩니다.<br/>단, 같은 종류의 모듈을 여러 개 연결하는 경우에만 포트를 지정하면 됩니다.",
    "chocopi_sensor": "온도 값은 섭씨 온도입니다.<br/>습도 값은 백분율로 나타낸 상대습도 값입니다.<br/>빛은 로그스케일로 0~4095사이입니다.<br/>아날로그 값은 0~4095사이입니다.<br/><br/>포트번호는 맞추지 않아도 됩니다.<br>단, 같은 종류의 모듈을 여러 개 연결하는 경우에만 포트를 지정하면 됩니다.",
    "chocopi_servo_motor": "서보모터 모듈에는 4개의 서보모터를 연결 할 수 있습니다.<br/>서보모터는 5V로 동작하게 됩니다.<br/>각도는 0~200도까지 지정할 수 있습니다.<br/>연속회전식 서보모터를 연결하면 각도에 따라 속도가 변하게됩니다.<br/>90~100 사이가 중간값입니다.<br/><br/>포트번호는 맞추지 않아도 됩니다.<br/>단, 같은 종류의 모듈을 여러 개 연결하는 경우에만 포트를 지정하면 됩니다.",
    "chocopi_touch_event": "터치 모듈에는 1~12번의 연결 패드가 있습니다. <br/>만지거나 뗄 때 처리할 엔트리 블록들을 연결합니다.<br/><br/>포트번호는 맞추지 않아도 됩니다.<br/>단, 같은 종류의 모듈을 여러 개 연결하는 경우에만 포트를 지정하면 됩니다.",
    "chocopi_touch_status": "터치 모듈의 패드를 만지면 참이됩니다.<br/><br/>포트번호는 맞추지 않아도 됩니다.<br>단, 같은 종류의 모듈을 여러 개 연결하는 경우에만 포트를 지정하면 됩니다.",
    "chocopi_touch_value": "터치패드에 연결된 물체의 전기용량이 커지면 값이 작아집니다.<br/>여러 명이 손잡고 만지면 더 작은 값이 됩니다.<br/>전기용량이란 물체에 전기를 띈 입자를 얼마나 가지고 있을 수 있는 지를 말합니다.<br/><br/>포트번호는 맞추지 않아도 됩니다.<br/>단, 같은 종류의 모듈을 여러 개 연결하는 경우에만 포트를 지정하면 됩니다.",
    "boolean_and_or": "そして : 2つの判断がすべてtrueの場合、「true」と判断します。<br>または: 2つの判断のうち1つでもtrueがある場合、「true」と判断します。",
    "check_weather": "<br>선택한 날짜와 지역의 날씨 정보를 실제 날씨 상태와 비교하여 일치하는 경우 ‘참’으로 판단합니다.<br> * 옵션<br> 날짜: 어제, 오늘, 내일, 모레, 3일 후, 4일 후, 5일 후, 6일 후<br> 지역: 서울, 강원, 경기, 경남, 경북, 광주, 대구, 대전, 부산, 세종, 울산, 인천, 전남, 전북, 제주, 충남, 충북<br> 날씨: 맑음, 구름조금, 구름많음, 흐림, 비, 진눈깨비, 눈",
    "check_finedust": "<br>선택한 지역의 현재 미세먼지 정보를 실제 미세먼지 등급과 비교하여 일치하는 경우 ‘참’으로 판단합니다.<br> * 옵션<br> 지역: 서울, 강원, 경기, 경남, 경북, 광주, 대구, 대전, 부산, 세종, 울산, 인천, 전남, 전북, 제주, 충남, 충북<br> 미세먼지 등급: 좋음, 보통, 나쁨, 매우나쁨",
    "get_weather_data": "<br>선택한 날짜와 지역의 각종 날씨 정보값(최저기온, 최고기온, 습도, 강수량, 강수확률, 풍속)입니다.<br> * 옵션<br> 날짜: 어제, 오늘, 내일, 모레, 3일 후, 4일 후, 5일 후, 6일 후<br> 지역: 서울, 강원, 경기, 경남, 경북, 광주, 대구, 대전, 부산, 세종, 울산, 인천, 전남, 전북, 제주, 충남, 충북<br> 정보: 최저기온(℃), 최고기온(℃), 습도(%), 강수량(mm), 강수확률(%), 풍속(m/s)",
    "get_current_weather_data": "<br>현재 선택한 지역의 날씨 정보값(기온, 미세먼지농도)입니다.<br> * 옵션<br> 지역: 서울, 강원, 경기, 경남, 경북, 광주, 대구, 대전, 부산, 세종, 울산, 인천, 전남, 전북, 제주, 충남, 충북<br> 정보: (기온(℃)), 미세먼지농도(㎍)",
    "get_today_temperature": "<br>오늘 선택한 지역과 시간대의 기온을 의미합니다.<br> * 옵션<br> 지역: 서울, 강원, 경기, 경남, 경북, 광주, 대구, 대전, 부산, 세종, 울산, 인천, 전남, 전북, 제주, 충남, 충북<br> 시간대: 00, 03, 06, 09, 12, 15, 18, 21",
    "check_city_weather": "<br>선택한 날짜와 지역의 날씨 정보를 실제 날씨 상태와 비교하여 일치하는 경우 ‘참’으로 판단합니다.<br> * 옵션<br> 날짜: 어제, 오늘, 내일, 모레, 3일 후, 4일 후, 5일 후, 6일 후<br> 시도: 서울, 강원, 경기, 경남, 경북, 광주, 대구, 대전, 부산, 세종, 울산, 인천, 전남, 전북, 제주, 충남, 충북 <br> 시군구: 시도별로 다름<br> 날씨: 맑음, 구름조금, 구름많음, 흐림, 비, 진눈깨비, 눈",
    "check_city_finedust": "<br>선택한 지역의 현재 미세먼지 정보를 실제 미세먼지 등급과 비교하여 일치하는 경우 ‘참’으로 판단합니다.<br> * 옵션<br> 시도: 서울, 강원, 경기, 경남, 경북, 광주, 대구, 대전, 부산, 세종, 울산, 인천, 전남, 전북, 제주, 충남, 충북 <br> 시군구: 시도별로 다름<br> 미세먼지 등급: 좋음, 보통, 나쁨, 매우나쁨",
    "get_city_weather_data": "<br>선택한 날짜와 지역의 각종 날씨 정보값(최저기온, 최고기온, 습도, 강수량, 강수확률, 풍속)입니다.<br> * 옵션<br> 날짜: 어제, 오늘, 내일, 모레, 3일 후, 4일 후, 5일 후, 6일 후<br> 시도: 서울, 강원, 경기, 경남, 경북, 광주, 대구, 대전, 부산, 세종, 울산, 인천, 전남, 전북, 제주, 충남, 충북 <br> 시군구: 시도별로 다름<br> 정보: 최저기온(℃), 최고기온(℃), 습도(%), 강수량(mm), 강수확률(%), 풍속(m/s)",
    "get_current_city_weather_data": "<br>현재 선택한 지역의 날씨 정보값(기온, 미세먼지농도)입니다.<br> * 옵션<br> 시도: 서울, 강원, 경기, 경남, 경북, 광주, 대구, 대전, 부산, 세종, 울산, 인천, 전남, 전북, 제주, 충남, 충북 <br> 시군구: 시도별로 다름<br> 정보: (기온(℃)), 미세먼지농도(㎍)",
    "get_today_city_temperature": "<br>오늘 선택한 지역과 시간대의 기온을 의미합니다.<br> * 옵션<br> 시도: 서울, 강원, 경기, 경남, 경북, 광주, 대구, 대전, 부산, 세종, 울산, 인천, 전남, 전북, 제주, 충남, 충북 <br> 시군구: 시도별로 다름<br> 시간대: 00, 03, 06, 09, 12, 15, 18, 21",
    "count_festival": "<br>選択した日付と地域で開催されるイベントの数です。",
    "get_festival_info": "<br>選択した日付と地域で開催されるイベントの情報です。",
    "get_translated_string": "<br>入力されたテキストを選択した言語に翻訳します。テキストは3000字まで入力可能です。",
    "check_language": "<br>入力されたテキストの言語を検出します。テキストは文章の形で、3000字まで入力可能です。",
    "count_disaster_behavior": "<br>選択した自然災害が発生した時に取るべき行動要領の数です。",
    "get_disaster_behavior": "<br>選択した自然災害が発生した時に取るべき行動要領についての情報です。",
    "count_lifeSafety_behavior": "<br>選択した、生活トラブルが生じた時に取るべき行動要領の数です。",
    "get_lifeSafety_behavior": "<br>選択した、生活トラブルが生じた時に取るべき行動要領についての情報です。",
    "read_text": "入力した文字列を設定した音声で読み上げます。",
    "set_tts_property": "選択した音声が選択した速度と選択したピッチで設定されます。",
    "read_text_wait_with_block": "入力した文字列を設定した音声で読み上げし、読み上げが終わると次のブロックを実行します。",
    "check_microphone": "コンピューターにマイクが接続されている場合、「正」と判断します。",
    "speech_to_text_convert": "マイクへの音声入力をテキストに変換します。",
    "get_microphone_volume": "マイクに入力される音の大きさです。",
    "speech_to_text_get_value": "音声をテキストに変換した値を報告します。 音声が入力されない場合、または音声認識中にエラーが発生した場合、値は0になります。",
    "video_draw_webcam": "コンピューターに接続されたカメラの撮影画面を実行画面で表示または非表示にします。",
    "video_check_webcam": "コンピューターにカメラが接続されている場合、「正」と判断します。",
    "video_set_camera_option": "撮影画面の効果を入力した値に決めます。 明度：-100～100の間の範囲で設定できます。(-100以下は-100で、100以上は100で処理されます) 透明度：0～100の間の範囲で設定できます。(0以下は0で、100以上は100で処理されます)",
    "video_flip_camera": "撮影画面を左右または上下に反転させます。",
    "video_toggle_model": "選んだ認識モデールの作動を始めたり、止めたりします。 顔を認識: 人の顔を認識して、目、鼻、口、耳の位置や人の予想性別、歳、感情を分析します。 体を認識: 人の体を認識して、それぞれの身体部位などを分析します。 物を認識: 認識された物の種類を分析します。(人や物)",
    "video_toggle_ind": "認識され 人 / た顔 / 物事 の位置と順番を実行画面に表示または非表示にします。",
    "video_number_detect": "撮影画面にオブジェクトとして認識されたオブジェクトの数です。認識できるオブジェクト：人、自転車、自動車、オートバイ、飛行機、バス、電車、トラック、ボート、信号機、消火栓、停止信号、駐車メーター、ベンチ、鳥、猫、犬、馬、羊、雌牛、ゾウ、クマ、シマウマ、キリン、リュック、傘、ハンドバック、ネクタイ、かばん、フリスビー、スキー、スノーボード、スポーツボール、凧、野球バット、野球グローブ、スケートボード、サーフボード、テニスラケット、瓶、ワイングラス、コップ、フォーク、ナイフ、スプーン、皿、バナナ、アップル、サンドイッチ、オレンジ色、ブロッコリー、にんじん、ホットドッグ、ピザ、ドーナツ、ケーキ、椅子、ソファ、鉢植え、ベッド、食事テーブル、トイレ、テレビモニター、ノートパソコン、マウス、リモコン、キーボード、携帯電話、電子レンジ、オーブン、トースター、シンク、冷蔵庫、図書、時計、花瓶、はさみ、テディベア、ヘアドライヤー、歯ブラシ",
    "video_detected_face_info": "入力した順番の顔に関する選択した情報の推定値です。上手く認識できない場合、必ず0で出力されます。(性別、年齢、感情)",
    "video_motion_value": "選択したオブジェクトまたは実行画面上で感知されるモーション、もしくは方向値です。 モーション：動きが大きく速いほど値が大きくなります。 方向：右側もしくは上側に動くときは陽数、左側もしくは下側に動くときは陰数になります。",
    "video_face_part_coord": "入力した順番の顔の中で、選択した顔の部位の位置値です。上手く認識できない場合、必ず0で出力されます。(左眼、右眼、鼻、左口、右口,上唇,下唇)",
    "video_body_part_coord": "入力した順番の人に関して選択した身体部位の位置値です。(顔、左肩、左肘、左手首、左尻、左膝、左足首、右肩、右肘、右手首、右尻、右膝、右足首)",
    "append_row_to_table": "Adds a row(col) to the end location of the selected table.",
    "insert_row_to_table": "Inserts a row(col) to the location of the input value on the selected table.",
    "delete_row_from_table": "Deletes the row(col) at the location of input value from the selected table.",
    "set_value_from_table": "Replaces value of selected attribute at the location of the input value to the input value.",
    "get_table_count": "Reports the number of rows or attribute on the selected table.",
    "get_value_from_table": "Reports the value of selected attribute at the location of the input value from the selected table.",
    "calc_values_from_table": "Reports calculated value of the selected attributes in the selected table. (sum, maximum, minimum, average, standard deviation)",
    "open_table_chart": "Open the chart of the selected table.",
    "close_table_chart": "Close the table chart.",
    "get_coefficient": "Correlation coefficient between two attributes in the selected table. The closer the correlation coefficient is to 1(-1), the stronger the positive (negative) linear correlation."
};
Lang.Category = {
    "entrybot_friends": "エントリーボットの友達",
    "people": "人",
    "animal": "動物",
    "animal_flying": "空",
    "animal_land": "地",
    "animal_water": "水",
    "animal_others": "その他",
    "plant": "植物",
    "plant_flower": "花",
    "plant_grass": "草",
    "plant_tree": "木",
    "plant_others": "その他",
    "vehicles": "乗り物",
    "vehicles_flying": "空",
    "vehicles_land": "地",
    "vehicles_water": "水",
    "vehicles_others": "その他",
    "architect": "建物",
    "architect_building": "建築物",
    "architect_monument": "記念物",
    "architect_others": "その他",
    "food": "食べ物",
    "food_vegetables": "果物/野菜",
    "food_meat": "肉",
    "food_drink": "飲み物",
    "food_others": "その他",
    "environment": "環境",
    "environment_nature": "自然",
    "environment_space": "宇宙",
    "environment_others": "その他",
    "stuff": "物",
    "stuff_living": "生活",
    "stuff_hobby": "趣味",
    "stuff_others": "その他",
    "fantasy": "ファンタジー",
    "interface": "インターフェイス",
    "interface_website": "ウェブサイト",
    "interface_game": "ゲーム",
    "interface_others": "その他",
    "background": "背景",
    "background_outdoor": "室外",
    "background_indoor": "室内",
    "background_nature": "自然",
    "background_others": "その他"
};
Lang.Device = {
    "arduino": "arduino",
    "hamster": "hamster",
    "roboid": "ロボイド",
    "turtle": "turtle",
    "albert": "albert",
    "robotis_carCont": "",
    "robotis_openCM70": "",
    "sensorBoard": "Entry Sensor Board",
    "trueRobot": "TrueTrueRobot",
    "CODEino": "CODEino",
    "bitbrick": "bitbrick",
    "creamo": "creamo",
    "playcode": "playcode",
    "funboard": "funboard",
    "bitBlock": "ビットブロック",
    "xbot_epor_edge": "XBOT",
    "dplay": "DPLAY",
    "iboard": "iboard",
    "nemoino": "NEMOino",
    "ev3": "EV3",
    "robotori": "robotori",
    "smartBoard": "smartBoard",
    "chocopi": "ChocoPi",
    "rokoboard": "rokoboard",
    "altino": "알티노",
    "mechatro": "mechatro"
};
Lang.General = {
    "turn_on": "ON",
    "turn_off": "OFF",
    "left": "左側",
    "right": "右側",
    "param_string": "文字値",
    "both": "両側",
    "transparent": "透明",
    "black": "黒",
    "brown": "茶色",
    "red": "赤",
    "yellow": "黄色",
    "green": "緑",
    "skyblue": "水色",
    "blue": "青",
    "purple": "紫",
    "white": "白",
    "note_c": "ド",
    "note_d": "レ",
    "note_e": "ミ",
    "note_f": "ファ",
    "note_g": "ソ",
    "note_a": "ラ",
    "note_b": "シ",
    "questions": "問題",
    "clock": "時計",
    "counter_clock": "反時計",
    "font_size": "文字サイズ",
    "second": "秒",
    "alert_title": "通知",
    "confirm_title": "確認",
    "update_title": "アップデート通知",
    "recent_download": "今すぐアップデート",
    "recent_download2": "最新バージョンをダウンロード",
    "latest_version": "最新バージョンです。",
    "dont_show_again": "今後、この通知を表示しない"
};
Lang.Fonts = {
    "jeju_hallasan": "漢拏山体",
    "gothic_coding": "コーディングゴシック体",
    "batang": "パタン体",
    "gothic": "ナヌムゴシック体",
    "myeongjo": "ナヌム明朝",
    "pen_script": "ナヌム手書き",
    "square_round": "ナヌム角丸体",
    "jalnan": "ジャルナン体",
    "designhouse": "デザインハウス体",
    "malssami815": "マルサミ８１５体",
    "dunggeunmo": "丸文字体",
    "hs_bombaram": "HSボムバラム体",
    "yisunshin": "イスンシン体",
    "goyang": "ゴヤン体",
    "flower_road": "サンサンフラワーロード体",
    "uhbeemysen": "アビーマイセン体",
    "sd_comic_stencil": "Sandoll コミックステンシル",
    "sd_childfundkorea": "Sandoll コドモノタメニ",
    "sd_cinema_theater": "Sandoll シネマゲキジョウ",
    "sd_mapssi": "Sandoll メッシ",
    "sd_shabang": "Sandoll ホシガキラキラ",
    "sd_woodcarving": "Sandoll キボリ",
    "sd_yongbi": "Sandoll ヨンビ"
};
Lang.Hw = {
    "note": "音符",
    "leftWheel": "左車輪",
    "rightWheel": "右車輪",
    "leftEye": "左目",
    "rightEye": "右目",
    "led": "光",
    "led_en": "LED",
    "body": "本体",
    "front": "前",
    "port_en": " ",
    "port_ko": "番ポート",
    "sensor": "センサー",
    "light": "光",
    "temp": "温度",
    "switch_": "スイッチ",
    "right_ko": "右側",
    "right_en": " ",
    "left_ko": "左側",
    "left_en": " ",
    "up_ko": "上",
    "up_en": " ",
    "down_ko": "下",
    "down_en": " ",
    "output": "出力",
    "left": "左側",
    "right": "右側",
    "sub": "サーボ",
    "motor": "モーター",
    "": "",
    "buzzer": "ブーザー",
    "IR": "赤外線",
    "acceleration": "加速",
    "analog": "アナログ",
    "angular_acceleration": "角加速",
    "button": "ボタン",
    "humidity": "湿度",
    "joystick": "joystick",
    "port": "ポート",
    "potentiometer": "ポテンショメータ",
    "servo": "サーボ"
};
Lang.template = {
    "albert_hand_found": "hand found?",
    "albert_is_oid_value": "%1 oid %2?",
    "albert_value": "%1",
    "albert_move_forward_for_secs": "move forward for %1 secs %2",
    "albert_move_backward_for_secs": "move backward for %1 secs %2",
    "albert_turn_for_secs": "turn %1 for %2 secs %3",
    "albert_change_both_wheels_by": "change wheels by left: %1 right: %2 %3",
    "albert_set_both_wheels_to": "set wheels to left: %1 right: %2 %3",
    "albert_change_wheel_by": "change %1 wheel by %2 %3",
    "albert_set_wheel_to": "set %1 wheel to %2 %3",
    "albert_stop": "stop %1",
    "albert_set_pad_size_to": "set board size to width: %1 height: %2 %3",
    "albert_move_to_x_y_on_board": "move to x: %1 y: %2 on board %3",
    "albert_set_orientation_on_board": "set orientation to %1 degrees on board %2",
    "albert_set_eye_to": "set %1 eye to %2 %3",
    "albert_clear_eye": "clear %1 eye %2",
    "albert_body_led": "turn %1 body led %2",
    "albert_front_led": "turn %1 front led %2",
    "albert_beep": "beep %1",
    "albert_change_buzzer_by": "change buzzer by %1 %2",
    "albert_set_buzzer_to": "set buzzer to %1 %2",
    "albert_clear_buzzer": "clear buzzer %1",
    "albert_play_note_for": "play note %1 %2 for %3 beats %4",
    "albert_rest_for": "rest for %1 beats %2",
    "albert_change_tempo_by": "change tempo by %1 %2",
    "albert_set_tempo_to": "set tempo to %1 bpm %2",
    "albert_move_forward": "move forward %1",
    "albert_move_backward": "move backward %1",
    "albert_turn_around": "turn %1 %2",
    "albert_set_led_to": "set %1 led %2 %3",
    "albert_clear_led": "clear %1 led %2",
    "albert_change_wheels_by": "%1 %2 %3",
    "albert_set_wheels_to": "%1 %2 %3",
    "arduino_text": "%1",
    "arduino_get_sensor_number": "%1  ",
    "arduino_get_port_number": "%1  ",
    "arduino_get_digital_toggle": "%1  ",
    "arduino_get_pwm_port_number": "%1  ",
    "arduino_get_number_sensor_value": "Analog %1 Sensor value  ",
    "arduino_ext_get_analog_value": "Analog %1 Sensor value",
    "arduino_ext_get_analog_value_map": "Map Value %1 %2 ~ %3 to %4 ~ %5",
    "arduino_ext_get_ultrasonic_value": "Read ultrasonic sensor trig pin %1 echo pin %2",
    "arduino_ext_toggle_led": "Digital %1 Pin %2 %3",
    "arduino_ext_digital_pwm": "Digital %1 Pin %2 %3",
    "arduino_ext_set_tone": "Play tone pin %1 on note %2 octave %3 beat %4 %5",
    "arduino_ext_set_servo": "Set servo pin %1 angle as %2 %3",
    "arduino_ext_get_digital": "Digital %1 Sensor value",
    "blacksmith_get_analog_value": "Read analog %1 pin sensor value",
    "blacksmith_get_analog_mapping": "Map analog %1 pin sensor value from %2 ~ %3 to %4 ~ %5",
    "blacksmith_get_digital_bluetooth": "Bluetooth RX 2 value",
    "blacksmith_get_digital_ultrasonic": "Read ultrasonic Trig %1 Echo %2 sensor value",
    "blacksmith_get_digital_toggle": "Digital %1 pin sensor value",
    "blacksmith_set_digital_toggle": "Digital %1 pin %2 %3",
    "blacksmith_set_digital_pwm": "Digital pwm %1 Pin %2 %3",
    "blacksmith_set_digital_servo": "Set servo pin %1 angle as %2 %3",
    "blacksmith_set_digital_buzzer": "Play tone pin %1 on note %2 octave %3 beat %4 %5",
    "blacksmith_set_digital_lcd": "LCD %1 line %2 appear %3",
    "blacksmith_set_digital_bluetooth": "Bluetooth TX 3 Pin %1 data send %2",
    "dplay_get_number_sensor_value": "Analog %1 Sensor value  ",
    "nemoino_get_number_sensor_value": "Analog %1 Sensor value  ",
    "sensorBoard_get_number_sensor_value": "Analog %1 Sensor value  ",
    "truetrue_get_accsensor": "加速度センサー%1の値",
    "truetrue_get_bottomcolorsensor": "床面カラーセンサー%1の値",
    "truetrue_get_frontcolorsensor": "全面カラーセンサー%1の値",
    "truetrue_get_linesensor": "ラインセンサー%1の値",
    "truetrue_get_proxisensor": "近接センサー%1の値",
    "truetrue_set_colorled": "カラーLED Red %1  Green %2 Blue %3 に設定 %4",
    "truetrue_set_dualmotor": "DCモーター左 %1  右 %2速度で%3秒駆動%4",
    "truetrue_set_led_colorsensor": "%1照明用LED %2 %3",
    "truetrue_set_led_linesensor": "ラインセンサー照明用LED %1 %2",
    "truetrue_set_led_proxi": "%1照明用LED %2 %3",
    "truetrue_set_linetracer": "ライントレーシングモード%1 %2",
    "truetrue_set_singlemotor": "DCモーター %1 速度 %2 に設定 %3",
    "CODEino_get_number_sensor_value": "Analog %1 Sensor value  ",
    "ardublock_get_number_sensor_value": "Analog %1 Sensor value  ",
    "arduino_get_digital_value": "Digital %1 Sensor value  ",
    "dplay_get_digital_value": "Digital %1 Sensor value  ",
    "nemoino_get_digital_value": "Digital %1 Sensor value  ",
    "sensorBoard_get_digital_value": "Digital %1 Sensor value  ",
    "CODEino_get_digital_value": "Digital %1 Pin value  ",
    "CODEino_set_digital_value": "Digital %1 Pin %2 %3",
    "CODEino_set_pwm_value": "Digital %1 Pin %2 %3",
    "ardublock_get_digital_value": "Digital %1 Sensor value  ",
    "arduino_toggle_led": "Digital %1 Pin %2 %3",
    "dplay_toggle_led": "Digital %1 Pin %2 %3",
    "nemoino_toggle_led": "Digital %1 Pin %2 %3",
    "sensorBoard_toggle_led": "Digital %1 Pin %2 %3",
    "CODEino_toggle_led": "Digital %1 Pin %2 %3",
    "arduino_toggle_pwm": "Digital %1 Pin %2 %3",
    "dplay_toggle_pwm": "Digital %1 Pin %2 %3",
    "nemoino_toggle_pwm": "Digital %1 Pin %2 %3",
    "sensorBoard_toggle_pwm": "Digital %1 Pin %2 %3",
    "CODEino_toggle_pwm": "Digital %1 Pin %2 %3",
    "ardublock_toggle_pwm": "Digital %1 Pin %2 %3",
    "arduino_convert_scale": "Map Value %1 %2 ~ %3 to %4 ~ %5  ",
    "dplay_convert_scale": "Map Value %1 %2 ~ %3 to %4 ~ %5  ",
    "nemoino_convert_scale": "Map Value %1 %2 ~ %3 to %4 ~ %5  ",
    "sensorBoard_convert_scale": "Map Value %1 %2 ~ %3 to %4 ~ %5  ",
    "CODEino_convert_scale": "Map Value %1 %2 ~ %3 to %4 ~ %5  ",
    "CODEino_set_rgb_value": "Set color LED %1 by %2 %3",
    "CODEino_set_rgb_add_value": "Add color LED %1 by %2 %3",
    "CODEino_set_rgb_off": "Turn off LED %1",
    "CODEino_set__led_by_rgb": "Turn on color LED, Red %1 Green %2 Blue %3 %4",
    "CODEino_rgb_set_color": "Select %1 for color LED %2",
    "CODEino_led_by_value": "Turn on LED %1",
    "ardublock_convert_scale": "Map Value %1 %2 ~ %3 to %4 ~ %5  ",
    "joystick_get_number_sensor_value": "Analog %1 Sensor value  ",
    "joystick_get_digital_value": "Digital %1 Sensor value  ",
    "joystick_toggle_led": "Digital %1 Pin %2 %3",
    "joystick_toggle_pwm": "Digital %1 Pin %2 %3",
    "joystick_convert_scale": "Map Value %1 %2 ~ %3 to %4 ~ %5  ",
    "sensorBoard_get_named_sensor_value": "%1  Sensor value",
    "sensorBoard_is_button_pressed": "Pressed %1 button?",
    "sensorBoard_led": "%1  LED %2   %3",
    "arduino_download_connector": "%1",
    "download_guide": "%1",
    "arduino_download_source": "%1",
    "arduino_connected": "%1",
    "arduino_connect": "%1",
    "arduino_reconnect": "%1",
    "CODEino_get_sensor_number": "%1  ",
    "CODEino_get_named_sensor_value": "  %1  Sensor value ",
    "CODEino_get_sound_status": "Sound is  %1  ",
    "CODEino_get_light_status": "Light is  %1  ",
    "CODEino_is_button_pressed": " Operation  %1  ",
    "CODEino_get_accelerometer_direction": " 3-AXIS Accelerometer  %1  ",
    "CODEino_get_accelerometer_value": " 3-AXIS Accelerometer  %1 -axis value ",
    "CODEino_get_analog_value": "Analog %1 Sensor value",
    "iboard_button": "Pressed %1 button?",
    "iboard_digital_pwm": "Digital %1 Pin %2 %3",
    "iboard_get_analog_value": "Analog %1 Sensor value  ",
    "iboard_get_analog_value_map": "Map Value %1 %2 ~ %3 to %4 ~ %5  ",
    "iboard_get_digital": "Digital %1 Sensor value  ",
    "iboard_led": "Digital %1 Pin %2 %3",
    "iboard_motor": "Digital %1 Pin %2 %3",
    "iboard_pwm_led": "Digital %1 Pin %2 %3",
    "iboard_rgb_led": " %1 LED %2 %3",
    "iboard_set_tone": "Play tone pin %1 on note %2 octave %3 beat %4 %5",
    "iboard_toggle_led": "Digital %1 Pin %2 %3",
    "bitbrick_when_button_pressed": "%1 when button %2",
    "bitbrick_when_sensor_get_value": "%1 when %2 value %3 %4",
    "bitbrick_is_touch_pressed": "button %1 %2?",
    "bitbrick_is_sensor_value_compare": "%1 %2 %3?",
    "bitbrick_sensor_value": "%1 value",
    "bitbrick_convert_scale": "map %1 value from %2 ~ %3 to %4 ~ %5",
    "bitbrick_turn_on_color_led_by_rgb": "set LED color to Red %1 Green %2 Blue %3 %4",
    "bitbrick_turn_on_color_led_by_picker": "set LED color to %1 %2",
    "bitbrick_turn_on_color_led_by_value": "set LED color %1 %2",
    "bitbrick_turn_off_color_led": "turn off LED %1",
    "bitbrick_buzzer": "buzz note %1 %2",
    "bitbrick_servomotor_angle": "servo motor %1 degree %2 %3",
    "bitbrick_dc_direction_speed": "dc motor %1 direction %2 speed %3 %4",
    "bitbrick_dc_speed": "dc motor %1 velocity %2 %3",
    "bitbrick_turn_off_all_motors": "stop all motors %1",
    "start_drawing": "描きはじめる %1",
    "stop_drawing": "描きおえる %1",
    "set_color": "筆の色を%1にする %2",
    "set_random_color": "筆の色をランダムにする %1",
    "change_thickness": "筆の太さを %1 だけ変える %2",
    "set_thickness": "筆の太さを%1にする %2",
    "change_opacity": "筆の不透明度を%1 %大きくする %2",
    "set_opacity": "筆の不透明度を%1 %にする %2",
    "brush_erase_all": "すべての筆のあとを消す %1",
    "brush_stamp": "スタンプを押す %1",
    "change_brush_transparency": "筆の透明度を%1 %だけ変える %2",
    "set_brush_tranparency": "筆の透明度を%1 %にする %2",
    "number": "%1",
    "angle": "%1",
    "color": "%1",
    "get_x_coordinate": "%1",
    "get_y_coordinate": "%1",
    "get_angle": "%1",
    "get_rotation_direction": "%1",
    "distance_something": "%1 %2 %3",
    "coordinate_mouse": "%1 %2 %3",
    "coordinate_object": "%1 %2 %3 %4",
    "calc_basic": "%1 %2 %3",
    "calc_plus": "%1 %2 %3",
    "calc_minus": "%1 %2 %3",
    "calc_times": "%1 %2 %3",
    "calc_divide": "%1 %2 %3",
    "calc_mod": "%1 %2 %3 %4",
    "calc_share": "%1 %2 %3 %4",
    "calc_operation": "%1 %2 %3 %4",
    "calc_rand": "%1 %2 %3 %4 %5",
    "get_date": "%1 %2 %3",
    "get_sound_duration": "%1 %2 %3",
    "get_user_name": "ユーザーID",
    "get_nickname": "ニックネーム",
    "reset_project_timer": "%1",
    "set_visible_project_timer": "%1 %2 %3 %4",
    "timer_variable": "%1 %2",
    "get_project_timer_value": "%1 %2",
    "char_at": "%1 %2 %3 %4 %5",
    "length_of_string": "%1 %2 %3",
    "substring": "%1 %2 %3 %4 %5 %6 %7",
    "replace_string": "%1 %2 %3 %4 %5 %6 %7",
    "change_string_case": "%1 %2 %3 %4 %5",
    "index_of_string": "%1 %2 %3 %4 %5",
    "combine_something": "%1 %2 %3 %4 %5",
    "get_sound_volume": "%1 %2",
    "quotient_and_mod": "%1 %2 %3 %4 %5 %6",
    "choose_project_timer_action": "%1 %2 %3 %4",
    "wait_second": "%1 秒待つ %2",
    "repeat_basic": "%1回繰り返す %2",
    "hidden_loop": "%1回繰り返す %2",
    "repeat_inf": "ずっと繰り返す %1",
    "stop_repeat": "繰り返しをやめる %1",
    "wait_until_true": "%1 になるまで待つ %2",
    "_if": "もし%1なら %2",
    "if_else": "もし%1なら %2 %3でなければ",
    "create_clone": "%1のコピーを作る %2",
    "delete_clone": "このコピーを削除する %1",
    "when_clone_start": "%1 初めてコピーされた時",
    "stop_run": "プログラムを終了する %1",
    "repeat_while_true": "%1 %2  繰り返す %3",
    "stop_object": "%1 コードの実行を止める %2",
    "restart_project": "最初から再スタートする %1",
    "remove_all_clones": "すべてのコピーを削除する %1",
    "functionAddButton": "%1",
    "function_field_label": "%1%2",
    "function_field_string": "%1%2",
    "function_field_boolean": "%1%2",
    "function_param_string": "文字/数字の値",
    "function_param_boolean": "判断値",
    "function_create": "関数を定義する %1 %2",
    "function_general": "関数%1",
    "expansionBlockAddButton": "%1",
    "aiUtilizeBlockAddButton": "%1",
    "aiUtilizeModelTrainButton": "%1",
    "weather_title": "%1",
    "check_weather": "%1 %2の天気が%3か？",
    "check_finedust": "現在%1のPM10のレベルが%2か？",
    "get_weather_data": "%1 %2の %3",
    "get_current_weather_data": "現在%1の %2",
    "get_today_temperature": "今日%1の %2時の気温",
    "check_city_weather": "%1 %2 %3の天気が%4か？",
    "check_city_finedust": "現在%1 %2のPM10のレベルが%3か？",
    "get_city_weather_data": "%1 %2 %3の %4",
    "get_current_city_weather_data": "現在%1 %2の %3",
    "get_today_city_temperature": "今日%1 %2の %3時の気温",
    "translate_title": "%1",
    "get_translated_string": "%1 %2を %3に翻訳する",
    "check_language": "%1の言語",
    "festival_title": "%1",
    "count_festival": "%1 %2 のイベント数",
    "get_festival_info": "%1 %2 のイベント中 %3 番目の項目の %4",
    "behaviorConductDisaster_title": "%1",
    "count_disaster_behavior": "%1 %2 に取るべき行動要領数",
    "get_disaster_behavior": "自然災害の %1 %2 に取るべき行動要領で %3番目の項目",
    "behaviorConductLifeSafety_title": "%1",
    "count_lifeSafety_behavior": "%1 の中の %2方法の数",
    "get_lifeSafety_behavior": "%1の中の %2方法で %3番目の項目",
    "tts_title": "%1",
    "audio_title": "%1",
    "video_title": "%1",
    "read_text": "%1 を読み上げる %2",
    "set_tts_property": "%1 音声で速さを%2、ピッチを%3に設定する。%4",
    "read_text_wait_with_block": "%1 を読み上げて待つ %2",
    "load_expansion_block": "追加する",
    "load_ai_utilize_block": "AIブロックの読み込み",
    "load_ai_utilize_train_block": "鉄道模型",
    "expansion_block_descriptions": "拡張ブロックが正常に動作するには、インターネット接続が必要です。",
    "aiUtilize_block_descriptions": "A.I.活用ブロックは、インターネット接続が必要です。",
    "weather_title_text": "天気",
    "translate_title_text": "翻訳",
    "festival_title_text": "イベント",
    "audio_title_text": "オーディオ検出",
    "check_microphone": "マイクが接続されているか?",
    "get_microphone_volume": "マイク音量",
    "speech_to_text_convert": "音声の大井 %1",
    "speech_to_text_get_value": "音声を文字に変えた値",
    "video_title_text": "ビデオ検出",
    "video_draw_webcam": "ビデオ画面 %1 %2",
    "video_check_webcam": "ビデオが接続されているか？",
    "video_set_camera_opacity_option": "ビデオの透明度効果を %1 に決める %2",
    "video_flip_camera": "ビデオ画面 %1 %2",
    "video_toggle_model": "%1 認識を %2 %3",
    "video_toggle_ind": "認識された %1 %2 %3",
    "video_number_detect": "認識された %1 の数",
    "video_detected_face_info": "%1 番目の顔の %2",
    "video_motion_value": "%1 で感知した %2 値",
    "video_face_part_coord": "%1 番目の顔 %2 の %3 座標",
    "video_body_part_coord": "%1 番目の人の %2 の %3 座標",
    "behaviorConductDisaster_title_text": "自然災害",
    "behaviorConductLifeSafety_title_text": "生活安全",
    "tts_title_text": "音声読み上げ",
    "hamster_hand_found": "hand found?",
    "hamster_value": "%1",
    "hamster_move_forward_once": "move forward once on board %1",
    "hamster_turn_once": "turn %1 once on board %2",
    "hamster_move_forward_for_secs": "move forward for %1 secs %2",
    "hamster_move_backward_for_secs": "move backward for %1 secs %2",
    "hamster_turn_for_secs": "turn %1 for %2 secs %3",
    "hamster_change_both_wheels_by": "change wheels by left: %1 right: %2 %3",
    "hamster_set_both_wheels_to": "set wheels to left: %1 right: %2 %3",
    "hamster_change_wheel_by": "change %1 wheel by %2 %3",
    "hamster_set_wheel_to": "set %1 wheel to %2 %3",
    "hamster_follow_line_using": "follow %1 line using %2 floor sensor %3",
    "hamster_follow_line_until": "follow %1 line until %2 intersection %3",
    "hamster_set_following_speed_to": "set following speed to %1 %2",
    "hamster_stop": "stop %1",
    "hamster_set_led_to": "set %1 led to %2 %3",
    "hamster_clear_led": "clear %1 led %2",
    "hamster_beep": "beep %1",
    "hamster_change_buzzer_by": "change buzzer by %1 %2",
    "hamster_set_buzzer_to": "set buzzer to %1 %2",
    "hamster_clear_buzzer": "clear buzzer %1",
    "hamster_play_note_for": "play note %1 %2 for %3 beats %4",
    "hamster_rest_for": "rest for %1 beats %2",
    "hamster_change_tempo_by": "change tempo by %1 %2",
    "hamster_set_tempo_to": "set tempo to %1 bpm %2",
    "hamster_set_port_to": "set port %1 to %2 %3",
    "hamster_change_output_by": "change output %1 by %2 %3",
    "hamster_set_output_to": "set output %1 to %2 %3",
    "roboid_hamster_beep": "Hamster %1: beep %2",
    "roboid_hamster_change_both_wheels_by": "Hamster %1: change wheels by left: %2 right: %3 %4",
    "roboid_hamster_change_buzzer_by": "Hamster %1: change buzzer by %2 %3",
    "roboid_hamster_change_output_by": "Hamster %1: change output %2 by %3 %4",
    "roboid_hamster_change_tempo_by": "Hamster %1: change tempo by %2 %3",
    "roboid_hamster_change_wheel_by": "Hamster %1: change %2 wheel by %3 %4",
    "roboid_hamster_clear_buzzer": "Hamster %1: clear buzzer %2",
    "roboid_hamster_clear_led": "Hamster %1: clear %2 led %3",
    "roboid_hamster_follow_line_until": "Hamster %1: follow %2 line until %3 intersection %4",
    "roboid_hamster_follow_line_using": "Hamster %1: follow %2 line using %3 floor sensor %4",
    "roboid_hamster_hand_found": "Hamster %1: hand found?",
    "roboid_hamster_move_backward_for_secs": "Hamster %1: move backward for %2 secs %3",
    "roboid_hamster_move_forward_for_secs": "Hamster %1: move forward for %2 secs %3",
    "roboid_hamster_move_forward_once": "Hamster %1: move forward once on board %2",
    "roboid_hamster_play_note_for": "Hamster %1: play note %2 %3 for %4 beats %5",
    "roboid_hamster_rest_for": "Hamster %1: rest for %2 beats %3",
    "roboid_hamster_set_both_wheels_to": "Hamster %1: set wheels to left: %2 right: %3 %4",
    "roboid_hamster_set_buzzer_to": "Hamster %1: set buzzer to %2 %3",
    "roboid_hamster_set_following_speed_to": "Hamster %1: set following speed to %2 %3",
    "roboid_hamster_set_led_to": "Hamster %1: set %2 led to %3 %4",
    "roboid_hamster_set_output_to": "Hamster %1: set output %2 to %3 %4",
    "roboid_hamster_set_port_to": "Hamster %1: set port %2 to %3 %4",
    "roboid_hamster_set_tempo_to": "Hamster %1: set tempo to %2 bpm %3",
    "roboid_hamster_set_wheel_to": "Hamster %1: set %2 wheel to %3 %4",
    "roboid_hamster_stop": "Hamster %1: stop %2",
    "roboid_hamster_turn_for_secs": "Hamster %1: turn %2 for %3 secs %4",
    "roboid_hamster_turn_once": "Hamster %1: turn %2 once on board %3",
    "roboid_hamster_value": "Hamster %1: %2",
    "roboid_turtle_button_state": "Turtle %1: button %2 ?",
    "roboid_turtle_change_buzzer_by": "Turtle %1: change buzzer by %2 %3",
    "roboid_turtle_change_head_led_by_rgb": "Turtle %1: change head led by r: %2 g: %3 b: %4 %5",
    "roboid_turtle_change_tempo_by": "Turtle %1: change tempo by %2 %3",
    "roboid_turtle_change_wheel_by": "Turtle %1: change %2 wheel by %3 %4",
    "roboid_turtle_change_wheels_by_left_right": "Turtle %1: change wheels by left: %2 right: %3 %4",
    "roboid_turtle_clear_head_led": "Turtle %1: clear head led %2",
    "roboid_turtle_clear_sound": "Turtle %1: clear sound %2",
    "roboid_turtle_cross_intersection": "Turtle %1: cross black intersection %2",
    "roboid_turtle_follow_line": "Turtle %1: follow %2 line %3",
    "roboid_turtle_follow_line_until": "Turtle %1: follow black line until %2 %3",
    "roboid_turtle_follow_line_until_black": "Turtle %1: follow %2 line until black %3",
    "roboid_turtle_is_color_pattern": "Turtle %1: color pattern %2 %3 ?",
    "roboid_turtle_move_backward_unit": "Turtle %1: move backward %2 %3 %4",
    "roboid_turtle_move_forward_unit": "Turtle %1: move forward %2 %3 %4",
    "roboid_turtle_pivot_around_wheel_unit_in_direction": "Turtle %1: pivot around %2 wheel %3 %4 in %5 direction %6",
    "roboid_turtle_play_note": "Turtle %1: play note %2 %3 %4",
    "roboid_turtle_play_note_for_beats": "Turtle %1: play note %2 %3 for %4 beats %5",
    "roboid_turtle_play_sound_times": "Turtle %1: play sound %2 %3 times %4",
    "roboid_turtle_play_sound_times_until_done": "Turtle %1: play sound %2 %3 times until done %4",
    "roboid_turtle_rest_for_beats": "Turtle %1: rest for %2 beats %3",
    "roboid_turtle_set_buzzer_to": "Turtle %1: set buzzer to %2 %3",
    "roboid_turtle_set_following_speed_to": "Turtle %1: set following speed to %2 %3",
    "roboid_turtle_set_head_led_to": "Turtle %1: set head led to %2 %3",
    "roboid_turtle_set_head_led_to_rgb": "Turtle %1: set head led to r: %2 g: %3 b: %4 %5",
    "roboid_turtle_set_tempo_to": "Turtle %1: set tempo to %2 bpm %3",
    "roboid_turtle_set_wheel_to": "Turtle %1: set %2 wheel to %3 %4",
    "roboid_turtle_set_wheels_to_left_right": "Turtle %1: set wheels to left: %2 right: %3 %4",
    "roboid_turtle_stop": "Turtle %1: stop %2",
    "roboid_turtle_touching_color": "Turtle %1: touching %2 ?",
    "roboid_turtle_turn_at_intersection": "Turtle %1: turn %2 at black intersection %3",
    "roboid_turtle_turn_unit_in_place": "Turtle %1: turn %2 %3 %4 in place %5",
    "roboid_turtle_turn_unit_with_radius_in_direction": "Turtle %1: turn %2 %3 %4 with radius %5 cm in %6 direction %7",
    "roboid_turtle_value": "Turtle %1: %2",
    "turtle_button_state": "button %1 ?",
    "turtle_change_buzzer_by": "change buzzer by %1 %2",
    "turtle_change_head_led_by_rgb": "change head led by r: %1 g: %2 b: %3 %4",
    "turtle_change_tempo_by": "change tempo by %1 %2",
    "turtle_change_wheel_by": "change %1 wheel by %2 %3",
    "turtle_change_wheels_by_left_right": "change wheels by left: %1 right: %2 %3",
    "turtle_clear_head_led": "clear head led %1",
    "turtle_clear_sound": "clear sound %1",
    "turtle_cross_intersection": "cross black intersection %1",
    "turtle_follow_line": "follow %1 line %2",
    "turtle_follow_line_until": "follow black line until %1 %2",
    "turtle_follow_line_until_black": "follow %1 line until black %2",
    "turtle_is_color_pattern": "color pattern %1 %2 ?",
    "turtle_move_backward_unit": "move backward %1 %2 %3",
    "turtle_move_forward_unit": "move forward %1 %2 %3",
    "turtle_pivot_around_wheel_unit_in_direction": "pivot around %1 wheel %2 %3 in %4 direction %5",
    "turtle_play_note": "play note %1 %2 %3",
    "turtle_play_note_for_beats": "play note %1 %2 for %3 beats %4",
    "turtle_play_sound_times": "play sound %1 %2 times %3",
    "turtle_play_sound_times_until_done": "play sound %1 %2 times until done %3",
    "turtle_rest_for_beats": "rest for %1 beats %2",
    "turtle_set_buzzer_to": "set buzzer to %1 %2",
    "turtle_set_following_speed_to": "set following speed to %1 %2",
    "turtle_set_head_led_to": "set head led to %1 %2",
    "turtle_set_head_led_to_rgb": "set head led to r: %1 g: %2 b: %3 %4",
    "turtle_set_tempo_to": "set tempo to %1 bpm %2",
    "turtle_set_wheel_to": "set %1 wheel to %2 %3",
    "turtle_set_wheels_to_left_right": "set wheels to left: %1 right: %2 %3",
    "turtle_stop": "stop %1",
    "turtle_touching_color": "touching %1 ?",
    "turtle_turn_at_intersection": "turn %1 at black intersection %2",
    "turtle_turn_unit_in_place": "turn %1 %2 %3 in place %4",
    "turtle_turn_unit_with_radius_in_direction": "turn %1 %2 %3 with radius %4 cm in %5 direction %6",
    "turtle_value": "%1",
    "is_clicked": "%1",
    "is_press_some_key": "%1 %2",
    "reach_something": "%1 %2 %3",
    "boolean_comparison": "%1 %2 %3",
    "boolean_equal": "%1 %2 %3",
    "boolean_bigger": "%1 %2 %3",
    "boolean_smaller": "%1 %2 %3",
    "boolean_and_or": "%1 %2 %3",
    "boolean_and": "%1 %2 %3",
    "boolean_or": "%1 %2 %3",
    "boolean_not": "%1 %2 %3",
    "is_boost_mode": "%1",
    "true_or_false": "%1",
    "True": "%1",
    "False": "%1",
    "boolean_basic_operator": "%1 %2 %3",
    "show": "形を見せる %1",
    "hide": "形を隠す %1",
    "dialog_time": "%1を%2秒間 %3 %4",
    "dialog": "%1を%2 %3",
    "remove_dialog": "言った言葉を削除する %1",
    "change_to_nth_shape": "%1 の形に変える %2",
    "change_to_next_shape": "%1 の形に変える %2",
    "set_effect_volume": "%1 効果を %2 だけ加える %3",
    "set_effect": "%1 効果を%2 にする %3",
    "erase_all_effects": "効果をすべて削除する %1",
    "change_scale_percent": "サイズを%1だけ変更%2",
    "set_scale_percent": "サイズを%1 にする %2",
    "change_scale_size": "サイズを %1 だけ変える %2",
    "set_scale_size": "サイズを%1 にする %2",
    "flip_y": "形を左右反対にする %1",
    "flip_x": "形を上下反対にする %1",
    "set_object_order": "%1番目に上げる %2",
    "get_pictures": "%1",
    "change_to_some_shape": "%1 の形に変える %2",
    "add_effect_amount": "%1 効果を%2だけ加える %3",
    "change_effect_amount": "%1 効果を%2にする %3",
    "set_effect_amount": "%1 効果を%2だけ加える %3",
    "set_entity_effect": "%1 効果を%2にする %3",
    "change_object_index": "%1 送る %2",
    "move_direction": "移動方向に %1 だけ動く %2",
    "move_x": "x座標を %1 だけ変える %2",
    "move_y": "y座標を%1だけ変える%2",
    "locate_xy_time": "%1秒間 x: %2 y: %3 の位置に移動する %4",
    "rotate_by_angle": "オブジェクトを%1分回転する %2",
    "rotate_by_angle_dropdown": "%1分回転する %2",
    "see_angle": "移動方向を%1にする %2",
    "see_direction": "%1側を見る %2",
    "locate_xy": "x: %1 y: %2 の位置に移動する %3",
    "locate_x": "x: %1 の位置に移動する %2",
    "locate_y": "y: %1 の位置に移動する %2",
    "locate": "%1 の位置に移動する %2",
    "move_xy_time": "%1秒間 x: %2 y: %3 の分だけ動く %4",
    "rotate_by_angle_time": "オブジェクトを%1 秒間%2だけ回転する %3",
    "bounce_wall": "壁に着いたら、跳ね返る %1",
    "flip_arrow_horizontal": "矢印方向を左右入れ替える %1",
    "flip_arrow_vertical": "矢印方向を上下入れ替える %1",
    "see_angle_object": "%1 の方向へ向く %2",
    "see_angle_direction": "オブジェクトを%1にする %2",
    "rotate_direction": "移動方向を%1 だけ回転させる %2",
    "locate_object_time": "%1秒間%2 の位置に移動する %3",
    "rotate_absolute": "方向を%1にする %2",
    "rotate_relative": "向きを%1だけ回転させる %2",
    "direction_absolute": "移動方向を%1にする %2",
    "direction_relative": "移動方向を %1 だけ回転させる %2",
    "move_to_angle": "%1 の方向に %2 だけ動く %3",
    "rotate_by_time": "%1 秒間、向きを%2 だけ回転させる %3",
    "direction_relative_duration": "%1秒間、移動方向を %2 だけ回転させる %3",
    "neobot_sensor_value": "%1  값",
    "neobot_turn_left": "Rotate left motor %1 %2 %3",
    "neobot_stop_left": "Stop left motor %1",
    "neobot_turn_right": "Rotate right motor %1 %2 %3",
    "neobot_stop_right": "Stop right motor %1",
    "neobot_run_motor": "Run %1 motor for %2 secs",
    "neobot_servo_1": "Move the servo motor connected to SERVO1 to %2 with the speed of %1 %3",
    "neobot_servo_2": "Move the servo motor connected to SERVO2 to %2 with the speed of %1 %3",
    "neobot_play_note_for": "Play %1 melody to octave %2 as long as %3 %4",
    "neobot_set_sensor_value": "%1 value of the port to %2 %3",
    "robotis_openCM70_cm_custom_value": "Custom address ( %1 ) value %2",
    "robotis_openCM70_sensor_value": "Controller value %1",
    "robotis_openCM70_aux_sensor_value": "Value %1   %2",
    "robotis_openCM70_cm_buzzer_index": "Play %1 controller scale value for %2 seconds %3 ",
    "robotis_openCM70_cm_buzzer_melody": "Play controller melody %1 times %2",
    "robotis_openCM70_cm_sound_detected_clear": "Initialize the final number of sound detection  %1",
    "robotis_openCM70_cm_led": "Controller %1 LED %2 %3",
    "robotis_openCM70_cm_motion": "Play the motion %1 times",
    "robotis_openCM70_cm_autodrive_motor": "Autonomous driving car %1 motor uses %2 %3",
    "robotis_openCM70_cm_autodrive_ir": "Autonomous driving car %1 IR sensor uses %2 %3",
    "robotis_openCM70_cm_autodrive_speed": "Perform autonomous driving at the speed of %1 %2",
    "robotis_openCM70_aux_car_move": "Make the robot %2 at a speed of %1% %3",
    "robotis_openCM70_aux_motor_speed": "Set the speed of decelerating motor of %1 to %2 , and the output value to %3%  %4",
    "robotis_openCM70_aux_servo_mode": "Set the mode of %1 servo motor to %2  %3",
    "robotis_openCM70_aux_servo_speed": "Set the speed of servo motor of %1 to %2 , and the output value to %3%  %4",
    "robotis_openCM70_aux_servo_position": "Set the position of %1 servo motor to %2 degree %3",
    "robotis_openCM70_aux_led_module": "Set the LED module of %1 as %2  %3",
    "robotis_openCM70_aux_custom": "Set the user device of %1 as %2  %3",
    "robotis_openCM70_cm_poweroff_timer": "Set auto-off timer as %1 %2",
    "robotis_openCM70_cm_custom": "Set the custom address ( %1 ) as %2  %3",
    "robotis_carCont_sensor_value": "Value   %1",
    "robotis_carCont_cm_led": "%1 LED 4,  %2 LED %3",
    "robotis_carCont_cm_sound_detected_clear": "Initialize the final number of sound detection  %1",
    "robotis_carCont_aux_motor_speed": "Set the speed of decelerating motor of %1 to %2, and the output value to %3  %4",
    "robotis_carCont_cm_calibration": "Set %1 value of infrared sensor calibration to %2  %3",
    "roduino_get_analog_number": "%1",
    "roduino_get_port_number": "%1",
    "roduino_get_analog_value": "アナログ %1回センサー値  ",
    "roduino_get_digital_value": "デジタル %1回センサー値  ",
    "roduino_set_digital": "デジタル %1番ピン %2 %3",
    "roduino_motor": "%1 %2 %3",
    "roduino_set_color_pin": "カラーセンサー R : %1, G : %2, B : %3 %4",
    "roduino_get_color": "カラーセンサー%1 感知",
    "roduino_on_block": " On ",
    "roduino_off_block": " Off ",
    "schoolkit_get_in_port_number": "%1",
    "schoolkit_get_out_port_number": "%1",
    "schoolkit_get_servo_port_number": "%1",
    "schoolkit_get_input_value": "デジタル %1番センサー値  ",
    "schoolkit_set_output": "デジタル %1番ピン %2 %3",
    "schoolkit_motor": "%1速度%2で %3 %4",
    "schoolkit_set_servo_value": "サーボモーター %1番ピン %2˚ %3",
    "schoolkit_on_block": " On ",
    "schoolkit_off_block": " Off ",
    "when_scene_start": "%1 シーンが始まった時",
    "start_scene": "%1 スタート%2",
    "start_neighbor_scene": "%1 シーンスタート%2",
    "sound_something": "音 %1 を再生する %2",
    "sound_something_second": "音 %1 を %2秒再生する %3",
    "sound_something_wait": "音 %1 を再生して待つ %2",
    "sound_something_second_wait": "音 %1 を %2秒再生して待つ %3",
    "sound_volume_change": "音の大きさを %1 %大きくする %2",
    "sound_volume_set": "音の大きさを %1 %にする %2",
    "sound_silent_all": "すべての音を止める %1",
    "get_sounds": "%1",
    "sound_something_with_block": "音 %1 を再生する %2",
    "sound_something_second_with_block": "音 %1 を %2秒再生する %3",
    "sound_something_wait_with_block": "音 %1 を再生して待つ %2",
    "sound_something_second_wait_with_block": "音 %1 を %2 秒再生して待つ %3",
    "sound_from_to": "音 %1 を %2秒から%3秒まで再生する %4",
    "sound_from_to_and_wait": "音 %1 を %2秒から%3秒まで再生して待つ %4",
    "when_run_button_click": "%1 スタートボタンをクリックした時",
    "press_some_key": "%1 %2 キーを押した時 %3",
    "when_some_key_pressed": "%1 %2 キーを押した時",
    "mouse_clicked": "%1 マウスをクリックした時",
    "mouse_click_cancled": "%1 マウスをクリックして離した時",
    "when_object_click": "%1 オブジェクトをクリックした時",
    "when_object_click_canceled": "%1 オブジェクトをクリックして離した時",
    "when_some_key_click": "%1 キーを押した時",
    "when_message_cast": "%1 %2 信号を受け取った時",
    "message_cast": "%1 信号を送る %2",
    "message_cast_wait": "%1 信号を送って待つ %2",
    "text": "%1",
    "text_read": "Textbox %1’s contents",
    "text_write": "%1と書く %2",
    "text_append": "%1と後ろに続けて書く %2",
    "text_prepend": "%1と前に追加する %2",
    "text_flush": "テキストをすべて削除する %1",
    "analizyDataAddButton": "%1",
    "append_row_to_table": "Add a %2 to the table %1 %3",
    "insert_row_to_table": "Insert %3 to %2th row from the %1 %4",
    "delete_row_from_table": "Remove %2th %3 from table %1 %4",
    "set_value_from_table": "Change %3 in the %1 %2th row to %4 %5",
    "get_table_count": "length of %2 in the %1",
    "get_value_from_table": "value of the %3 in %2th row of the %1",
    "calc_values_from_table": "%3 of the %2 in the %1",
    "open_table_chart": "Open the chart of the %1 %2",
    "close_table_chart": "Close the table chart",
    "get_coefficient": 'Correlation coefficient between %2and %3 in table %1',
    "variableAddButton": "%1",
    "listAddButton": "%1",
    "change_variable": "%1 に %2 だけ足す %3",
    "set_variable": "%1を%2にする %3",
    "show_variable": "変数 %1 を見せる %2",
    "hide_variable": "変数 %1 を隠す %2",
    "get_variable": "%1 %2",
    "ask_and_wait": "%1 を聞いて答えを待つ %2",
    "get_canvas_input_value": "%1",
    "add_value_to_list": "%1 を %2 に追加する %3",
    "remove_value_from_list": "%1番目の項目を%2 から削除する %3",
    "insert_value_to_list": "%1を%2の%3番目に入れる %4",
    "change_value_list_index": "%1 の %2番目の項目を%3に変更する %4",
    "value_of_index_from_list": "%1 %2 %3 %4 %5",
    "length_of_list": "%1 %2 %3",
    "show_list": "リスト %1 を見せる %2",
    "hide_list": "リスト %1 を隠す %2",
    "options_for_list": "%1",
    "set_visible_answer": "答えを %1 %2",
    "is_included_in_list": "%1 %2 %3 %4 %5",
    "xbot_digitalInput": "%1",
    "xbot_analogValue": "%1",
    "xbot_digitalOutput": "Digital %1 PIN, Ouput Value %2 %3",
    "xbot_analogOutput": "Analog %1 %2 %3",
    "xbot_servo": "Servo Motor %1 , Angle %2 %3",
    "xbot_oneWheel": "Wheel(DC) Motor %1 , Speed %2 %3",
    "xbot_twoWheel": "Wheel(DC) Motor Right(2) Speed: %1 Left(1) Speed: %2 %3",
    "xbot_rgb": "RGB LED Color from Red %1 Green %2 Blue %3 %4",
    "xbot_rgb_picker": "RGB LED Color from %1   %2",
    "xbot_buzzer": "play note %1   %2 for %3 sec of Melody Playing %4",
    "xbot_lcd": "LCD %1 th Line ,  Text %2 %3",
    "run": " ",
    "mutant": "test mutant block",
    "jr_start": "%1",
    "jr_repeat": "%1 %2繰り返す",
    "jr_item": "花を集める %1",
    "cparty_jr_item": "鉛筆を拾う %1",
    "jr_north": "  上 %1",
    "jr_east": "右側%1",
    "jr_south": "  下 %1",
    "jr_west": "  左 %1",
    "jr_start_basic": "%1 %2",
    "jr_go_straight": "前に進む%1",
    "jr_turn_left": "左に回転する%1",
    "jr_turn_right": "右に回転する%1",
    "jr_go_slow": "ゆっくり進む %1",
    "jr_repeat_until_dest": "%1会うまで繰り返す %2",
    "jr_if_construction": "もし%1前にあるなら %2",
    "jr_if_speed": "もし%1前にあるなら %2",
    "maze_step_start": "%1 スタートをクリックした時",
    "maze_step_jump": "ジャンプする%1",
    "maze_step_jump2": "ジャンプする%1",
    "maze_step_jump_pinkbean": "ジャンプする%1",
    "maze_step_for": "%1回繰り返す%2",
    "test": "%1 this is test block %2",
    "maze_repeat_until_1": "%1 会うまで繰り返す%2",
    "maze_repeat_until_2": "すべての%1 会うまで繰り返す%2",
    "maze_step_if_1": "もし前に%1があるなら%2",
    "maze_step_if_2": "もし前に%1があるなら%2",
    "maze_call_function": "約束を読み込む%1",
    "maze_define_function": "約束する%1",
    "maze_step_if_3": "もし前に%1があるなら%2",
    "maze_step_if_4": "もし前に%1があるなら%2",
    "maze_step_move_step": "前に1マス移動%1",
    "maze_step_rotate_left": "左側に回転%1",
    "maze_step_rotate_right": "右側に回転%1",
    "maze_step_forward": "前に進む%1",
    "maze_turn_right": "右側を眺める%1",
    "maze_turn_left": "左側を眺める%1",
    "maze_ladder_climb": "はしごを使う%1",
    "maze_attack_lupin": "%1攻撃する%2",
    "maze_attack_both_side": "両隣を攻撃する%1",
    "maze_attack_pepe": "%1攻略する%2",
    "maze_attack_yeti": "%1攻略する%2",
    "maze_attack_mushroom": "%1攻略する%2",
    "maze_attack_peti": "%1攻略する%2",
    "maze_eat_item": "食べ物を食べる%1",
    "maze_step_if_mushroom": "もし1マス前に%1があるなら%2",
    "maze_step_if_yeti": "もし前に%1があるなら%2 %3そうでなければ",
    "maze_step_if_left_monster": "もし左側の攻撃範囲にモンスターがいるなら%1 %2そうでなければ",
    "maze_step_if_right_monster": "もし右側の攻撃範囲にモンスターがいるなら%1 %2そうでなければ",
    "maze_step_if_lupin": "もし2マス前に%1があるなら %2",
    "maze_step_if_else_road": "もし1マス前に道があるなら %1 %2ないなら",
    "maze_step_if_else_mushroom": "もし1マス前に%1があるなら%2 %3そうでなければ",
    "maze_step_if_else_lupin": "もし2マス前に%1があるなら%2 %3そうでなければ",
    "maze_step_if_else_ladder": "もし1マス前に%1があるなら%2 %3そうでなければ",
    "maze_rotate_left": "左に回転する%1",
    "maze_rotate_right": "右に回転する%1",
    "maze_moon_kick": "キックする%1",
    "maze_repeat_until_3": "%1に到着するまで繰り返す%2",
    "maze_repeat_until_4": "%1に到着するまで繰り返す%2",
    "maze_repeat_until_5": "%1に到着するまで繰り返す%2",
    "maze_repeat_until_6": "%1に到着するまで繰り返す%2",
    "maze_repeat_until_7": "%1に到着するまで繰り返す%2",
    "maze_repeat_until_goal": "目的地に到着するまで繰り返す%1",
    "maze_repeat_until_beat_monster": "すべてのモンスターをやっつけるまで繰り返す%1",
    "maze_radar_check": "%1に%2がある",
    "maze_cony_flower_throw": "花を投げる%1",
    "maze_brown_punch": "パンチを飛ばす%1",
    "maze_iron_switch": "障害物を動かす%1",
    "maze_james_heart": "ハートを飛ばす%1",
    "maze_step_if_5": "もし前に道がないなら%2",
    "maze_step_if_6": "もし前に%1がないなら%2",
    "maze_step_if_7": "もし前に%1があるなら%2",
    "maze_step_if_8": "もし%1なら%2",
    "maze_step_if_else": "もし%1なら%2 %3そうでなければ",
    "test_wrapper": "%1 this is test block %2",
    "basic_button": "%1",
    "ai_move_right": "前に進む %1",
    "ai_move_up": "上に行く %1",
    "ai_move_down": "下に行く %1",
    "ai_repeat_until_reach": "目的地に到達するまで繰り返す %1",
    "ai_if_else_1": "前に%1があるなら%2 %3そうでなければ",
    "ai_boolean_distance": "%1 レーダー%2 %3",
    "ai_distance_value": "%1 レーダー",
    "ai_boolean_object": "%1物体は%2か?",
    "ai_use_item": "アイテム使用 %1",
    "ai_boolean_and": "%1 %2 %3",
    "ai_True": "%1",
    "ai_if_else": "もし%1なら%2 %3そうでなければ",
    "smartBoard_convert_scale": "Map Value %1 %2 ~ %3 to %4 ~ %5",
    "smartBoard_get_named_sensor_value": "%1 Sensor value",
    "smartBoard_is_button_pressed": "Pressed %1 button?",
    "smartBoard_set_dc_motor_direction": "%1 DC Motor change direction %2 %3",
    "smartBoard_set_dc_motor_speed": "%1 DC Motor %2 %3",
    "smartBoard_set_dc_motor_pwm": "%1 DC Motor set speed %2 %3",
    "smartBoard_set_servo_speed": "%1 RC Servo Motor Speed %2 %3",
    "smartBoard_set_servo_angle": "%1 RC Servo Motor set angle %2 %3",
    "smartBoard_set_number_eight_pin": "%1 port %2 %3",
    "smartBoard_set_gs1_pwm": "GS1 port %1 %2",
    "robotori_digitalInput": "%1",
    "robotori_analogInput": "%1",
    "robotori_digitalOutput": "Digital %1 PIN, Output Value %2 %3",
    "robotori_analogOutput": "Analog %1 %2 %3",
    "robotori_servo": "Servo Motor Angle %1 %2",
    "robotori_dc_direction": "DC Motor %1 Direction %2 %3",
    "dadublock_get_analog_value": "Analog %1 Sensor value",
    "dadublock_get_analog_value_map": "Map Value %1 %2 ~ %3 to %4 ~ %5  ",
    "dadublock_get_ultrasonic_value": "Read ultrasonic sensor trig pin %1 echo pin %2",
    "dadublock_toggle_led": "Digital %1 Pin %2 %3",
    "dadublock_digital_pwm": "Digital %1 Pin %2 %3",
    "dadublock_set_tone": "Play tone pin %1 on note %2 octave %3 beat %4 %5",
    "dadublock_set_servo": "Set servo pin %1 angle as %2 %3",
    "coconut_stop_motor": "stop motor %1",
    "coconut_move_motor": "move %1 %2",
    "coconut_turn_motor": "turn %1 %2",
    "coconut_move_for_secs": "move %1 for time %2 %3",
    "coconut_turn_for_secs": "turn %1 for %2 secs %3",
    "coconut_turn_to_led": "turn %1 RGB %2 %3",
    "coconut_move_outmotor": "external Motor %1 speed %2 %3",
    "coconut_set_led_to": "turn on RGB %1 %2 %3",
    "coconut_clear_led": "turn off RGB %1 %2",
    "coconut_set_led_clear": "turn off RGB %1 %2 %3",
    "coconut_set_led_time": "turn on RGB %1 %2 for time %3 %4",
    "coconut_beep": "buzzer on %1",
    "coconut_buzzer_time": "play buzzer for time %1 %2",
    "coconut_buzzer_set_hz": "play buzzer on frequency %1 Hz for time %2 %3",
    "coconut_clear_buzzer": "buzzer off %1",
    "coconut_play_buzzer": "play buzzer on note %1 octave %2 %3 beat %4 %5",
    "coconut_rest_buzzer": "rest beat %1 %2",
    "coconut_play_buzzer_led": "play buzzer on note %1 octave %2 %3 beat %4 RGB %5 %6 %7",
    "coconut_play_midi": "play melody %1 %2",
    "coconut_floor_sensor": "line tracer %1",
    "coconut_floor_sensing": "line tracer detect %1 %2",
    "coconut_following_line": "follow the line %1",
    "coconut_front_sensor": "IR distance sensor %1",
    "coconut_front_sensing": "detecting obstacle %1 %2",
    "coconut_obstruct_sensing": "detecting obstacle",
    "coconut_avoid_mode": "avoid mode %1",
    "coconut_dotmatrix_set": "LED Matrix %1 ( ROW %2, COL %3 ) %4",
    "coconut_dotmatrix_on": "turn on all LED Matrix %1",
    "coconut_dotmatrix_off": "LED Matrix clear all %1",
    "coconut_dotmatrix_num": "LED Matrix show %1 %2",
    "coconut_dotmatrix_small_eng": "LED Matrix show small letter %1 %2",
    "coconut_dotmatrix_big_eng": "LED Matrix show capital letters %1 %2",
    "coconut_dotmatrix_kor": "LED Matrix show Korean %1 %2",
    "coconut_light_sensor": "light sensor",
    "coconut_tem_sensor": "temperature",
    "coconut_ac_sensor": "3-Axis Accelerometer %1 angle",
    "coconut_outled_sensor": "set external LED pin %1 for time %2 %3",
    "coconut_outspk_sensor": "set Speaker pin %1 frequency %2 (Hz) duration %3 seconds %4",
    "coconut_outspk_sensor_off": "stop Speaker pin %1 %2",
    "coconut_outinfrared_sensor": "external IR sensor %1",
    "coconut_outcds_sensor": "external Cds sensor %1",
    "coconut_servomotor_angle": "set servo pin %1 angle as %2 %3",
    "chocopi_control_button": "%1 controller %2 is pressed",
    "chocopi_control_event": "%1 When %2 controller %3 is %4",
    "chocopi_control_joystick": "%1 controller %2 value",
    "chocopi_dc_motor": "%1 DC motor #%2  %3 % direction %4 %5",
    "chocopi_led": "%1 LED #%2 RGB(%3 %4 %5) %6",
    "chocopi_motion_photogate_event": "%1 When %2 photogate %3 is %4",
    "chocopi_motion_photogate_status": "%1 photogate #%2 is blocked",
    "chocopi_motion_photogate_time": "time when %1 photogate %2 was %3",
    "chocopi_motion_value": "%1 motion %2 value",
    "chocopi_sensor": "%1 sensor %2",
    "chocopi_servo_motor": "%1 set servo motor #%2 %3 degree %4",
    "chocopi_touch_event": "%1 When %2 touch pad%3 is %4",
    "chocopi_touch_status": "%1 touch pad%2 is touched",
    "chocopi_touch_value": "%1 touch pad%2 value",
    "dadublock_car_digital_pwm": "디지털 %1 번 핀을 %2 (으)로 정하기 %3",
    "dadublock_car_get_analog_value": "아날로그 %1 번 센서값",
    "dadublock_car_get_analog_value_map": "아날로그 %1번 센서값의 범위를 %2 ~ %3 에서 %4 ~ %5 (으)로 바꾼값  ",
    "dadublock_car_get_digital": "디지털 %1 번 센서값",
    "dadublock_car_get_irsensor": "적외선 %1 번 센서값",
    "dadublock_car_get_ultrasonic_value": "울트라소닉 Trig %1번핀 Echo %2번핀 센서값",
    "dadublock_car_motor": "모터 %1 번을 %2 (으)로 %3 %의 속도로 움직이기 %4",
    "dadublock_car_motor_stop": "모터 %1 번 멈추기 %2",
    "dadublock_car_set_servo": "서보모터 %1 번 핀을 %2 의 각도로 정하기 %3",
    "dadublock_car_set_tone": "디지털 %1 번 핀 을 %2 음으로 %3의 옥타브로 %4 만큼 연주하기 %5",
    "dadublock_car_toggle_led": "디지털 %1 번 핀 %2 %3",
    "dadublock_get_digital": "디지털 %1 번 센서값",
    "ev3_get_sensor_value": "%1's value",
    "ev3_touch_sensor": "%1's touch sensor activted?",
    "ev3_color_sensor": "%1's %2 value",
    "ev3_motor_power": "%1's value print as %2 %3",
    "ev3_motor_power_on_time": "%1's value for %2seconds %3 printed %4",
    "ev3_motor_degrees": "%1's value in %2 direction turn %3 degrees %4",
    "rokoboard_get_sensor_value_by_name": "%1 value",
    "ardublock_digital_pwm": "Digital %1 Pin %2 %3",
    "ardublock_get_analog_value": "Analog %1 Sensor value",
    "ardublock_get_analog_value_map": "Map Value %1 %2 ~ %3 to %4 ~ %5",
    "ardublock_get_digital": "Digital %1 Sensor value",
    "ardublock_get_left_cds_analog_value": "Left CDS %1 Sensor value",
    "ardublock_get_right_cds_analog_value": "Left CDS  %1 Sensor value",
    "ardublock_get_sound_analog_value": "Analog Sound %1 Sensor value",
    "ardublock_get_ultrasonic_value": "Read ultrasonic sensor trig pin %1 echo pin %2",
    "ardublock_set_left_motor": "Left motor direction to %1 speed %2 set %3",
    "ardublock_set_right_motor": "Right motor direction to %1 speed %2 set %3",
    "ardublock_set_servo": "Set servo pin %1 angle as %2 %3",
    "ardublock_set_tone": "Play tone pin %1 on note %2 octave %3 beat %4 %5",
    "ardublock_toggle_led": "Digital %1 Pin %2 %3",
    "ardublock_toggle_left_led": "Left Light %1 Pin %2 %3",
    "ardublock_toggle_right_led": "Right Light %1 Pin %2 %3",
    "mkboard_digital_pwm": "Digital %1 Pin %2 %3",
    "mkboard_get_analog_value": "Analog %1 Sensor value",
    "mkboard_get_analog_value_map": "Map Value %1 %2 ~ %3 to %4 ~ %5",
    "mkboard_get_digital": "Digital %1 Sensor value",
    "mkboard_get_ultrasonic_value": "Read ultrasonic sensor trig pin %1 echo pin %2",
    "mkboard_set_servo": "Set servo pin %1 angle as %2 %3",
    "mkboard_set_tone": "Play tone pin %1 on note %2 octave %3 beat %4 %5",
    "mkboard_toggle_led": "Digital %1 Pin %2 %3",
    "mkboard_set_lcd": "1602 LCD Row %1, Column %2 Value %3 %4",
    "mkboard_lcd_command": "1602 LCD Command %1 execute %2",
    "altino_analogValue": "altino %1 sensor value",
    "altino_dot_display": "electronic scoreboard %1 display %2",
    "altino_dot_display_line": "1col %1 2col %2 3col %3 4col %4 5col %5 6col %6 7col %7 8col %8 display %9",
    "altino_light": "%1 light %2  %3",
    "altino_rear_wheel": "rear motor right %1 left %2 setting %3",
    "altino_sound": "%1 octave %2 play  %3",
    "altino_steering": "direction %1 setting %2",
    "jdkit_altitude": "드론을 %1 높이만큼 날리기 %2",
    "jdkit_button": "%1번 버튼 값 읽어오기",
    "jdkit_connect": "드론 연결 상태 읽어오기",
    "jdkit_emergency": "드론을 즉시 멈추기 %1",
    "jdkit_gyro": "보드 %1 기울기 값 읽어오기",
    "jdkit_joystick": "조이스틱 %1 읽기",
    "jdkit_led": "%1 LED %2  %3",
    "jdkit_motor": "%1 모터를 %2 세기로 돌리기 %3",
    "jdkit_ready": "드론 비행 준비 상태 읽어오기",
    "jdkit_rollpitch": "드론을 %1 방향 %2 세기로 움직이기 %3",
    "jdkit_throttle": "드론 프로펠러를 %1 만큼 세기로 돌리기 %2",
    "jdkit_tune": "%1 음을  %2 초동안 소리내기 %3",
    "jdkit_ultrasonic": "거리(초음파)값 읽어오기",
    "jdkit_yaw": "드론을 %1 만큼 회전하기 %2",
    "memaker_digital_pwm": "Digital %1 Pin %2 %3",
    "memaker_get_analog_value": "Analog %1 Sensor value",
    "memaker_get_analog_value_map": "Map Value %1 %2 ~ %3 to %4 ~ %5",
    "memaker_get_digital": "Digital %1 Sensor value",
    "memaker_get_ultrasonic_value": "Read ultrasonic sensor trig pin %1 echo pin %2",
    "memaker_set_lcd": "1602 LCD Row %1, Column %2 Value %3 %4",
    "memaker_set_servo": "Set servo pin %1 angle as %3",
    "memaker_toggle_led": "Digital %1 Pin %2 %3",
    "memaker_lcd_command": "1602 LCD Command %1 execute %2",
    "edumaker_digital_pwm": "디지털 %1 번 핀을 %2 (으)로 정하기 %3",
    "edumaker_get_analog_value": "아날로그 %1 번 센서값",
    "edumaker_get_analog_value_map": "%1 의 범위를 %2 ~ %3 에서 %4 ~ %5 로 바꾼값",
    "edumaker_get_digital": "디지털 %1 번 센서값",
    "edumaker_get_ultrasonic_value": "울트라소닉 Trig %1 Echo %2 센서값",
    "edumaker_set_servo": "디지털 %1 번 핀의 서보모터를 %2 의 각도로 정하기 %3",
    "edumaker_set_tone": "디지털 %1 번 핀의 버저를 %2 %3 음으로 %4 초 연주하기 %5",
    "edumaker_toggle_led": "디지털 %1 번 핀 %2 %3",
    "creamo_get_number_sensor_value": "PWM_Block %1 Sensor value",
    "creamo_get_port_number": "%1",
    "creamo_get_pwm_port_number": "%1",
    "creamo_motor_port_number": "%1",
    "creamo_toggle_led": "LED_Block %1 Pin %2 %3",
    "creamo_toggle_motor": "Motor_Block %1 pin %2 %3",
    "creamo_toggle_pwm": "Digital %1 Pin %2 %3",
    "mechatro_get_dc_motor_current": "Get 1%motor current",
    "mechatro_get_digital": "%1",
    "mechatro_get_sensor_value": "Analog %1 Sensor value",
    "mechatro_get_ultrasonic_value": "Read ultrasonic sensor trig pin %1 echo pin %2",
    "mechatro_set_blue_pw": "Change PW of Bluetooth to %1%2%3%4 %5",
    "mechatro_set_dc_motor": "Set %1 motor speed to %2 %3",
    "mechatro_set_digital": "Digital %1 Pin %2 %3",
    "mechatro_set_pwm": "Digital %1 Pin %2 %3",
    "mechatro_set_servo_position": "Set servo pin %1 angle as %2 %3",
    "mechatro_set_servo_speed": "Set servo pin %1 speed %2 degree per second %3",
    "mechatro_set_threshold": "Set %1 threshold : %2%3",
    "mechatro_set_tone": "Play tone pin %1 on note %2 octave %3 %4",
    "mechatro_set_tone_time": "Play tone pin %1 on note %2 octave %3 beat %4 %5",
    "funboard_buzzer_onoff": "buzzer %1 %2",
    "funboard_buzzer_second": "buzzer%1%2seconds%3",
    "funboard_buzzer_tone_simple": "play note%1%2,%3sec of Melody Playing%4",
    "funboard_color_led_on_pwm": "%1COLOR  LED %2 % %3",
    "funboard_color_led_onoff": "%1COLOR  LED %2 %3",
    "funboard_convert_scale": "Convert %1 value from %2~%3 to %4~%5",
    "funboard_dotmatrix_1column": "%1column %2set %3",
    "funboard_dotmatrix_1row": "%1row %2set %3",
    "funboard_dotmatrix_1row_1column": "%1%2 %3set %4",
    "funboard_dotmatrix_64_display": "%1 (8x8)display%2",
    "funboard_dotmatrix_big_eng": "capital letters %1 %2",
    "funboard_dotmatrix_char_display": "char%1display%2",
    "funboard_dotmatrix_extra_char": "char %1 %2",
    "funboard_dotmatrix_intensity": "Intensity %1% %2",
    "funboard_dotmatrix_kor": "∷∷  korean %1 %2",
    "funboard_dotmatrix_num": "number %1 %2",
    "funboard_dotmatrix_onoff": "turn all %1 %2",
    "funboard_dotmatrix_scroll_option": "scroll direction%1%2",
    "funboard_dotmatrix_scroll_rapid": "scroll rapid %1% %2",
    "funboard_dotmatrix_set": "%1row %2column  %3 %4",
    "funboard_dotmatrix_small_eng": "small letter %1 %2",
    "funboard_dotmatrix_string_display": "string%1display%2",
    "funboard_dotmatrix_string_display_scroll": "string%1display%2scroll%3",
    "funboard_dotmatrix_symbol": "symbol %1 %2",
    "funboard_get_analog_sensor_2state": "%1 value %2",
    "funboard_get_digital_button_value": "%1 button value",
    "funboard_get_number_sensor_value": "%1 value",
    "funboard_get_touch_button_value": "%1 touch button value",
    "funboard_set_digital_buzzer": "Play tone octave %1 note %2 beat %3 %4",
    "funboard_what_button_pressed": "%1 button pressed.",
    "funboard_what_touch_button_pressed": "%1 touch button pressed."
};
Lang.TextCoding = {
    "block_name": "ブロック名",
    "title_syntax": "文法エラー",
    "title_converting": "変換エラー",
    "message_syntax_default": "文法にエラーがあります",
    "message_syntax_unexpected_token": "文法に合わないトークンが含まれています",
    "message_syntax_reserved_token": "使用できない変数名です。",
    "message_syntax_reserved_token_list": "使用できないリスト名です。",
    "message_syntax_unexpected_character": "文法に合わない文字が含まれています",
    "message_syntax_unexpected_indent": "文法に合わない分かち書きが含まれています",
    "message_conv_default": "このコードには対応していません",
    "message_conv_no_support": "変換できないコードです",
    "message_conv_no_variable": "変数が宣言されませんでした",
    "message_conv_no_list": "リストが宣言されませんでした",
    "message_conv_no_object": "オブジェクトには対応していません",
    "message_conv_no_function": "関数は変換できません。",
    "message_conv_no_entry_event_function": "エントリーイベント関数は他の関数の中に存在できません。",
    "message_conv_undefined_function": "定義されていない命令です。命令が正しく入力されているか確認してください。",
    "message_conv_is_expect1": "正しくない文法です。",
    "message_conv_is_expect2": " が正しく入力されているか確認してください。",
    "message_conv_instead": "正しくない文法です。%1の代わりに%2が必要です。",
    "message_conv_is_wrong1": "正しくない文法です。",
    "message_conv_is_wrong2": "は来られない位置です。",
    "message_conv_or": " 私",
    "subject_syntax_default": "その他",
    "subject_syntax_token": "トークン",
    "subject_syntax_character": "文字",
    "subject_syntax_indent": "分かち書き",
    "subject_conv_default": "その他",
    "subject_conv_general": "一般",
    "subject_conv_variable": "変数",
    "subject_conv_list": "リスト",
    "subject_conv_object": "オブジェクト",
    "subject_conv_function": "関数",
    "alert_variable_empty_text": "登録された変数の中にスペース(分かち書き)が含まれる変数がある場合、モード変換できません。",
    "alert_list_empty_text": "登録されたリストの中にスペース(分かち書き)が含まれるリストがある場合、モード変換できません。",
    "alert_function_name_field_multi": "登録された関数の中に関数名に[名前]ブロックが2回以上含まれている場合、モード変換できません。",
    "alert_function_name_disorder": "登録された関数の中で[名前]ブロックが[文字/数字値]または[判断値]ブロックより後に書かれる場合、モード変換できません。",
    "alert_function_has_boolean": "エントリーパイソンに変換後、再びブロックモードに切り替えると関数に使われた「判断値」はすべて「文字／数字の値」に変わります。",
    "alert_function_editor": "関数作成及び編集中にはモード変換できません。",
    "alert_function_no_support": "テキストモードでは関数を作成・編集することができません。",
    "alert_list_no_support": "テキストモードではリストを作成・編集することができません。",
    "alert_variable_no_support": "テキストモードでは変数を作成・編集することができません。",
    "alert_signal_no_support": "テキストモードでは信号を作成・編集することができません。",
    "alert_legacy_no_support": "切り替えられないブロックが存在するため、モード変換できません。",
    "alert_variable_empty_text_add_change": "変数名にスペース(分かち書き)を含めることはできません。",
    "alert_list_empty_text_add_change": "リスト名にスペース(分かち書き)を含めることはできません。",
    "alert_list_contains_exceed_length_value": "リスト項目に15桁の以上の数が入力されている場合、モード変換できません。",
    "alert_function_name_empty_text_add_change": "関数名にスペース(分かち書き)を含めることはできません。",
    "alert_no_save_on_error": "文法エラーが存在しているため作品を保存できません。",
    "alert_api_no_support": "作品に拡張ブロックが使用されている場合には、エントリーパイソンモードに変更することができません。",
    "warn_unnecessary_arguments": "&(calleeName)();は括弧の間に値が入力される必要がないコマンドです。(line:&(lineNumber))",
    "python_code": " オブジェクトのパイソンコード",
    "eof": "改行",
    "newline": "改行",
    "indent": "インデント",
    "num": "数字",
    "string": "文字列",
    "name": "変数名"
};
Lang.PythonHelper = {
    "when_run_button_click_desc": "[スタート]ボタンをクリックすると下のコマンドを実行します。<br>下のコマンドは[Tab]キーを用いてインデントを作成します。",
    "when_run_button_click_exampleCode": "def when_start():\n    Entry.print(\"やあ!\")",
    "when_run_button_click_exampleDesc": "[スタート]ボタンをクリックすると、オブジェクトが\"やあ!\"と話します。",
    "when_some_key_pressed_desc": "Aキーを押すと下のコマンドを実行します。<br>下のコマンドは[Tab]キーを用いてインデントを作成します。",
    "when_some_key_pressed_elements": "A-- 次の選択肢のうち一つ<br>① アルファベット : \"A\", \"B\" ~ \"Z\"など(小文字可能)<br>② 数字: 1, 2, 3, 4 ~ 9, 0<br>③ 特殊キー: \"space\", \"enter\"<br>④ 方向キー : \"up\", \"down\", \"right\", \"left\"",
    "when_some_key_pressed_exampleCode": "def when_press_key(\"W\"):\n    Entry.move_to_direction(10)\n\ndef when_press_key(1):\n    Entry.add_size(10)",
    "when_some_key_pressed_exampleDesc": "Wキーを押すとオブジェクトが移動方向に10移動し、1キーを押すとオブジェクトのサイズが10大きくなります。",
    "mouse_clicked_desc": "マウスをクリックした時、下のコマンドを実行します。<br>下のコマンドは[Tab]キーを用いてインデントを作成します。",
    "mouse_clicked_exampleCode": "def when_click_mouse_on():\n    Entry.add_size(10)\n    Entry.move_to_direction(10)",
    "mouse_clicked_exampleDesc": "マウスをクリックすると、オブジェクトのサイズが10だけ大きくなり、移動方向に10移動します。",
    "mouse_click_cancled_desc": "マウスクリックを解除した時、下のコマンドを実行します。<br>下のコマンドは[Tab]キーを用いてインデントを作成します。",
    "mouse_click_cancled_exampleCode": "def when_click_mouse_off():\n    Entry.move_to_direction(-10)\n\ndef when_click_mouse_on():\n    Entry.move_to_direction(10)",
    "mouse_click_cancled_exampleDesc": "マウスをクリックするとオブジェクトが移動方向に10移動し、マウスクリックを解除するとオブジェクトが移動方向に-10移動します。",
    "when_object_click_desc": "当該オブジェクトをクリックした時、下のコマンドを実行します。<br>下のコマンドは[Tab]キーを用いてインデントを作成します。",
    "when_object_click_exampleCode": "def when_click_object_on():\n    Entry.print_for_sec(\"回転!\", 0.5)\n    Entry.add_rotation(90)",
    "when_object_click_exampleDesc": "オブジェクトをクリックすると、オブジェクトが\"回転!\"と話し、90度回転します。",
    "when_object_click_canceled_desc": "当該オブジェクトクリックを解除した時、下のコマンドを実行します。<br>下のコマンドは[Tab]キーを用いてインデントを作成します。",
    "when_object_click_canceled_exampleCode": "def when_click_object_on():\n    Entry.add_rotation(90)\n\ndef when_click_object_off():\n    Entry.add_rotation(-90)",
    "when_object_click_canceled_exampleDesc": "オブジェクトをクリックするとオブジェクトが90度回転し、オブジェクトクリックを解除するとオブジェクトが-90度回転します。",
    "when_message_cast_desc": "A信号を受信すると下のコマンドを実行します。<br>下のコマンドは[Tab]キーを用いてインデントを作成します。<br>もしA信号がなければ[属性]タブにA信号が自動作成されます。",
    "when_message_cast_elements": "A-- \"信号名\"",
    "when_message_cast_exampleCode": "def when_click_mouse_on():\n    Entry.send_signal(\"信号\")\n\ndef when_get_signal(\"信号\"):\n    Entry.print_for_sec(\"やあ! 嬉しいな\", 0.5)",
    "when_message_cast_exampleDesc": "マウスをクリックすると\"信号\"を送り、\"信号\"を受信した時、\"やあ! 嬉しいな\"と0.5秒間話します。",
    "message_cast_desc": "Aに入力された信号を送ります。<br>もしA信号がなければ[属性]タブにA信号が自動作成されます。",
    "message_cast_elements": "A-- \"信号名\"",
    "message_cast_exampleCode": "#\"オブジェクト1\"のパイソンコード\ndef when_start():\n    Entry.print_for_sec(\"やあ! 君は何歳なの?\", 2)\n    Entry.send_signal(\"信号\")\n\n#\"オブジェクト2\"のパイソンコード\ndef when_get_signal(\"信号\"):\n    Entry.print_for_sec(\"やあ。僕は3歳だよ。\", 2)",
    "message_cast_exampleDesc": "[スタート]ボタンをクリックすると\"オブジェクト1\"が\"やあ! 君は何歳なの?\"と2秒間話し\"信号を送ります。, \"オブジェクト2\"が\"信号\"を受信した時、\"やあ。僕は3歳だよ。\"と2秒間話します。",
    "message_cast_wait_desc": "Aに入力された信号を送り、その信号を受信したコマンドの実行が終了するまで待機します。<br>もしA信号がなければ[属性]タブにA信号が自動作成されます。",
    "message_cast_wait_elements": "A-- \"信号名\"",
    "message_cast_wait_exampleCode": "#\"オブジェクト1\"のパイソンコード\ndef when_start():\n    Entry.print_for_sec(\"かくれんぼしようよ!\", 2)\n    Entry.send_signal_wait(\"信号\")\n    Entry.hide()\n\n#\"オブジェクト2\"のパイソンコード\ndef when_get_signal(\"信号\"):\n    Entry.print_for_sec(\"いいよ!\", 2)",
    "message_cast_wait_exampleDesc": "[スタート]ボタンをクリックすると\"オブジェクト1\"が\"かくれんぼしようよ!\"と2秒間話して\"信号\"を送信してから待機します。\"オブジェクト2\"が\"信号\"を受信すると\"いいよ!\"を2秒間話します。\"オブジェクト1\"がその後に模様を隠します。",
    "when_scene_start_desc": "シーンが始まると下のコマンドを実行します。<br>下のコマンドは[Tab]キーを用いてインデントを作成します。",
    "when_scene_start_exampleCode": "#\"シーン 1\"のパイソンコード\ndef when_start():\n    Entry.print_for_sec(\"他の場所に行こうか?\", 2)\n    Entry.start_scene(\"シーン 2\")\n\n#\"シーン 2\"のパイソンコード\ndef when_start_scene():\n    Entry.print(\"ここはどこだろう?\")",
    "when_scene_start_exampleDesc": "\"シーン1\"で[スタート]ボタンをクリックすると\"他の場所に行こうか?\"と2秒間話し、\"シーン2\"が始まります。\"シーン2\"が始まるとオブジェクトが\"ここはどこだろう?\"と話します。",
    "start_scene_desc": "A シーンを始めます。",
    "start_scene_elements": "A-- \"シーン名\"",
    "start_scene_exampleCode": "#\"シーン1\"のパイソンコード\ndef when_click_object_on():\n    Entry.start_scene(\"シーン2\")",
    "start_scene_exampleDesc": "\"シーン1\"で当該オブジェクトをクリックすると、\"シーン 2\"が始まります。",
    "start_neighbor_scene_desc": "Aに入力した次または前のシーンを始めます。",
    "start_neighbor_scene_elements": "A-- 次の選択肢のうち一つ<br>① 次のシーン: \"next\"または\"次\"<br>② 前のシーン: \"prev\"または\"前\"",
    "start_neighbor_scene_exampleCode": "#\"シーン 1\"のパイソンコード\ndef when_press_key(\"right\"):\n    Entry.start_scene_of(\"next\")\n\n#\"シーン 2\"のパイソンコード\ndef when_press_key(\"left\"):\n    Entry.start_scene_of(\"prev\")",
    "start_neighbor_scene_exampleDesc": "\"シーン 1\"で右方向キーを押すと次のシーンが、\"シーン2\"で左方向キーを押すと前のシーンが始まります。",
    "wait_second_desc": "A秒待機後、次のブロックを実行します。",
    "wait_second_elements": "A-- 秒に該当する数を入力",
    "wait_second_exampleCode": "def when_start():\n    Entry.add_effect(\"color\", 10)\n    Entry.wait_for_sec(2)\n    Entry.add_size(10)",
    "wait_second_exampleDesc": "[スタート]ボタンをクリックするとオブジェクトに色効果を10だけ与え、2秒間待機した後にサイズを10だけ大きくします。",
    "repeat_basic_desc": "下のコマンドをA回繰り返して実行します。<br>下のコマンドは[Tab]キーを用いてインデントを作成します。",
    "repeat_basic_elements": "A-- 繰り返し回数入力",
    "repeat_basic_exampleCode": "def when_start():\n    for i in range(10):\n        Entry.move_to_direction(10)\n        Entry.stamp()",
    "repeat_basic_exampleDesc": "[スタート]ボタンをクリックすると、オブジェクトが移動方向に10移動し、スタンプを押す行動を10回繰り返します。",
    "repeat_inf_desc": "A 判断がTrueの間、下のコマンドを繰り返し実行します。AにTrueを入力すると続けて繰り返されます。<br>下のコマンドは[Tab]キーを用いてインデントを作成します。",
    "repeat_inf_elements": "A-- TrueまたはFalseと判断できるコマンド入力(判断カテゴリーのコマンド)<br>① True, False<br>② 10 == 10 , 10 > 10 , 10 <= 10など<br>③ Entry.is_mouse_clicked(), Entry.is_key_pressed(\"Q\")など",
    "repeat_inf_exampleCode": "def when_start():\n    while True:\n        Entry.move_to_direction(10)\n        Entry.bounce_on_edge()",
    "repeat_inf_exampleDesc": "[スタート]ボタンをクリックするとオブジェクトが続けて移動方向に10移動し、壁にぶつかると弾かれます。",
    "repeat_while_true_desc": "A判断がTrueになるまで下のコマンドを繰り返し実行します。<br>下のコマンドは[Tab]キーを用いてインデントを作成します。",
    "repeat_while_true_elements": "A-- TrueまたはFalseと判断できるコマンド入力(判断カテゴリーのコマンド)<br>① True, False<br>② 10 == 10 , 10 > 10 , 10 <= 10など<br>③ Entry.is_mouse_clicked(), Entry.is_key_pressed(\"Q\")など",
    "repeat_while_true_exampleCode": "def when_start():\n    while not Entry.is_key_pressed(\"space\"):\n        Entry.add_rotation(90)",
    "repeat_while_true_exampleDesc": "[スタート]ボタンをクリックすると、スペースキーを押す時までオブジェクトが90度回転します。",
    "stop_repeat_desc": "このコマンドと最も近いリピートコマンドの繰り返しを中断します。",
    "stop_repeat_exampleCode": "def when_start():\n    while True:\n        Entry.move_to_direction(10)\n        if Entry.is_key_pressed(\"enter\"):\n            break",
    "stop_repeat_exampleDesc": "[スタート]ボタンをクリックするとオブジェクトが移動方向に10だけ継けて移動します。エンターキーを押すと繰り返しが中断されます。",
    "_if_desc": "A部分の判断がTrueならif A:下のコマンドを実行し、Falseなら実行しません。<br>下のコマンドは[Tab]キーを用いてインデントを作成します。",
    "_if_elements": "A-- TrueまたはFalseと判断できるコマンド入力(判断カテゴリーのコマンド)<br>① True, False<br>② 10 == 10 , 10 > 10 , 10 <= 10など<br>③ Entry.is_mouse_clicked(), Entry.is_key_pressed(\"Q\")など",
    "_if_exampleCode": "def when_click_mouse_on():\n    if (Entry.value_of_mouse_pointer(\"x\") > 0):\n        Entry.print_for_sec(\"右側!\", 0.5)",
    "_if_exampleDesc": "マウスをクリックした時、マウスのx座標が0より大きければオブジェクトが\"右側!\"と0.5秒間話します。",
    "if_else_desc": "A部分の判断がTrueならif A: 下のコマンドを実行し、Falseならelse: 下のコマンドを実行します。<br>下のコマンドは[Tab]キーを用いてインデントを作成します。",
    "if_else_elements": "A-- TrueまたはFalseと判断できるコマンド入力(判断カテゴリーのコマンド)<br>① True, False<br>② 10 == 10 , 10 > 10 , 10 <= 10など<br>③ Entry.is_mouse_clicked(), Entry.is_key_pressed(\"Q\")など",
    "if_else_exampleCode": "def when_click_mouse_on():\n    if Entry.is_touched(\"mouse_pointer\"):\n        Entry.print(\"触れた!\")\n    else:\n        Entry.print(\"触れなかった!\")",
    "if_else_exampleDesc": "マウスをクリックした時マウスポインターがオブジェクトに触れると\"触れた!\"を、そうでない時は\"触れなかった!\"と話します。",
    "wait_until_true_desc": "A部分の判断がTrueになるまでコードの実行を中断して待機します。",
    "wait_until_true_elements": "A-- TrueまたはFalseと判断できるコマンド入力(判断カテゴリーのコマンド)<br>① True, False<br>② 10 == 10 , 10 > 10 , 10 <= 10など<br>③ Entry.is_mouse_clicked(), Entry.is_key_pressed(\"Q\")など",
    "wait_until_true_exampleCode": "def when_start():\n    Entry.print(\"エンターを押してみて!\")\n    Entry.wait_until(Entry.is_key_pressed(\"enter\"))\n    Entry.print(\"うまいね!\")",
    "wait_until_true_exampleDesc": "[スタート]ボタンをクリックするとオブジェクトが\"エンターを押してみて!\"と話し、エンターキーを押す時まで待機します。エンターキーを押すと\"うまいね!\"と話します。",
    "stop_object_desc": "Aコードの実行を中断します。",
    "stop_object_elements": "A-- 次の選択肢のうち1つ<br>① \"all\":  すべてのオブジェクトのすべてのコード<br>② \"self\" : 当該オブジェクトのすべてのコード<br>③ \"this\": このコマンドが含まれたコード<br>④ \"others\" : 当該オブジェクトのコードのうち、このコマンドが含まれたコードを除くすべてのコード<br/>⑤ \"ohter_objects\" : このオブジェクトを除く他のすべてのオブジェクトのコード",
    "stop_object_exampleCode": "def when_start():\n    while True:\n        Entry.move_to(\"mouse_pointer\")\n\ndef when_press_key(\"space\"):\n    Entry.stop_code(\"all\")\n",
    "stop_object_exampleDesc": "[スタート]ボタンをクリックするとオブジェクトが続けてマウスポインターの位置に移動します。スペースキーを押すと、すべてのコードの実行が中断されます。",
    "restart_project_desc": "作品を最初から再実行します。",
    "restart_project_exampleCode": "def when_start():\n    while True:\n        Entry.add_size(10)\n\ndef when_press_key(\"enter\"):\n    Entry.start_again()",
    "restart_project_exampleDesc": "[スタート]ボタンをクリックするとオブジェクトのサイズが続けてアップします。エンターキーを押すと作品を最初から再実行します。",
    "when_clone_start_desc": "当該オブジェクトのコピーが新しく作成された時、下のコマンドを実行します。<br>下のコマンドは[Tab]キーを用いてインデントを作成します。",
    "when_clone_start_exampleCode": "def when_start():\n    for i in range(5):\n        Entry.make_clone_of(\"self\")\n\ndef when_make_clone():\n    Entry.set_x(random.randint(-200, 200))",
    "when_clone_start_exampleDesc": "[スタート]ボタンをクリックすると自分のコピーを5つ作成します。コピーが新しく作成された際、コピーのx座標を-200から200の間の乱数にします。",
    "create_clone_desc": "A オブジェクトのコピーを作成します。",
    "create_clone_elements": "A-- 次の選択肢のうち一つ<br>① \"オブジェクト名\"<br>② \"self\"または\"自分\"",
    "create_clone_exampleCode": "def when_start():\n    for i in range(5):\n        Entry.make_clone_of(\"self\")\n\ndef when_make_clone():\n    Entry.set_x(random.randint(-200, 200))",
    "create_clone_exampleDesc": "[スタート]ボタンをクリックすると、自分のコピーを5つ作成します。コピーが新しく作成された際、コピーのx座標を-200から200までの乱数にします。",
    "delete_clone_desc": "Entry.make_clone_of(A) コマンドにより作成されたコピーを削除します。",
    "delete_clone_exampleCode": "def when_start():\n    for i in range(5):\n        Entry.make_clone_of(\"自分\")\n\ndef when_make_clone():\n    Entry.set_x(random.randint(-200, 200))\n\ndef when_click_object_on():\n    Entry.remove_this_clone()",
    "delete_clone_exampleDesc": "[スタート]ボタンをクリックすると自分のコピーを5つ作成します。コピーが新しく作成された際、コピーのx座標を-200から200までの乱数にします。コピーをクリックするとクリックされたコピーを削除します。",
    "remove_all_clones_desc": "当該オブジェクトのすべてのコピーを削除します。",
    "remove_all_clones_exampleCode": "def when_start():\n    for i in range(5):\n        Entry.make_clone_of(\"自分\")\n\ndef when_make_clone():\n    Entry.set_x(random.randint(-200, 200))\n\ndef when_press_key(\"space\"):\n    Entry.remove_all_clone()",
    "remove_all_clones_exampleDesc": "[スタート]ボタンをクリックすると自分のコピーを5つ作成します。コピーが新しく作成された際、コピーのx座標を-200から200までの乱数にします。スペースキーを押すとすべてのコピーを削除します。",
    "move_direction_desc": "オブジェクトの移動方向矢印が示す方向にAだけ動きます。",
    "move_direction_elements": "A-- 移動する距離に該当する数",
    "move_direction_exampleCode": "def when_start():\n    Entry.move_to_direction(10)",
    "move_direction_exampleDesc": "[スタート]ボタンをクリックすると、オブジェクトが移動方向に10移動します。",
    "bounce_wall_desc": "オブジェクトが画面の端に到達すると弾かれます。",
    "bounce_wall_exampleCode": "def when_start():\n    while True:\n        Entry.move_to_direction(10)\n        Entry.bounce_on_edge()",
    "bounce_wall_exampleDesc": "[スタート]ボタンをクリックすると、オブジェクトが続けて移動方向に10移動し、壁にぶつかると弾かれます。",
    "move_x_desc": "オブジェクトのx座標をAだけ変更します。",
    "move_x_elements": "A-- x座標の変化値<br>① 正数: オブジェクトが右側に移動します。<br>② 負数: オブジェクトが左側に移動します。",
    "move_x_exampleCode": "def when_start():\n    Entry.add_x(10)\n    Entry.wait_for_sec(2)\n    Entry.add_x(-10)",
    "move_x_exampleDesc": "[スタート]ボタンをクリックするとオブジェクトが右に10移動し、2秒間待機後、左に10移動します。",
    "move_y_desc": "オブジェクトのy座標をAだけ変更します。",
    "move_y_elements": "A-- y座標の変化値<br>① 正数: オブジェクトが上に移動します。<br>② 負数: オブジェクトが下に移動します。",
    "move_y_exampleCode": "def when_start():\n    Entry.add_y(10)\n    Entry.wait_for_sec(2)\n    Entry.add_y(-10)",
    "move_y_exampleDesc": "[スタート]ボタンをクリックするとオブジェクトが上に10移動し、2秒間待機した後、下に10移動します。",
    "move_xy_time_desc": "オブジェクトがxとy座標をそれぞれAとBだけC秒に渡り徐々に変更します。",
    "move_xy_time_elements": "A-- x座標の変化値<br>① 正数: オブジェクトが右側に移動します。<br>② 負数: オブジェクトが左側に移動します。%nextB-- y座標の変化値<br>① 陽数: オブジェクトが上に移動します。<br>② 負数: オブジェクトが下に移動します。%nextC-- 移動する時間(秒)",
    "move_xy_time_exampleCode": "def when_start():\n    Entry.add_xy_for_sec(100, 100, 2)\n    Entry.add_xy_for_sec(-100, -100, 2)",
    "move_xy_time_exampleDesc": "[スタート]ボタンをクリックすると、オブジェクトが右上に100だけ2秒間移動した後、左下に100だけ2秒間移動します。",
    "locate_x_desc": "オブジェクトのx座標をAにします。(オブジェクトの中心点が基準になります。)",
    "locate_x_elements": "A-- 移動するx座標",
    "locate_x_exampleCode": "def when_press_key(\"right\"):\n    Entry.set_x(100)\n\ndef when_press_key(\"left\"):\n    Entry.set_x(-100)\n",
    "locate_x_exampleDesc": "右方向キーを押すとオブジェクトのx座標を100にし、左方向キーを押すとオブジェクトのx座標を-100にします。",
    "locate_y_desc": "オブジェクトのy座標をAにします。(オブジェクトの中心点が基準になります。)",
    "locate_y_elements": "B-- 移動するy座標",
    "locate_y_exampleCode": "def when_press_key(\"up\"):\n    Entry.set_y(100)\n\ndef when_press_key(\"down\"):\n    Entry.set_y(-100)",
    "locate_y_exampleDesc": "上方向キーを押すとオブジェクトのy座標を100にし、下方向キーを押すとオブジェクトのy座標を-100にします。",
    "locate_xy_desc": "オブジェクトが座標(A, B)に移動します。(オブジェクトの中心点が基準になります。)",
    "locate_xy_elements": "A-- 移動するx座標%nextB-- 移動するy座標",
    "locate_xy_exampleCode": "def when_click_mouse_on():\n    Entry.set_xy(0, 0)\n\ndef when_press_key(\"right\"):\n    Entry.add_x(10)\n\ndef when_press_key(\"up\"):\n    Entry.add_y(10)",
    "locate_xy_exampleDesc": "右方向キーを押すとオブジェクトのx座標を10だけ変更し、上方向キーを押すとオブジェクトのy座標を10だけ変更します。マウスをクリックすると、オブジェクトのx, y座標を0にします。",
    "locate_xy_time_desc": "オブジェクトが座標(A, B)に、C秒に渡り徐々に移動します。(オブジェクトの中心点が基準になります。)",
    "locate_xy_time_elements": "A-- 移動するx座標%nextB-- 移動するy座標%nextC-- 移動する時間",
    "locate_xy_time_exampleCode": "def when_click_mouse_on():\n    Entry.set_xy_for_sec(0, 0, 2)\n\ndef when_press_key(\"right\"):\n    Entry.add_x(10)\n\ndef when_press_key(\"up\"):\n    Entry.add_y(10)",
    "locate_xy_time_exampleDesc": "右方向キーを押すとオブジェクトのx座標を10だけ変更し、上方向キーを押すとオブジェクトのy座標を10だけ変更します。マウスをクリックすると、2秒間オブジェクトをx,y 座標0に移動させます。",
    "locate_desc": "オブジェクトがAの位置に移動します。(オブジェクトの中心点が基準になります。)",
    "locate_elements": "A-- 次の選択肢のうち一つ<br>① \"オブジェクト名\"<br>② \"mouse_pointer\"または\"マウスポインター\"",
    "locate_exampleCode": "def when_click_mouse_on():\n    Entry.move_to(\"mouse_pointer\")\n\ndef when_press_key(\"space\"):\n    Entry.move_to(\"オブジェクト\")",
    "locate_exampleDesc": "マウスをクリックすると、オブジェクトがマウスポインターの位置に移動します。<br>スペースキーを押すとオブジェクトが\"オブジェクト\"位置に移動します。",
    "locate_object_time_desc": "オブジェクトがAの位置にB秒に渡り徐々に移動します。(オブジェクトの中心点が基準になります。)",
    "locate_object_time_elements": "A-- 次の選択肢のうち一つ<br>① \"オブジェクト名\"<br>② \"mouse_pointer\"または\"マウスポインター\" %nextB-- 移動する時間(秒)",
    "locate_object_time_exampleCode": "def when_click_mouse_on():\n    Entry.move_to_for_sec(\"mouse_pointer\", 2)",
    "locate_object_time_exampleDesc": "マウスをクリックすると、オブジェクトが2秒間徐々にマウスポインターの位置に移動します。",
    "rotate_relative_desc": "オブジェクトの方向をA度だけ時計方向に回転します。(オブジェクトの中心点を基準に回転します。)",
    "rotate_relative_elements": "A-- 回転する角度",
    "rotate_relative_exampleCode": "def when_click_object_on():\n    Entry.add_rotation(90)\n\ndef when_click_object_off():\n    Entry.add_rotation(-90)",
    "rotate_relative_exampleDesc": "オブジェクトをクリックするとオブジェクトが90度だけ回転し、オブジェクトクリックを解除するとオブジェクトが-90度だけ回転します。",
    "direction_relative_desc": "オブジェクトの移動方向をA度だけ回転します。",
    "direction_relative_elements": "A-- 回転する角度",
    "direction_relative_exampleCode": "def when_start():\n    Entry.move_to_direction(50)\n    Entry.wait_for_sec(0.5)\n    Entry.add_direction(90)\n    Entry.wait_for_sec(0.5)\n    Entry.move_to_direction(50)",
    "direction_relative_exampleDesc": "[スタート]ボタンをクリックすると、オブジェクトが移動方向に50移動した後、0.5秒間待機します。その後、移動方向を90度だけ回転して0.5秒間待機した後、移動方向に50移動します。",
    "rotate_by_time_desc": "オブジェクトの方向を時計方向にA度だけB秒に渡り回転します。(オブジェクトの中心点を基準に回転します。)",
    "rotate_by_time_elements": "A-- 回転する角度%nextB-- 回転する時間(秒)",
    "rotate_by_time_exampleCode": "def when_start():\n    Entry.add_rotation_for_sec(90, 2)\n    Entry.add_rotation_for_sec(-90, 2)",
    "rotate_by_time_exampleDesc": "[スタート]ボタンをクリックするとオブジェクトが2秒間90度回転し、再び2秒間-90度回転します。",
    "direction_relative_duration_desc": "オブジェクトの移動方向を時計方向にA度だけB秒に渡り回転します。(オブジェクトの中心点を基準に回転します。)",
    "direction_relative_duration_elements": "A-- 回転する角度%nextB-- 回転する時間(秒)",
    "direction_relative_duration_exampleCode": "def when_start():\n    Entry.add_direction_for_sec(90, 2)\n\ndef when_start():\n    while True:\n        Entry.move_to_direction(1)",
    "direction_relative_duration_exampleDesc": "[スタート]ボタンをクリックすると、オブジェクトの移動方向を2秒間90度回転させます。同時にオブジェクトは移動方向に1ずつ継続して移動します。",
    "rotate_absolute_desc": "オブジェクトの方向をAにします。",
    "rotate_absolute_elements": "A-- 設定する方向",
    "rotate_absolute_exampleCode": "def when_press_key(\"right\"):\n    Entry.set_rotation(90)\n\ndef when_press_key(\"left\"):\n    Entry.set_rotation(270)",
    "rotate_absolute_exampleDesc": "右方向キーを押すとオブジェクトの方向を90にし、左方向キーを押すとオブジェクトの方向を270にします。",
    "direction_absolute_desc": "オブジェクトの移動方向をAにします。",
    "direction_absolute_elements": "A-- 設定する移動方向",
    "direction_absolute_exampleCode": "def when_press_key(\"right\"):\n    Entry.set_direction(90)\n    Entry.move_to_direction(10)\n\ndef when_press_key(\"left\"):\n    Entry.set_direction(270)\n    Entry.move_to_direction(10)",
    "direction_absolute_exampleDesc": "右方向キーを押すとオブジェクトの移動方向を90にした後、その方向に10移動し、左方向キーを押すとオブジェクトの移動方向を270にしてその方向に10移動します。",
    "see_angle_object_desc": "オブジェクトがAの方向を向きます。(移動方向がAを向くようにオブジェクトの方向を回転させます。)",
    "see_angle_object_elements": "A-- 次の選択肢のうち一つ<br>① \"オブジェクト名\"<br>② \"mouse_pointer\"または\"マウスポインター\"",
    "see_angle_object_exampleCode": "def when_click_mouse_on():\n    Entry.look_at(\"mouse_pointer\")\n\ndef when_press_key(\"space\"):\n    Entry.look_at(\"オブジェクト\")",
    "see_angle_object_exampleDesc": "マウスをクリックするとオブジェクトがマウスポインターの方向を向き、スペースキーを押すと\"オブジェクト\"の方向を向きます。",
    "move_to_angle_desc": "オブジェクトがAだけB方向に動きます。",
    "move_to_angle_elements": "A-- 移動する距離に該当する数%nextB-- 移動する方向(12時方向が0度、時計方向に増加)",
    "move_to_angle_exampleCode": "def when_press_key(\"up\"):\n    Entry.move_to_degree(10, 0)\n\ndef when_press_key(\"down\"):\n    Entry.move_to_degree(10, 180)",
    "move_to_angle_exampleDesc": "上方向キーを押すとオブジェクトが0度方向に10移動し、下方向キーを押すとオブジェクトが180度方向に10移動します。",
    "show_desc": "オブジェクトを画面に表示します。",
    "show_exampleCode": "def when_start():\n    Entry.wait_for_sec(1)\n    Entry.hide()\n    Entry.wait_for_sec(1)\n    Entry.show()",
    "show_exampleDesc": "[スタート]ボタンをクリックすると、1秒後にオブジェクト模様が非表示になり、次の1秒後にオブジェクト模様が表示されます。",
    "hide_desc": "オブジェクトを画面で非表示にします。",
    "hide_exampleCode": "def when_start():\n    Entry.wait_for_sec(1)\n    Entry.hide()\n    Entry.wait_for_sec(1)\n    Entry.show()",
    "hide_exampleDesc": "[スタート]ボタンをクリックすると、1秒後にオブジェクト模様が非表示になり、次の1秒後にオブジェクト模様が表示されます。",
    "dialog_time_desc": "オブジェクトがAをB秒間吹き出しで話した後、次のコマンドが実行されます。コンソールウィンドウでも実行結果を確認できます。",
    "dialog_time_elements": "A-- 話す内容<br>① 文字: \"やあ!\", \"エントリー\"など<br>② 数字: 0, 10, 35など%nextB-- 話す時間(秒)",
    "dialog_time_exampleCode": "def when_start():\n    Entry.print_for_sec(\"やあ! 僕は\", 2)\n    Entry.print_for_sec(16, 2)\n    Entry.print_for_sec(\"歳だよ\", 2)",
    "dialog_time_exampleDesc": "[スタート]ボタンをクリックすると、\"やあ! 僕は\", 16, \"歳だよ\"をそれぞれ2秒間順番どおりに話します。",
    "dialog_desc": "オブジェクトがAを吹き出しで話します。コンソールウィンドウでも実行結果を確認できます。",
    "dialog_elements": "A-- 話す内容<br>① 文字: \"やあ!\", \"エントリー\"など<br>② 数字: 0, 10, 35など",
    "dialog_exampleCode": "def when_start():\n    Entry.print(\"キーボードで数字の1、2を押したら数字を言ってみるね\")\n\ndef when_press_key(1):\n    Entry.print(1)\n\ndef when_press_key(2):\n    Entry.print(2)\n",
    "dialog_exampleDesc": "[スタート]ボタンをクリックすると\"キーボードで数字の1、2を押したら、数字を言ってみるね\"と話し、キーボードで1、2を押すとそれぞれ1、2と話します。",
    "remove_dialog_desc": "オブジェクトが話している吹き出しを消します。",
    "remove_dialog_exampleCode": "def when_start():\n    Entry.print(\"吹き出しを消すにはエンターを押して!\")\n\ndef when_press_key(\"enter\"):\n    Entry.clear_print()",
    "remove_dialog_exampleDesc": "[スタート]ボタンをクリックすると、\"吹き出しを消すにはエンターを押して!\"と話し、エンターキーを押すと吹き出しが消えます。",
    "change_to_some_shape_desc": "オブジェクトをA模様に変更します。",
    "change_to_some_shape_elements": "A-- 次の選択肢のうち1つ<br>① 模様名 : [属性] タブの\"模様名\"を記載<br>② 模様番号 : [属性] タブの模様番号を記載",
    "change_to_some_shape_exampleCode": "def when_start():\n    Entry.wait_for_sec(0.3)\n    Entry.change_shape(\"オブジェクト模様\")\n    Entry.wait_for_sec(0.3)\n    Entry.change_shape(\"オブジェクト模様\")",
    "change_to_some_shape_exampleDesc": "[スタート]ボタンをクリックすると、0.3秒間待機した後に\"オブジェクト模様\"に模様を変更し、0.3秒間待機した後に\"オブジェクト模様\"模様に模様を変更します。",
    "change_to_next_shape_desc": "オブジェクトの模様を次または前の模様に変更します。",
    "change_to_next_shape_elements": "A-- 次の選択肢のうち一つ<br>① 次の模様: \"next\"または\"次\" <br>② 前の模様: \"pre\"または\"前\"",
    "change_to_next_shape_exampleCode": "def when_start():\n    Entry.wait_for_sec(0.3)\n    Entry.change_shape_to(\"next\")\n    Entry.wait_for_sec(0.3)\n    Entry.change_shape_to(\"pre\")",
    "change_to_next_shape_exampleDesc": "[スタート]ボタンをクリックすると、0.3秒間待機した後に次のオブジェクト模様に変更し、0.3秒間待機した後に前の模様にオブジェクト模様を変更します。",
    "add_effect_amount_desc": "オブジェクトにA効果をBだけ加えます。",
    "add_effect_amount_elements": "A -- 次の選択肢のうち一つ<br>① “color”または“色“                 <br>② “brightness”または“明度”                <br>③ “transparency”または“透明度”%nextB-- 効果の変化の程度",
    "add_effect_amount_exampleCode": "def when_click_mouse_on():\n    Entry.add_effect(\"color\", 50)\n    Entry.wait_for_sec(1)\n    Entry.add_effect(\"brightness\", -50)\n    Entry.wait_for_sec(1)\n    Entry.add_effect(\"transparency\", 50)",
    "add_effect_amount_exampleDesc": "マウスをクリックすると、オブジェクトに色効果を50与えて1秒間待機し、明度効果を-50加えて1秒間待機します。その後、透明度効果を50加えます。",
    "change_effect_amount_desc": "オブジェクトのA効果をBにします。",
    "change_effect_amount_elements": "A-- 次の選択肢のうち一つ<br>① “color”または“色“                 <br>② “brightness”または“明度”                <br>③ “transparency”または“透明度”%nextB-- 効果の値<br>① color: 0~100範囲の数、100を周期として繰り返す<br>② brightness: -100~100間の範囲の数、-100以下は-100で、100以上は100で処理される<br>③ transparency: 0~100間の範囲の数、0以下は0に、100以上は100で処理される",
    "change_effect_amount_exampleCode": "def when_click_mouse_on():\n    Entry.set_effect(\"color\", 50)\n    Entry.set_effect(\"brightness\", 50)\n    Entry.set_effect(\"transparency\", 50)\n\ndef when_click_mouse_off():\n    Entry.set_effect(\"color\", 0)\n    Entry.set_effect(\"brightness\", 0)\n    Entry.set_effect(\"transparency\", 0)",
    "change_effect_amount_exampleDesc": "マウスをクリックすると、オブジェクトに色、明度、透明度効果を50にし、マウスクリックを解除するとそれぞれの効果を0にします。",
    "erase_all_effects_desc": "オブジェクトに適用された効果をすべて削除します。",
    "erase_all_effects_exampleCode": "def when_click_mouse_on():\n    Entry.set_effect(\"color\", 50)\n    Entry.set_effect(\"brightness\", 50)\n    Entry.set_effect(\"transparency\", 50)\n\ndef when_click_mouse_off():\n    Entry.clear_effect()\n",
    "erase_all_effects_exampleDesc": "マウスをクリックするとオブジェクトに色、明度、透明度効果を50にし、マウスクリックを解除するとオブジェクトに適用されたすべての効果を消します。",
    "change_scale_size_desc": "オブジェクトのサイズをAだけ変更します。",
    "change_scale_size_elements": "A-- サイズ変化値",
    "change_scale_size_exampleCode": "def when_press_key(\"up\"):\n    Entry.add_size(10)\n\ndef when_press_key(\"down\"):\n    Entry.add_size(-10)\n\ndef when_press_key(\"space\"):\n    Entry.set_size(100)",
    "change_scale_size_exampleDesc": "上方向キーを押すとオブジェクトのサイズが10大きくなり、下方向キーを押すとオブジェクトのサイズが10だけ小さくなります。スペースキーを押すとオブジェクトのサイズを100にします。",
    "set_scale_size_desc": "オブジェクトのサイズをAにします。",
    "set_scale_size_elements": "A-- サイズ値",
    "set_scale_size_exampleCode": "def when_press_key(\"up\"):\n    Entry.add_size(10)\n\ndef when_press_key(\"down\"):\n    Entry.add_size(-10)\n\ndef when_press_key(\"space\"):\n    Entry.set_size(100)",
    "set_scale_size_exampleDesc": "上方向キーを押すとオブジェクトのサイズが10だけ大きくなり、下方向キーを押すとオブジェクトのサイズが10だけ小さくなります。スペースキーを押すとオブジェクトのサイズを100にします。",
    "flip_x_desc": "オブジェクトの上下の模様を入れ替えます。",
    "flip_x_exampleCode": "def when_press_key(\"up\"):\n    Entry.flip_horizontal()\n\ndef when_press_key(\"right\"):\n    Entry.flip_vertical()",
    "flip_x_exampleDesc": "上方向キーを押すとオブジェクトの上下の模様を入れ替え、右方向キーを押すとオブジェクトの左右の模様を入れ替えます。",
    "flip_y_desc": "オブジェクトの左右の模様を入れ替えます。",
    "flip_y_exampleCode": "def when_press_key(\"up\"):\n    Entry.flip_horizontal()\n\ndef when_press_key(\"right\"):\n    Entry.flip_vertical()",
    "flip_y_exampleDesc": "上方向キーを押すとオブジェクトの上下の模様を入れ替え、右方向キーを押すとオブジェクトの左右の模様を入れ替えます。",
    "change_object_index_desc": "オブジェクトのレイヤーをAに移動させます。",
    "change_object_index_elements": "A-- 次の選択肢のうち一つ<br>① “front\"または“一番前“                 <br>② “forward”または“前”                <br>③ “backward”または“後ろ”<br>④ “back”または“一番後ろ”",
    "change_object_index_exampleCode": "def when_start():\n    Entry.send_layer_to(\"front\")\n    Entry.wait_for_sec(2)\n    Entry.send_layer_to(\"backward\")",
    "change_object_index_exampleDesc": "オブジェクトが複数重なっている場合、[スタート]ボタンをクリックすると当該オブジェクトのレイヤーを一番前に移動させて表示します。",
    "brush_stamp_desc": "オブジェクトの模様をスタンプのように実行画面上に押します。",
    "brush_stamp_exampleCode": "def when_start():\n    for i in range(10):\n        Entry.move_to_direction(10)\n        Entry.stamp()",
    "brush_stamp_exampleDesc": "[スタート]ボタンをクリックすると、オブジェクトが移動方向に10移動し、スタンプを押す行動を10回繰り返します。",
    "start_drawing_desc": "オブジェクトが移動する経路に沿って線を引きます。(オブジェクトの中心点が基準)",
    "start_drawing_exampleCode": "def when_start():\n    Entry.start_drawing()\n    for i in range(10):\n        Entry.move_to_direction(10)",
    "start_drawing_exampleDesc": "[スタート]ボタンをクリックすると描画がスタートし、オブジェクトが移動方向に10だけ10回移動するとき、オブジェクトの移動経路に沿って線が引かれます。",
    "stop_drawing_desc": "オブジェクトが線を描くのを中断します。",
    "stop_drawing_exampleCode": "def when_start():\n    Entry.start_drawing()\n    while True:\n        Entry.move_to_direction(1)\n\ndef when_click_mouse_on():\n    Entry.stop_drawing()",
    "stop_drawing_exampleDesc": "[スタート]ボタンをクリックすると描画が始まり、続けてオブジェクトが移動方向に10移動します。マウスをクリックすると、描画を中断します。",
    "set_color_desc": "オブジェクトが描く線の色をAにします。",
    "set_color_elements": "A-- 次の選択肢のうち一つ<br>① カラーコード: \"#FF0000\", \"#FFCC00\", \"#3333FF\", \"#000000\"など<br>② 色 : \"red\", \"orange\", \"yellow\", \"green\", \"blue\", \"navy\", \"purple\", \"black\", \"white\", \"brown\"",
    "set_color_exampleCode": "def when_start():\n    Entry.start_drawing()\n    Entry.set_brush_color_to(\"#000099\")\n    while True:\n        Entry.move_to_direction(1)",
    "set_color_exampleDesc": "[スタート]ボタンをクリックすると描画がスタートし、線の色を\"#000099\"にします。オブジェクトは続けて移動方向に1だけ動き、オブジェクトの移動経路に沿って線が引かれます。",
    "set_random_color_desc": "オブジェクトが描く線の色をランダムにします。",
    "set_random_color_exampleCode": "def when_start():\n    Entry.start_drawing()\n    while True:\n        Entry.move_to_direction(1)\n        Entry.set_brush_color_to_random()",
    "set_random_color_exampleDesc": "[スタート]ボタンをクリックすると描画がスタートします。オブジェクトは続けて移動方向に1だけ動き、オブジェクトの移動経路に沿って線が引かれます。線の色は続けてランダムで決まります。",
    "change_thickness_desc": "オブジェクトが描く線の太さをAだけ変更します。",
    "change_thickness_elements": "A-- 太さ変化値",
    "change_thickness_exampleCode": "def when_start():\n    Entry.start_drawing()\n    while True:\n        Entry.add_brush_size(1)\n        Entry.move_to_direction(10)",
    "change_thickness_exampleDesc": "[スタート]ボタンをクリックすると描画がスタートします。オブジェクトは続けて移動方向に10だけ動き、オブジェクトの移動経路に沿って線が引かれます。線の太さは続けて1ずつ大きくなります。",
    "set_thickness_desc": "オブジェクトが描く線の太さをAにします。",
    "set_thickness_elements": "A-- 太さ値(1以上の数)",
    "set_thickness_exampleCode": "def when_start():\n    Entry.start_drawing()\n    Entry.set_brush_size(10)\n    while True:\n        Entry.move_to_direction(10)",
    "set_thickness_exampleDesc": "[スタート]ボタンをクリックすると描画がスタートし、線の太さを10にします。オブジェクトは続けて移動方向に10動き、オブジェクトの移動経路に沿って線が引かれます。",
    "change_brush_transparency_desc": "オブジェクトが描く線の透明度をAだけ変更します。",
    "change_brush_transparency_elements": "A-- 透明度変化値",
    "change_brush_transparency_exampleCode": "def when_start():\n    Entry.start_drawing()\n    Entry.set_brush_size(10)\n    while True:\n        Entry.move_to_direction(10)\n        Entry.add_brush_transparency(5)",
    "change_brush_transparency_exampleDesc": "[スタート]ボタンをクリックすると描画がスタートし、線の太さを10にします。オブジェクトは続けて移動方向に10動き、オブジェクトの移動経路に沿って線が引かれます。線の透明度は続けて5だけ変更します。",
    "set_brush_tranparency_desc": "オブジェクトが描く線の透明度をAにします。",
    "set_brush_tranparency_elements": "A-- 透明度値(0~100の範囲)",
    "set_brush_tranparency_exampleCode": "def when_start():\n    Entry.start_drawing()\n    Entry.set_brush_size(10)\n    Entry.set_brush_transparency(50)\n    while True:\n        Entry.move_to_direction(10)",
    "set_brush_tranparency_exampleDesc": "[スタート]ボタンをクリックすると描画がスタートし、線の太さを10に、線の透明度を50にします。オブジェクトは続けて移動方向に10だけ動き、オブジェクトの移動経路に沿って線が引かれます。",
    "brush_erase_all_desc": "オブジェクトが描いた線とスタンプをすべて削除します。",
    "brush_erase_all_exampleCode": "def when_start():\n    Entry.start_drawing()\n    while True:\n        Entry.move_to_direction(10)\n\ndef when_click_mouse_on():\n    Entry.clear_drawing()",
    "brush_erase_all_exampleDesc": "[スタート]ボタンをクリックすると描画がスタートします。オブジェクトは続けて移動方向に10だけ動き、オブジェクトの移動経路に沿って線が引かれます。マウスをクリックするとオブジェクトが描いた線をすべて削除します。",
    "text_read_desc": "글상자 A의 내용입니다.<br />(내용 안에 개행이 있는 경우, 띄어쓰기하여 반환됩니다.)",
    "text_read_elements": "A-- 아래 선택지 중 하나<br />① \"오브젝트(글상자) 이름\" <br />② 자기 자신",
    "text_read_exampleCode": "def when_start():\n    Entry.print(Entry.contents_of_textbox(\"A\"))",
    "text_read_exampleDesc": "[시작하기]버튼을 클릭하면 오브젝트가 글상자 \"A\"의 내용을 말합니다.​",
    "text_write_desc": "テキストボックスの内容をAに書き換えます。",
    "text_write_elements": "A-- テキストボックスの内容<br>① 文字: \"やあ!\", \"エントリー\"など<br>② 数字: 0, 10, 35など",
    "text_write_exampleCode": "def when_start():\n    Entry.write_text(\"エントリー\")",
    "text_write_exampleDesc": "[スタート]ボタンをクリックすると、テキストボックスの内容を\"エントリー\"に変更します。",
    "text_append_desc": "テキストボックスの内容の後にAを追加します。",
    "text_append_elements": "A-- テキストボックスの内容<br>① 文字: \"やあ!\", \"エントリー\"など<br>② 数字: 0, 10, 35など",
    "text_append_exampleCode": "def when_start():\n    Entry.write_text(\"やあ!\")\n    Entry.wait_for_sec(1)\n    Entry.append_text(\"エントリー!\")",
    "text_append_exampleDesc": "[スタート]ボタンをクリックすると、テキストボックスの内容の\"やあ!\"に1秒後に\"エントリー!\"が追加され、\"やあ!エントリー!\"になります。",
    "text_prepend_desc": "テキストボックスの内容の前にAを追加します。",
    "text_prepend_elements": "A-- テキストボックスの内容<br>① 文字: \"やあ!\", \"エントリー\"など<br>② 数字: 0, 10, 35など",
    "text_prepend_exampleCode": "def when_start():\n    Entry.write_text(\"嬉しいな!\")\n    Entry.wait_for_sec(1)\n    Entry.prepend_text(\"エントリー!\")",
    "text_prepend_exampleDesc": "[スタート]ボタンをクリックすると、テキストボックスの内容が\"嬉しいな!\"になってから、1秒後に\"エントリー!\"が前に追加され\"エントリー!嬉しいな!\"になります。",
    "text_flush_desc": "テキストボックスに保存された値をすべて削除します。",
    "text_flush_exampleCode": "def when_start():\n    Entry.write_text(\"エントリー\")\n    Entry.wait_for_sec(1)\n    Entry.clear_text()",
    "text_flush_exampleDesc": "[スタート]ボタンをクリックすると、テキストボックスの内容が\"エントリー\"になってから、1秒後にすべての内容が消えます。",
    "sound_something_with_block_desc": "オブジェクトがAサウンドを再生します。",
    "sound_something_with_block_elements": "A-- 次の選択肢のうち一つ<br>① サウンド名 : [属性] タブの\"サウンド名\"を記載<br>② サウンド番号: [属性] タブのサウンド番号を記載",
    "sound_something_with_block_exampleCode": "def when_start():\n    Entry.play_sound(\"サウンド\")\n    Entry.add_size(50)",
    "sound_something_with_block_exampleDesc": "[スタート]ボタンをクリックすると、\"サウンド\"を再生しながらオブジェクトのサイズが50大きくなります。",
    "sound_something_second_with_block_desc": "オブジェクトがAサウンドをB秒間再生します。",
    "sound_something_second_with_block_elements": "A-- 次の選択肢のうち一つ<br>① サウンド名 : [属性] タブの\"サウンド名\"を記載<br>② サウンド番号: [属性] タブのサウンド番号を記載",
    "sound_something_second_with_block_exampleCode": "def when_start():\n    Entry.play_sound_for_sec(\"サウンド\", 1)\n    Entry.add_size(50)",
    "sound_something_second_with_block_exampleDesc": "[スタート]ボタンをクリックすると\"サウンド\"を1秒間再生しながら、オブジェクトのサイズが50程度大きくなります。",
    "sound_from_to_desc": "オブジェクトがAサウンドをB秒からC秒まで再生します。",
    "sound_from_to_elements": "A-- 次の選択肢のうち1つ<br>① サウンド名 : [属性] タブの\"サウンド名\"を記載<br>② サウンド番号: [属性] タブのサウンド番号を記載",
    "sound_from_to_exampleCode": "def when_start():\n    Entry.play_sound_from_to(\"サウンド\", 0.5, 1)\n    Entry.add_size(50)",
    "sound_from_to_exampleDesc": "[スタート]ボタンをクリックすると、\"サウンド\"を0.5秒から1秒区間までのみ再生しながら、オブジェクトのサイズが50程度大きくなります。",
    "sound_something_wait_with_block_desc": "オブジェクトがAサウンドを再生し、再生が終わると次のコマンドを実行します。",
    "sound_something_wait_with_block_elements": "A-- 次の選択肢のうち1つ<br>① サウンド名 : [属性]タブの\"サウンド名\"を記載<br>② サウンド番号: [属性]タブのサウンド番号を記載",
    "sound_something_wait_with_block_exampleCode": "def when_start():\n    Entry.play_sound_and_wait(\"サウンド\")\n    Entry.add_size(50)",
    "sound_something_wait_with_block_exampleDesc": "[スタート]ボタンをクリックすると\"サウンド\"を再生し、再生が終わるとオブジェクトのサイズが50大きくなります。",
    "sound_something_second_wait_with_block_desc": "オブジェクトがAサウンドをB秒再生し、再生が終わると次のコマンドを実行します。",
    "sound_something_second_wait_with_block_elements": "A-- 次の選択肢のうち1つ<br>① サウンド名 : [属性]タブの\"サウンド名\"を記載<br>② サウンド番号: [属性]タブのサウンド番号を記載",
    "sound_something_second_wait_with_block_exampleCode": "def when_start():\n    Entry.play_sound_for_sec_and_wait(\"サウンド\", 1)\n    Entry.add_size(50)",
    "sound_something_second_wait_with_block_exampleDesc": "[スタート]ボタンをクリックすると、\"サウンド\"を1秒間再生し、再生が終わるとオブジェクトのサイズが50大きくなります。",
    "sound_from_to_and_wait_desc": "オブジェクトがAサウンドをB秒からC秒まで再生し、再生が終わると次のコマンドを実行します。",
    "sound_from_to_and_wait_elements": "A-- 次の選択肢のうち1つ<br>① サウンド名 : [属性]タブの\"サウンド名\"を記載<br>② サウンド番号: [属性]タブのサウンド番号を記載",
    "sound_from_to_and_wait_exampleCode": "def when_start():\n    Entry.play_sound_from_to_and_wait(\"サウンド\", 0.5, 1)\n    Entry.add_size(50)",
    "sound_from_to_and_wait_exampleDesc": "[スタート]ボタンをクリックすると、\"サウンド\"を0.5秒から1秒区間までのみ再生し、再生が終わるとオブジェクトのサイズが50大きくなります。",
    "sound_volume_change_desc": "作品で再生されるすべての サウンドのボリュームをA％分変更します。",
    "sound_volume_change_elements": "A-- ボリュームの大きさ変化値",
    "sound_volume_change_exampleCode": "def when_press_key(\"up\"):\n    Entry.add_sound_volume(10)\n\ndef when_press_key(\"down\"):\n    Entry.add_sound_volume(-10)\n\ndef when_start():\n    while True:\n        Entry.play_sound_and_wait(\"サウンド\")",
    "sound_volume_change_exampleDesc": "[スタート]ボタンをクリックすると、\"サウンド\"を続けて再生します。上方向キーを押すとサウンドのサイズが10\"大きくなり、下方向キーを押すとサウンドのサイズが10\"小さくなります。",
    "sound_volume_set_desc": "作品で再生されるすべての サウンドのボリュームをA％にします。",
    "sound_volume_set_elements": "A-- ボリュームの大きさ値",
    "sound_volume_set_exampleCode": "def when_press_key(\"up\"):\n    Entry.add_sound_volume(10)\n\ndef when_press_key(\"down\"):\n    Entry.add_sound_volume(-10)\n\ndef when_press_key(\"enter\"):\n    Entry.set_sound_volume(100)\n\ndef when_start():\n    while True:\n        Entry.play_sound_and_wait(\"サウンド\")",
    "sound_volume_set_exampleDesc": "[スタート]ボタンをクリックすると、\"サウンド\"を続けて再生します。上方向キーを押すとサウンドのサイズが10\"大きくなり、下方向キーを押すとサウンドのサイズが10\"小さくなります。エンターキーを押すとサウンドのボリュームを100\"にします。",
    "sound_silent_all_desc": "現在再生中のすべてのサウンドを止めます。",
    "sound_silent_all_exampleCode": "def when_start():\n    while True:\n        Entry.play_sound_and_wait(\"サウンド\")\n\ndef when_press_key(\"enter\"):\n    Entry.stop_sound()",
    "sound_silent_all_exampleDesc": "[スタート]ボタンをクリックすると、\"サウンド\"を続けて再生します。エンターキーを押すと現在再生中のサウンドを止めます。",
    "is_clicked_desc": "マウスをクリックした場合、Trueと判断します。",
    "is_clicked_exampleCode": "def when_start():\n    while True:\n        if Entry.is_mouse_clicked():\n            Entry.print_for_sec(\"嬉しいな!\", 0.5)",
    "is_clicked_exampleDesc": "[スタート]ボタンをクリックすると、続けてマウスをクリックしたか確認します。もしマウスをクリックしたら、オブジェクトが\"嬉しいな!\"と0.5秒間話します。",
    "is_press_some_key_desc": "A キーが押されている場合、Trueと判断します。",
    "is_press_some_key_elements": "A-- 次の選択肢のうち一つ<br>① アルファベット : \"A\", \"B\" ~ \"Z\"など(小文字可能)<br>② 数字: 1, 2, 3, 4 ~ 9, 0<br>③ 特殊キー: \"space\", \"enter\"<br>④ 方向キー : \"up\", \"down\", \"right\", \"left\"",
    "is_press_some_key_exampleCode": "def when_start():\n    while True:\n        if Entry.is_key_pressed(\"space\"):\n            Entry.move_to_direction(10)",
    "is_press_some_key_exampleDesc": "[スタート]ボタンをクリックすると、続けて選択したキーを押したか確認します。もしスペースキーを押したらオブジェクトが移動方向に10移動します。",
    "reach_something_desc": "オブジェクトがAに触れた場合、Trueと判断します。",
    "reach_something_elements": "A-- 次の選択肢のうち1つ<br>① \"オブジェクト名\"<br>② \"mouse_pointer\"または\"マウスポインター\"<br>③ \"edge\", \"edge_up\", \"edge_down\", \"edge_right\", \"edge_left\"",
    "reach_something_exampleCode": "def when_start():\n    while True:\n        Entry.move_to_direction(10)\n        if Entry.is_touched(\"edge\"):\n            Entry.add_rotation(150)",
    "reach_something_exampleDesc": "[スタート]ボタンをクリックすると、続けてオブジェクトが移動方向に10移動します。オブジェクトが壁に触れると150だけ回転します。",
    "boolean_basic_operator_desc": "AとBを比較してTrueまたはFalseと判断します。",
    "boolean_basic_operator_elements": "A, B-- 比較したい数字値<br>① == : AとBの値が同じならTrue、そうでなければFalse<br>② > : Aの値がBの値より大きいならtrue、そうでなければFalse<br>③ < : Aの値がBの値より小さいならtrue、そうでなければFalse<br>④ >= : Aの値がBの値より大きいか同じならtrue、そうでなければFalse<br>⑤ <= : Aの値がBの値より小さいか同じならtrue、そうでなければFalse",
    "boolean_basic_operator_exampleCode": "def when_start():\n    while True:\n        Entry.add_x(10)\n        if Entry.value_of_object(\"オブジェクト\", \"x\") > 240:\n            Entry.set_x(0)",
    "boolean_basic_operator_exampleDesc": "[スタート]ボタンをクリックすると、続けてオブジェクトx座標を10変更します。もしオブジェクトx座標が240より大きければオブジェクトx座標を0にします。",
    "boolean_and_desc": "AとBの判断がすべてTrueの場合はTrue、そうじゃない場合はFalseと判断します。",
    "boolean_and_elements": "A, B-- TrueまたはFalseと判断できるコマンド入力(判断カテゴリーのコマンド)<br>① True, False<br>② 10 == 10 , 10 > 10 , 10 <= 10など<br>③ Entry.is_mouse_clicked(), Entry.is_key_pressed(\"Q\")など",
    "boolean_and_exampleCode": "def when_start():\n    while True:\n        if Entry.is_key_pressed(\"a\") and Entry.is_key_pressed(\"s\"):\n            Entry.add_effect(\"color\", 10)",
    "boolean_and_exampleDesc": "[スタート]ボタンをクリックしてキーボードの\"a\"と\"s\"キーを同時に押した時、色効果を10だけ加えます。",
    "boolean_or_desc": "AとBの判断のうち1つでもTrueの場合はTrue, そうじゃない場合はFalseと判断します。",
    "boolean_or_elements": "A, B-- TrueまたはFalseと判断できるコマンド入力(判断カテゴリーのコマンド)<br>① True, False<br>② 10 == 10 , 10 > 10 , 10 <= 10など<br>③ Entry.is_mouse_clicked(), Entry.is_key_pressed(\"Q\")など",
    "boolean_or_exampleCode": "def when_start():\n    while True:\n        if Entry.is_key_pressed(\"a\") or Entry.is_key_pressed(\"s\"):\n            Entry.add_effect(\"color\", 10)",
    "boolean_or_exampleDesc": "[スタート]ボタンをクリックすると、キーボードの\"a\"や\"s\"キーのうち何でも1つを押した時、オブジェクトに色効果を10加えます。",
    "boolean_not_desc": "A 判断がTrueならFalse、FalseならTrueと判断します。",
    "boolean_not_elements": "A-- TrueまたはFalseと判断できるコマンド入力(判断カテゴリーのコマンド)<br>① True, False<br>② 10 == 10 , 10 > 10 , 10 <= 10など<br>③ Entry.is_mouse_clicked(), Entry.is_key_pressed(\"Q\")など",
    "boolean_not_exampleCode": "def when_start():\n    while True:\n        if not Entry.is_mouse_clicked():\n            Entry.add_size(1)",
    "boolean_not_exampleDesc": "[スタート]ボタンをクリックすると、マウスをクリックしない間サイズが1ずつ大きくなります。",
    "calc_basic_desc": "AとBの演算値です。",
    "calc_basic_elements": "A, B-- 演算したい数字値<br>① + : AとBを加えた値<br>② - : AとBを引いた値<br>③ x : AとBをかけた値<br>④ / : AとBを割った値",
    "calc_basic_exampleCode": "def when_start():\n    Entry.print_for_sec(10 + 10, 2)\n    Entry.print_for_sec(10 - 10, 2)\n    Entry.print_for_sec(10 * 10, 2)\n    Entry.print_for_sec(10 / 10, 2)",
    "calc_basic_exampleDesc": "[スタート]ボタンをクリックすると、10と10を足した値、引いた値、かけた値、割った値をそれぞれ2秒間話します。",
    "calc_rand_desc": "AとBの間で選択された乱数の値です。(2つの数をすべて整数を入力した場合整数が、2つの数のうち1つでも少数を入力した場合は少数が乱数として選択されます。)",
    "calc_rand_elements": "A, B-- 乱数を抽出する範囲<br>① random.randint(A, B) : A, Bを整数で入力すると整数の範囲で乱数を抽出<br>② random.uniform(A, B) : A, Bを実数で入力すると実数範囲で乱数を抽出",
    "calc_rand_exampleCode": "def when_start():\n    Entry.print_for_sec(random.randint(1, 10), 2)\n    Entry.print_for_sec(random.uniform(0.1, 2), 2)",
    "calc_rand_exampleDesc": "[スタート]ボタンをクリックすると、1から10の間の整数のうち乱数を選び2秒間話します。その後、0.1から2の間の実数のうち乱数を選び2秒間話します。",
    "coordinate_mouse_desc": "マウスポインターのA座標値を表します。",
    "coordinate_mouse_elements": "A-- 次の選択肢のうち一つ<br>① \"x\"または\"X\"<br>② \"y\"または\"Y\"",
    "coordinate_mouse_exampleCode": "def when_start():\n    while True:\n        Entry.print(Entry.value_of_mouse_pointer(\"x\"))",
    "coordinate_mouse_exampleDesc": "[スタート]ボタンをクリックすると、オブジェクトがマウスポインターのx座標を続けて話します。",
    "coordinate_object_desc": "Aに関するB情報値です。",
    "coordinate_object_elements": "A-- 次の選択肢のうち1つ<br>① \"オブジェクト名\"<br>② \"self\"または\"自分\"%nextB-- 次の選択肢のうち一つ<br>① \"x\"または\"X\"<br>② \"y\"または\"Y\"<br>③ \"rotation\"または\"方向\"<br>④ \"direction\"または\"移動方向\"<br>⑤ \"size\" または\"サイズ\"<br>⑥ \"shape_number\"または\"模様番号\"<br>⑦ \"shape_name\"または\"模様名\"",
    "coordinate_object_exampleCode": "def when_start():\n    while True:\n        Entry.add_x(1)\n        Entry.print(Entry.value_of_object(\"オブジェクト\", \"x\"))\n",
    "coordinate_object_exampleDesc": "[スタート]ボタンをクリックすると続けてオブジェクトのx座標が1ずつ増加し、\"オブジェクト\"のx座標を話します。",
    "get_sound_volume_desc": "現在、作品に設定されているサウンドのサイズ値です。",
    "get_sound_volume_exampleCode": "def when_start():\n    while True:\n        Entry.print(Entry.value_of_sound_volume())",
    "get_sound_volume_exampleDesc": "[スタート]ボタンをクリックすると、オブジェクトがサウンドのサイズ値を続けて話します。",
    "quotient_and_mod_desc": "AとBの演算値です。",
    "quotient_and_mod_elements": "A, B-- 演算したい数字値<br>① // : A / Bの商に該当する値<br>② % : A / Bのあまりに該当する値",
    "quotient_and_mod_exampleCode": "def when_start():\n    Entry.print_for_sec(10 // 3, 2)\n    Entry.print_for_sec(10 % 3, 2)",
    "quotient_and_mod_exampleDesc": "[スタート]ボタンをクリックすると、10 / 3の商である3を2秒間話し、あまりである1を2秒間話します。",
    "calc_operation_desc": "Aの演算値です。",
    "calc_operation_elements": "A, B-- 演算したい数字値<br>① A ** 2 : Aを乗じた値<br>② math.sqrt(A): Aのルート値<br>③ math.sin(A): Aのサイン値<br>④ math.cos(A): Aのコサイン値<br>⑤ math.tan(A):  Aのタンジェント値 <br>⑥ math.asin(A): Aのアークサイン値<br>⑦ math.acos(A): Aのアークコサイン値<br>⑧ math.atan(): Aのアークタンジェント値<br>⑨ math.log10(A): Aのログ値<br>⑩ math.log(A): Aの自然ログ値<br>⑪ A - math.floor(A): Aの小数点部分<br>⑫ math.floor(A): Aの小数点以下切り捨て値<br>⑬ math.ceil(A): Aの小数点以下切り上げ値<br>⑭ math.round(A): Aの四捨五入値<br>⑮ math.factorial(A): Aの階乗値<br>⑯ math.fabs(A): Aの絶対値",
    "calc_operation_exampleCode": "def when_start():\n    Entry.print_for_sec(10 ** 2, 2)\n    Entry.print_for_sec(math.sqrt(9), 2)\n    Entry.print_for_sec(math.sin(90), 2)\n    Entry.print_for_sec(math.fabs(-10), 2)",
    "calc_operation_exampleDesc": "[スタート]ボタンをクリックすると、10の乗, 9のルート値, 90のサイン値, -10の絶対値をそれぞれ2秒間話します。",
    "get_project_timer_value_desc": "このコマンドが実行された瞬間、ストップウォッチに保存された値です。",
    "get_project_timer_value_exampleCode": "def when_start():\n    Entry.timer(\"start\")\n    Entry.wait_for_sec(3)\n    Entry.timer(\"stop\")\n    Entry.timer_view(\"hide\")\n    Entry.print(Entry.value_of_timer())",
    "get_project_timer_value_exampleDesc": "[スタート]ボタンをクリックするとストップウォッチを開始します。3秒後にストップウォッチを停止してストップウォッチウィンドウを隠します。その後、ストップウォッチ値を話します。",
    "choose_project_timer_action_desc": "ストップウォッチの動作をAにします。<br>(このコマンドを使うと実行画面に「ストップウォッチウィンドウ」が作成されます。)",
    "choose_project_timer_action_elements": "A-- 次の選択肢のうち一つ<br>① \"start\" : ストップウォッチを開始<br>② \"stop\" : ストップウォッチを停止<br>③ \"reset\" : ストップウォッチを初期化",
    "choose_project_timer_action_exampleCode": "def when_start():\n    Entry.timer(\"start\")\n    Entry.wait_for_sec(3)\n    Entry.timer(\"stop\")\n    Entry.timer_view(\"hide\")\n    Entry.print(Entry.value_of_timer())",
    "choose_project_timer_action_exampleDesc": "[スタート]ボタンをクリックすると、ストップウォッチを開始します。3秒後にストップウォッチを停止してストップウォッチウィンドウを隠します。その後、ストップウォッチ値を話します。",
    "set_visible_project_timer_desc": "実行画面のストップウォッチウィンドウをAに設定します。",
    "set_visible_project_timer_elements": "A-- 次の選択肢のうち一つ<br>① \"hide\" : ストップウォッチウィンドウを非表示<br>② \"show\" : ストップウォッチウィンドウを表示",
    "set_visible_project_timer_exampleCode": "def when_start():\n    Entry.timer(\"start\")\n    Entry.wait_for_sec(3)\n    Entry.timer(\"stop\")\n    Entry.timer_view(\"hide\")\n    Entry.print(Entry.value_of_timer())",
    "set_visible_project_timer_exampleDesc": "[スタート]ボタンをクリックすると、ストップウォッチを開始します。3秒後にストップウォッチを停止してストップウォッチウィンドウを隠します。その後、ストップウォッチ値を話します。",
    "get_date_desc": "現在のAに関する値です。",
    "get_date_elements": "A-- 次の選択肢のうち1つ<br>① \"year\" : 現在の年度値<br>② \"month\" : 現在の月値<br>③ \"day\" : 現在の日値<br>④ \"hour\" : 現在の時間値<br>⑤ \"minute\" : 現在の分値<br>⑥ \"second\" : 現在の秒値",
    "get_date_exampleCode": "def when_start():\n    Entry.print(Entry.value_of_current_time(\"year\") + \"年\" + Entry.value_of_current_time(\"month\") + \"月\")",
    "get_date_exampleDesc": "[スタート]ボタンをクリックすると、オブジェクトが現在の年度と月を話します。",
    "distance_something_desc": "自分とAまでの距離値です。",
    "distance_something_elements": "A-- 次の選択肢のうち一つ<br>① \"オブジェクト名\"<br>② \"mouse_pointer\"または\"マウスポインター\"",
    "distance_something_exampleCode": "def when_start():\n    while True:\n        Entry.print(Entry.value_of_distance_to(\"mouse_pointer\"))",
    "distance_something_exampleDesc": "[スタート]ボタンをクリックすると、オブジェクトがマウスポインターとの距離を続けて話します。",
    "get_sound_duration_desc": "サウンドAの長さ(秒)値です。",
    "get_sound_duration_elements": "A-- \"サウンド名\"",
    "get_sound_duration_exampleCode": "def when_start():\n    Entry.print(Entry.value_of_sound_length_of(\"サウンド\"))",
    "get_sound_duration_exampleDesc": "[スタート]ボタンをクリックすると、オブジェクトが\"サウンド\"の長さを話します。",
    "get_user_name_desc": "作品を実行しているユーザーのIDの値です。",
    "get_user_name_exampleCode": "def when_start():\n    Entry.print(Entry.value_of_username())",
    "get_user_name_exampleDesc": "[スタート]ボタンをクリックすると、作品を実行しているユーザーのID値を話します。",
    "get_nickname_desc": "作品をプレーしているユーザーのニックネーム値です。",
    "get_nickname_exampleCode": "def when_start():\n    Entry.print(Entry.value_of_nickname())",
    "get_nickname_exampleDesc": "[スタート]ボタンをクリックすると、作品をプレーしているユーザーのニックネーム値を話します。",
    "length_of_string_desc": "入力した文字値のスペースを含む文字数です。",
    "length_of_string_elements": "A-- \"文字列\"",
    "length_of_string_exampleCode": "def when_start():\n    Entry.print_for_sec(len(\"やあ\"), 2)\n    Entry.print_for_sec(len(\"エントリー\"), 2)",
    "length_of_string_exampleDesc": "[スタート]ボタンをクリックすると、オブジェクトが\"やあ\"と\"エントリー\"の文字数をそれぞれ2秒間話します。",
    "combine_something_desc": "A 文字列とB 文字列を結合した値です。(A、Bのうち1つが数字なら文字列に変えて処理され、2つとも数字なら加法演算で処理されます。)",
    "combine_something_elements": "A, B-- \"文字列\"",
    "combine_something_exampleCode": "def when_start():\n    Entry.print(\"やあ! \" + \"エントリー\")",
    "combine_something_exampleDesc": "[スタート]ボタンをクリックすると、オブジェクトが\"やあ!\"と\"エントリー\"が結合した\"やあ! エントリー\"を話します。",
    "char_at_desc": "A 文字列のB番目の文字値です。(最初の文字の位置は0から始まります。)",
    "char_at_elements": "A-- \"文字列\"%nextB-- 検索したい文字列の位置",
    "char_at_exampleCode": "def when_start():\n    Entry.print(\"やあ、エントリー!\"[0])",
    "char_at_exampleDesc": "[スタート]ボタンをクリックすると、オブジェクトが\"やあ、エントリー!\"の0番目の文字である\"や\"を話します。",
    "substring_desc": "A 文字列の B位置から C-1位置までの値です。(最初の文字の位置は0から始まります。)",
    "substring_elements": "A-- \"文字列\"%nextB-- 含まれる文字列の開始位置<br>最初の文字は0から開始%nextC-- 文字列を含まない位置",
    "substring_exampleCode": "def when_start():\n    Entry.print(\"やあ、エントリー!\"[1:5])",
    "substring_exampleDesc": "[スタート]ボタンをクリックすると、オブジェクトが\"やあ、エントリー!\"の1から4番目の文字である\"あ、エント\"を話します。",
    "index_of_string_desc": "A文字列でB文字列が最初に登場する位置の値です。(最初の文字の位置は0から始まります。)",
    "index_of_string_elements": "A, B-- \"文字列\"",
    "index_of_string_exampleCode": "def when_start():\n    Entry.print(\"やあ、エントリー!\".find(\"エントリー\"))",
    "index_of_string_exampleDesc": "[スタート]ボタンをクリックすると、オブジェクトが\"やあ、エントリー!\"で \"エントリー\"が最初に登場する位置の3を話します。",
    "replace_string_desc": "A文字列からB文字列をすべて探し、C文字列に置き換えた値です。<br>(アルファベット入力時、大文字と小文字を区別します。)",
    "replace_string_elements": "A, B, C-- \"文字列\"",
    "replace_string_exampleCode": "def when_start():\n    Entry.print(\"やあ、エントリー!\".replace( \"やあ\", \"嬉しいな\"))",
    "replace_string_exampleDesc": "[スタート]ボタンをクリックすると、オブジェクトが\"やあ、エントリー!\"で\"やあ\"を\"嬉しいな\"に置き換えた\"嬉しいな、エントリー!\"を話します。",
    "change_string_case_desc": "Aのすべてのアルファベットを大文字または小文字に置き換えた文字値です。",
    "change_string_case_elements": "A-- \"文字列\"<br>① A.upper(): Aのすべてのアルファベットを大文字に置き換えた値<br>② A.lower() : Aのすべてのアルファベットを小文字に置き換えた値",
    "change_string_case_exampleCode": "def when_start():\n    Entry.print_for_sec(\"Hello Entry!\".upper(), 2)\n    Entry.print_for_sec(\"Hello Entry!\".lower(), 2)",
    "change_string_case_exampleDesc": "[スタート]ボタンをクリックすると、オブジェクトが\"Hello Entry!\"をすべて大文字に置き換えた\"HELLO ENTRY!\"を2秒間話した後、すべて小文字に置き換えた\"hello entry!\"を2秒間話します。",
    "ask_and_wait_desc": "オブジェクトがAの内容を吹き出しで尋ね、回答の入力を受けます。回答は実行画面またはコンソールウィンドウで入力でき、入力された値は'Entry.answer()'に保存されます。<br>(このコマンドを使うと実行画面に「回答ウィンドウ」が作成されます。)",
    "ask_and_wait_elements": "A-- \"文字列\"",
    "ask_and_wait_exampleCode": "def when_start():\n    Entry.input(\"名前を入力してみてください。\")\n    Entry.print(Entry.answer() + \" 嬉しいな!\")",
    "ask_and_wait_exampleDesc": "[スタート]ボタンをクリックすると、オブジェクトが\"名前を入力してみてください。\"と吹き出しで尋ねます。名前を入力すると\"(入力した名前) 嬉しいな!\"と話します。",
    "get_canvas_input_value_desc": "Entry.input(A) コマンドにより実行画面またはコンソールで入力された値です。",
    "get_canvas_input_value_exampleCode": "def when_start():\n    Entry.input(\"名前を入力してみてください。\")\n    Entry.print(Entry.answer() + \" 嬉しいな!\")",
    "get_canvas_input_value_exampleDesc": "[スタート]ボタンをクリックすると、オブジェクトが\"名前を入力してみてください。\"と吹き出しで尋ねます。名前を入力すると\"(入力した名前)嬉しいな!\"と話します。",
    "set_visible_answer_desc": "実行画面の回答ウィンドウをAに設定します。",
    "set_visible_answer_elements": "A-- 次の選択肢のうち1つ<br>① \"hide\" : 回答ウィンドウを非表示<br>② \"show\" : 回答ウィンドウを表示",
    "set_visible_answer_exampleCode": "def when_start():\n    Entry.answer_view(\"hide\")\n    Entry.input(\"年齢を入力してください。\")\n    Entry.print(Entry.answer())",
    "set_visible_answer_exampleDesc": "[スタート]ボタンをクリックすると回答ウィンドウが非表示になり、オブジェクトが\"年齢を入力してください。\"と吹き出しで尋ねます。年齢を入力するとオブジェクトが入力した年齢を話します。",
    "get_variable_desc": "A 変数に保存された値です。",
    "get_variable_elements": "A-- 変数名<br>① すべてのオブジェクトで使用: A<br>② このオブジェクトで使用: self.A",
    "get_variable_exampleCode": "age = 16\n\ndef when_start():\n    Entry.print(age)",
    "get_variable_exampleDesc": "ageという変数を作成してその値を16にします。[スタート]ボタンをクリックすると、オブジェクトがage変数に入っている値である\"16\"を話します。",
    "change_variable_desc": "A変数にBだけ足します。",
    "change_variable_elements": "A-- 変数名<br>① すべてのオブジェクトで使用: A<br>② このオブジェクトで使用: self.A%nextB-- 数字値",
    "change_variable_exampleCode": "age = 16\n\ndef when_start():\n    Entry.print_for_sec(age, 2)\n    age += 2\n    Entry.print_for_sec(age, 2)",
    "change_variable_exampleDesc": "ageという変数を作成してその値を16にします。[スタート]ボタンをクリックすると、オブジェクトがage変数に入っている値である\"16\"を2秒間話します。その後、age変数に2を足し、足した値である\"18\"を2秒間話します。",
    "set_variable_desc": "A変数の値をBにします。もしA変数がない場合、[属性]タブにA変数が自動作成されます。",
    "set_variable_elements": "A-- 変数名<br>① すべてのオブジェクトで使用: A<br>② このオブジェクトで使用: self.A%nextB-- 変数に入れる値<br>① 文字: \"やあ!\", \"エントリー\"など<br>② 数字: 0, 10, 35など",
    "set_variable_exampleCode": "age = 16\n\ndef when_start():\n    Entry.print(age)",
    "set_variable_exampleDesc": "ageという変数を作成してその値を16にします。[スタート]ボタンをクリックすると、オブジェクトがage変数に入っている値である\"16\"を話します。",
    "show_variable_desc": "A 変数ウィンドウを実行画面に表示させます。",
    "show_variable_elements": "A-- \"変数名\"<br>① すべてのオブジェクトで使用: \"A\"<br>② このオブジェクトで使用: \"self.A\"",
    "show_variable_exampleCode": "age = 16\n\ndef when_start():\n    Entry.hide_variable(\"age\")\n    Entry.wait_for_sec(2)\n    age = 20\n    Entry.show_variable(\"age\")",
    "show_variable_exampleDesc": "ageという変数を作成してその値を16にします。[スタート]ボタンをクリックすると、age変数ウィンドウを実行画面で非表示にします。2秒後に変数値を17に変更し、age変数ウィンドウを実行画面に表示させます。",
    "hide_variable_desc": "A 変数ウィンドウを実行画面で非表示にします。",
    "hide_variable_elements": "A-- \"変数名\"<br>① すべてのオブジェクトで使用: \"A\"<br>② このオブジェクトで使用: \"self.A\"",
    "hide_variable_exampleCode": "age = 16\n\ndef when_start():\n    Entry.hide_variable(\"age\")\n    Entry.print_for_sec(age, 2)",
    "hide_variable_exampleDesc": "ageという変数を作成してその値を16にします。[スタート]ボタンをクリックするとage変数ウィンドウを実行画面で非表示にし、オブジェクトがage変数に入っている値である\"16\"を2秒間話します。",
    "value_of_index_from_list_desc": "A リストでB位置の項目値を表します。<br>(最初の項目の位置は0から始まります。)",
    "value_of_index_from_list_elements": "A-- リスト名<br>① すべてのオブジェクトで使用: A<br>② このオブジェクトで使用: self.A%nextB-- リスト項目の位置",
    "value_of_index_from_list_exampleCode": "basket = [\"apple\", \"orange\", \"pear\", \"grape\"]\n\ndef when_start():\n    Entry.print(basket[1])\n",
    "value_of_index_from_list_exampleDesc": "basketというリストを作成して4つの項目を挿入します。[スタート]ボタンをクリックすると、オブジェクトがbasketリストの1番目の項目であるorangeを話します。",
    "add_value_to_list_desc": "A リストの最後の項目にB値が追加されます。",
    "add_value_to_list_elements": "A-- リスト名<br>① すべてのオブジェクトで使用: A<br>② このオブジェクトで使用: self.A%nextB-- リストに入れる項目値<br>① 文字: \"やあ!\", \"エントリー\"など<br>② 数字: 0, 10, 35など",
    "add_value_to_list_exampleCode": "basket = [\"apple\", \"orange\", \"pear\", \"grape\"]\n\ndef when_start():\n    basket.append(\"juice\")\n    Entry.print(basket[4])",
    "add_value_to_list_exampleDesc": "basketというリストを作成して4つの項目を挿入します。[スタート]ボタンをクリックすると、\"juice\"をbasketの最後の項目に追加します。オブジェクトはbasketの4番目の項目である\"juice\"を話します。",
    "remove_value_from_list_desc": "A リストのB位置にある項目を削除します。<br>(最初の項目の位置は0から始まります。)",
    "remove_value_from_list_elements": "A-- リスト名<br>① すべてのオブジェクトで使用: A<br>② このオブジェクトで使用: self.A%nextB-- リスト項目の位置値",
    "remove_value_from_list_exampleCode": "basket = [\"apple\", \"orange\", \"pear\", \"grape\"]\ndef when_start():\n    basket.pop(0)\n    Entry.print(basket[0])",
    "remove_value_from_list_exampleDesc": "basketというリストを作成して4つの項目を挿入します。[スタート]ボタンをクリックすると、basketの0番目の項目であるappleを削除します。オブジェクトは新しくbasketの0番目の項目になった\"orange\"を話します。",
    "insert_value_to_list_desc": "A リストのB位置にC項目を挿入します。<br>(最初の項目の位置は0から始まります。B位置より後にある各項目の順番は1つずつずれます。)",
    "insert_value_to_list_elements": "A-- リスト名<br>① すべてのオブジェクトで使用: A<br>② このオブジェクトで使用: self.A%nextB-- リスト項目の位置%nextC-- リストに入れる項目値<br>① 文字: \"やあ!\", \"エントリー\"など<br>② 数字: 0, 10, 35など",
    "insert_value_to_list_exampleCode": "basket = [\"apple\", \"orange\", \"pear\", \"grape\"]\n\ndef when_start():\n    basket.insert(1, \"juice\")\n    Entry.print(basket[2])",
    "insert_value_to_list_exampleDesc": "basketというリストを作成して4つの項目を挿入します。[スタート]ボタンをクリックすると、basketの最初の位置に項目 \"juice\"を入れます。オブジェクトは新しくbasketの2番目の項目になった\"orange\"を話します。",
    "change_value_list_index_desc": "AリストでB位置にある項目の値をC値に変更します。<br>(最初の項目の位置は0から始まります。)",
    "change_value_list_index_elements": "A-- リスト名<br>① すべてのオブジェクトで使用: A<br>② このオブジェクトで使用: self.A%nextB-- リスト項目の位置%nextC-- リストに入れる項目値<br>① 文字: \"やあ!\", \"エントリー\"など<br>② 数字: 0, 10, 35など",
    "change_value_list_index_exampleCode": "basket = [\"apple\", \"orange\", \"pear\", \"grape\"]\n\ndef when_start():\n    basket[0] = \"juice\"\n    Entry.print(basket[0])",
    "change_value_list_index_exampleDesc": "basketというリストを作成して4つの項目を挿入します。[スタート]ボタンをクリックすると、basketの0番目の位置の項目 \"apple\"を\"juice\"に変更します。オブジェクトは変更されたbasketの0番目の項目 \"juice\"を話します。",
    "length_of_list_desc": "A リストが保有した項目の個数値です。",
    "length_of_list_elements": "A-- リスト名<br>① すべてのオブジェクトで使用: A<br>② このオブジェクトで使用: self.A",
    "length_of_list_exampleCode": "basket = [\"apple\", \"orange\", \"pear\", \"grape\"]\n\ndef when_start():\n    Entry.print(len(basket))",
    "length_of_list_exampleDesc": "basketというリストを作成して4つの項目を挿入します。[スタート]ボタンをクリックすると、オブジェクトは basketの項目個数である4を話します。",
    "is_included_in_list_desc": "A値を持つ項目がBリストに含まれているか確認します。",
    "is_included_in_list_elements": "A-- リストの項目値<br>① 文字: \"やあ!\", \"エントリー\"など<br>② 数字: 0, 10, 35など%nextB-- リスト名<br>① すべてのオブジェクトで使用: A<br>② このオブジェクトで使用: self.A",
    "is_included_in_list_exampleCode": "basket = [\"apple\", \"orange\", \"pear\", \"grape\"]\n\ndef when_start():\n    if \"apple\" in basket:\n        Entry.print(\"リンゴがあるよ!\")",
    "is_included_in_list_exampleDesc": "basketというリストを作成して4つの項目を挿入します。[スタート]ボタンをクリックすると、basket リストに\"apple\"項目があるかを確認します。\"apple\"項目があるため、オブジェクトは\"リンゴがあるよ!\"と話します。",
    "show_list_desc": "選択したリストウィンドウを実行画面に表示させます。",
    "show_list_elements": "A-- \"リスト名\"<br>① すべてのオブジェクトで使用: \"A\"<br>② このオブジェクトで使用: \"self.A\"",
    "show_list_exampleCode": "basket = [\"apple\", \"orange\", \"pear\", \"grape\"]\n\ndef when_start():\n    Entry.hide_list(\"basket\")\n    Entry.wait_for_sec(2)\n    Entry.show_list(\"basket\")",
    "show_list_exampleDesc": "basketというリストを作成して4つの項目を挿入します。[スタート]ボタンをクリックすると、basket リストを2秒間非表示にした後で表示します。",
    "hide_list_desc": "選択したリストウィンドウを実行画面で非表示にします。",
    "hide_list_elements": "A-- \"リスト名\"<br>① すべてのオブジェクトで使用: \"A\"<br>② このオブジェクトで使用: \"self.A\"",
    "hide_list_exampleCode": "basket = [\"apple\", \"orange\", \"pear\", \"grape\"]\n\ndef when_start():\n    Entry.hide_list(\"basket\")\n    Entry.wait_for_sec(2)\n    Entry.show_list(\"basket\")",
    "hide_list_exampleDesc": "basketというリストを作成して4つの項目を挿入します。[スタート]ボタンをクリックすると、basketリストを2秒間非表示にした後で表示します。",
    "boolean_and_or_desc": "AとBの判断値を確認してTrueまたはFalseと判断します。",
    "boolean_and_or_elements": "A, B-- TrueまたはFalseと判断できるコマンド入力(判断カテゴリーのコマンド)<br>① and : AとBの判断がすべてTrueの場合はTrue、そうじゃない場合はFalse<br>② or : AとBの判断のうち1つでもTrueの場合True、そうじゃない場合はFalse",
    "boolean_and_or_exampleCode": "def when_start():\n    while True:\n        if Entry.is_key_pressed(\"a\") and Entry.is_key_pressed(\"s\"):\n            Entry.add_effect(\"color\", 10)",
    "boolean_and_or_exampleDesc": "[スタート]ボタンをクリックし、キーボードの\"a\"と\"s\"キーを同時に押した時に色効果を10加えます。",
    "check_weather_desc": "B날짜에 C지역의 날씨가 A인 경우 True로 판단합니다.",
    "check_weather_elements": "A-- 아래 선택지 중 하나<br>①    \"sunny\" : 맑음<br>②    \"partly cloudy\" : 구름조금<br>③    \"mostly cloudy\" : 구름많음<br>④    \"cloudy\" : 흐림<br>⑤    \"rainy\" : 비<br>⑥    \"sleet\" : 진눈깨비<br>⑦    \"snowy\" : 눈%nextB-- 아래 선택지 중 하나<br>①    \"yesterday\" : 어제<br>②    \"today\" : 오늘<br>③    \"tomorrow\" : 내일<br>④    \"After 2 days\" : 모레<br>⑤    \"After 3 days\" : 3일 후<br>⑥    \"After 4 days\" : 4일 후<br>⑦    \"After 5 days\" : 5일 후<br>⑧    \"After 6 days\" : 6일 후%nextC-- 아래 선택지 중 하나<br>①    \"Seoul\" : 서울<br>②    \"Gangwon-do\" : 강원<br>③    \"Gyeonggi-do\" : 경기<br>④    \"Gyeongsangnam-do\" : 경남<br>⑤    \"Gyeongsangbuk-do\" : 경북<br>⑥    \"Gwangju\" : 광주<br>⑦    \"Daegu\" : 대구<br>⑧    \"Daejeon\" : 대전<br>⑨    \"Busan\" : 부산<br>⑩    \"Sejong\" : 세종<br>⑪    \"Ulsan\" : 울산<br>⑫    \"Incheon\" : 인천<br>⑬    \"Jeollanam-do\" : 전남<br>⑭    \"Jeollabuk-do\" : 전북<br>⑮    \"Jeju\" : 제주<br>Ⓐ \"Chungcheongnam-do\" : 충남<br>Ⓑ \"Chungcheongbuk-do\": 충북",
    "check_weather_exampleCode": "def when_start():\n    if Weather.is_condition_sunny(\"today\", \"Seoul\"):\n        Entry.print(\"오늘 서울의 날씨는 맑습니다.\")",
    "check_weather_exampleDesc": "[시작하기]버튼을 클릭하면 오늘 서울의 날씨가 맑은지 확인합니다. 만약 서울의 날씨가 맑다면 오브젝트가 \"오늘 서울의 날씨는 맑습니다.\"라고 말합니다.​",
    "check_finedust_desc": "선택한 지역의 현재 미세먼지 정보를 실제 미세먼지 등급과 비교하여 일치하는 경우 ‘참’으로 판단합니다.",
    "check_finedust_elements": "A-- 아래 선택지 중 하나<br>①    \"good\" : 좋음<br>②    \"normal\" : 보통<br>③    \"bad\" : 나쁨<br>④    \"very bad\" : 매우나쁨%nextB-- 아래 선택지 중 하나<br>①    \"Seoul\" : 서울<br>②    \"Gangwon-do\" : 강원<br>③    \"Gyeonggi-do\" : 경기<br>④    \"Gyeongsangnam-do\" : 경남<br>⑤    \"Gyeongsangbuk-do\" : 경북<br>⑥    \"Gwangju\" : 광주<br>⑦    \"Daegu\" : 대구<br>⑧    \"Daejeon\" : 대전<br>⑨    \"Busan\" : 부산<br>⑩    \"Sejong\" : 세종<br>⑪    \"Ulsan\" : 울산<br>⑫    \"Incheon\" : 인천<br>⑬    \"Jeollanam-do\" : 전남<br>⑭    \"Jeollabuk-do\" : 전북<br>⑮    \"Jeju\" : 제주<br>Ⓐ \"Chungcheongnam-do\" : 충남<br>Ⓑ \"Chungcheongbuk-do\": 충북",
    "check_finedust_exampleCode": "def when_start():\n    if Weather.is_current_finedust_grade_good(\"Seoul\"):\n        Entry.print(\"현재 서울의 미세먼지 등급은 좋음입니다.\")",
    "check_finedust_exampleDesc": "[시작하기]버튼을 클릭하면 현재 서울의 미세먼지 등급이 좋음인지 확인합니다. 만약 서울의 날씨가 맑다면 오브젝트가 “오늘 서울의 미세먼지 등급은 좋음입니다.”라고 말합니다.​",
    "get_weather_data_desc": "선택한 날짜와 지역의 각종 날씨 정보값(최저기온, 최고기온, 습도, 강수량, 강수확률, 풍속)입니다.",
    "get_weather_data_elements": "A-- 아래 선택지 중 하나<br>①    \"the lowest temperature\" : 최저기온<br>②    \"the highest temperature\" : 최고기온<br>③    \"humidity\" : 습도<br>④    \"precipitation\" : 강수량<br>⑤    \"precipitation probability\" : 강수확률<br>⑥    \"wind speed\" : 풍속%nextB-- 아래 선택지 중 하나<br>①    \"yesterday\" : 어제<br>②    \"today\" : 오늘<br>③    \"tomorrow\" : 내일<br>④    \"After 2 days\" : 모레<br>⑤    \"After 3 days\" : 3일 후<br>⑥    \"After 4 days\" : 4일 후<br>⑦    \"After 5 days\" : 5일 후<br>⑧    \"After 6 days\" : 6일 후%nextC-- 아래 선택지 중 하나<br>①    \"Seoul\" : 서울<br>②    \"Gangwon-do\" : 강원<br>③    \"Gyeonggi-do\" : 경기<br>④    \"Gyeongsangnam-do\" : 경남<br>⑤    \"Gyeongsangbuk-do\" : 경북<br>⑥    \"Gwangju\" : 광주<br>⑦    \"Daegu\" : 대구<br>⑧    \"Daejeon\" : 대전<br>⑨    \"Busan\" : 부산<br>⑩    \"Sejong\" : 세종<br>⑪    \"Ulsan\" : 울산<br>⑫    \"Incheon\" : 인천<br>⑬    \"Jeollanam-do\" : 전남<br>⑭    \"Jeollabuk-do\" : 전북<br>⑮    \"Jeju\" : 제주<br>Ⓐ \"Chungcheongnam-do\" : 충남<br>Ⓑ \"Chungcheongbuk-do\": 충북",
    "get_weather_data_exampleCode": "def when_start():\n    Entry.print(Weather.get_lowest_temperature(\"today\", \"Seoul\"))",
    "get_weather_data_exampleDesc": "[시작하기]버튼을 클릭하면 오브젝트가 오늘 서울의 최저기온을 말합니다.​",
    "get_current_weather_data_desc": "현재 B지역의 A 날씨 정보값을 의미합니다.",
    "get_current_weather_data_elements": "A-- 아래 선택지 중 하나<br>①    \"Seoul\" : 서울<br>②    \"Gangwon-do\" : 강원<br>③    \"Gyeonggi-do\" : 경기<br>④    \"Gyeongsangnam-do\" : 경남<br>⑤    \"Gyeongsangbuk-do\" : 경북<br>⑥    \"Gwangju\" : 광주<br>⑦    \"Daegu\" : 대구<br>⑧    \"Daejeon\" : 대전<br>⑨    \"Busan\" : 부산<br>⑩    \"Sejong\" : 세종<br>⑪    \"Ulsan\" : 울산<br>⑫    \"Incheon\" : 인천<br>⑬    \"Jeollanam-do\" : 전남<br>⑭    \"Jeollabuk-do\" : 전북<br>⑮    \"Jeju\" : 제주<br>Ⓐ \"Chungcheongnam-do\" : 충남<br>Ⓑ \"Chungcheongbuk-do\": 충북%nextB-- 아래 선택지 중 하나<br>①    \"temperature\" : 기온<br>②    \"concentration of fine dust\" : 미세먼지농도",
    "get_current_weather_data_exampleCode": "def when_start():\n    Entry.print(Weather.get_current_temperature(\"Seoul\"))",
    "get_current_weather_data_exampleDesc": "[시작하기]버튼을 클릭하면 오브젝트가 현재 서울의 기온을 말합니다.",
    "get_today_temperature_desc": "오늘 A지역의 B 시간대 기온 정보값을 의미합니다.",
    "get_today_temperature_elements": "A-- 아래 선택지 중 하나<br>①    \"Seoul\" : 서울<br>②    \"Gangwon-do\" : 강원<br>③    \"Gyeonggi-do\" : 경기<br>④    \"Gyeongsangnam-do\" : 경남<br>⑤    \"Gyeongsangbuk-do\" : 경북<br>⑥    \"Gwangju\" : 광주<br>⑦    \"Daegu\" : 대구<br>⑧    \"Daejeon\" : 대전<br>⑨    \"Busan\" : 부산<br>⑩    \"Sejong\" : 세종<br>⑪    \"Ulsan\" : 울산<br>⑫    \"Incheon\" : 인천<br>⑬    \"Jeollanam-do\" : 전남<br>⑭    \"Jeollabuk-do\" : 전북<br>⑮    \"Jeju\" : 제주<br>Ⓐ \"Chungcheongnam-do\" : 충남<br>Ⓑ \"Chungcheongbuk-do\": 충북%nextB-- 아래 선택지 중 하나<br>①    \"00\" : 당일 00시 측정된 기온값<br>②    \"03\" : 당일 03시 측정된 기온값<br>③    \"06\" : 당일 06시 측정된 기온값<br>④    \"09\" : 당일 09시 측정된 기온값<br>⑤    \"12\" : 당일 12시 측정된 기온값<br>⑥    \"15\" : 당일 15시 측정된 기온값<br>⑦    \"18\" : 당일 18시 측정된 기온값<br>⑧    \"21\" : 당일 21시 측정된 기온값",
    "get_today_temperature_exampleCode": "def when_start():\n    Entry.print(Weather.get_today_temperature(\"Seoul\", 00))",
    "get_today_temperature_exampleDesc": "[시작하기]버튼을 클릭하면 오브젝트가 오늘 서울의 00시 기온을 말합니다.​",
    "check_city_weather_desc": "B날짜에 C지역의 날씨가 A인 경우 True로 판단합니다.",
    "check_city_weather_elements": "A-- 아래 선택지 중 하나<br>①    \"sunny\" : 맑음<br>②    \"partly cloudy\" : 구름조금<br>③    \"mostly cloudy\" : 구름많음<br>④    \"cloudy\" : 흐림<br>⑤    \"rainy\" : 비<br>⑥    \"sleet\" : 진눈깨비<br>⑦    \"snowy\" : 눈%nextB-- 아래 선택지 중 하나<br>①    \"yesterday\" : 어제<br>②    \"today\" : 오늘<br>③    \"tomorrow\" : 내일<br>④    \"After 2 days\" : 모레<br>⑤    \"After 3 days\" : 3일 후<br>⑥    \"After 4 days\" : 4일 후<br>⑦    \"After 5 days\" : 5일 후<br>⑧    \"After 6 days\" : 6일 후%nextC-- 아래 선택지 중 하나<br>①    \"Seoul\" : 서울<br>②    \"Gangwon-do\" : 강원<br>③    \"Gyeonggi-do\" : 경기<br>④    \"Gyeongsangnam-do\" : 경남<br>⑤    \"Gyeongsangbuk-do\" : 경북<br>⑥    \"Gwangju\" : 광주<br>⑦    \"Daegu\" : 대구<br>⑧    \"Daejeon\" : 대전<br>⑨    \"Busan\" : 부산<br>⑩    \"Sejong\" : 세종<br>⑪    \"Ulsan\" : 울산<br>⑫    \"Incheon\" : 인천<br>⑬    \"Jeollanam-do\" : 전남<br>⑭    \"Jeollabuk-do\" : 전북<br>⑮    \"Jeju\" : 제주<br>Ⓐ \"Chungcheongnam-do\" : 충남<br>Ⓑ \"Chungcheongbuk-do\": 충북",
    "check_city_weather_exampleCode": "def when_start():\n    if Weather.is_condition_sunny(\"today\", \"Seoul\"):\n        Entry.print(\"오늘 서울의 날씨는 맑습니다.\")",
    "check_city_weather_exampleDesc": "[시작하기]버튼을 클릭하면 오늘 서울의 날씨가 맑은지 확인합니다. 만약 서울의 날씨가 맑다면 오브젝트가 \"오늘 서울의 날씨는 맑습니다.\"라고 말합니다.​",
    "check_city_finedust_desc": "선택한 지역의 현재 미세먼지 정보를 실제 미세먼지 등급과 비교하여 일치하는 경우 ‘참’으로 판단합니다.",
    "check_city_finedust_elements": "A-- 아래 선택지 중 하나<br>①    \"good\" : 좋음<br>②    \"normal\" : 보통<br>③    \"bad\" : 나쁨<br>④    \"very bad\" : 매우나쁨%nextB-- 아래 선택지 중 하나<br>①    \"Seoul\" : 서울<br>②    \"Gangwon-do\" : 강원<br>③    \"Gyeonggi-do\" : 경기<br>④    \"Gyeongsangnam-do\" : 경남<br>⑤    \"Gyeongsangbuk-do\" : 경북<br>⑥    \"Gwangju\" : 광주<br>⑦    \"Daegu\" : 대구<br>⑧    \"Daejeon\" : 대전<br>⑨    \"Busan\" : 부산<br>⑩    \"Sejong\" : 세종<br>⑪    \"Ulsan\" : 울산<br>⑫    \"Incheon\" : 인천<br>⑬    \"Jeollanam-do\" : 전남<br>⑭    \"Jeollabuk-do\" : 전북<br>⑮    \"Jeju\" : 제주<br>Ⓐ \"Chungcheongnam-do\" : 충남<br>Ⓑ \"Chungcheongbuk-do\": 충북",
    "check_city_finedust_exampleCode": "def when_start():\n    if Weather.is_current_finedust_grade_good(\"Seoul\"):\n        Entry.print(\"현재 서울의 미세먼지 등급은 좋음입니다.\")",
    "check_city_finedust_exampleDesc": "[시작하기]버튼을 클릭하면 현재 서울의 미세먼지 등급이 좋음인지 확인합니다. 만약 서울의 날씨가 맑다면 오브젝트가 “오늘 서울의 미세먼지 등급은 좋음입니다.”라고 말합니다.​",
    "get_city_weather_data_desc": "선택한 날짜와 지역의 각종 날씨 정보값(최저기온, 최고기온, 습도, 강수량, 강수확률, 풍속)입니다.",
    "get_city_weather_data_elements": "A-- 아래 선택지 중 하나<br>①    \"the lowest temperature\" : 최저기온<br>②    \"the highest temperature\" : 최고기온<br>③    \"humidity\" : 습도<br>④    \"precipitation\" : 강수량<br>⑤    \"precipitation probability\" : 강수확률<br>⑥    \"wind speed\" : 풍속%nextB-- 아래 선택지 중 하나<br>①    \"yesterday\" : 어제<br>②    \"today\" : 오늘<br>③    \"tomorrow\" : 내일<br>④    \"After 2 days\" : 모레<br>⑤    \"After 3 days\" : 3일 후<br>⑥    \"After 4 days\" : 4일 후<br>⑦    \"After 5 days\" : 5일 후<br>⑧    \"After 6 days\" : 6일 후%nextC-- 아래 선택지 중 하나<br>①    \"Seoul\" : 서울<br>②    \"Gangwon-do\" : 강원<br>③    \"Gyeonggi-do\" : 경기<br>④    \"Gyeongsangnam-do\" : 경남<br>⑤    \"Gyeongsangbuk-do\" : 경북<br>⑥    \"Gwangju\" : 광주<br>⑦    \"Daegu\" : 대구<br>⑧    \"Daejeon\" : 대전<br>⑨    \"Busan\" : 부산<br>⑩    \"Sejong\" : 세종<br>⑪    \"Ulsan\" : 울산<br>⑫    \"Incheon\" : 인천<br>⑬    \"Jeollanam-do\" : 전남<br>⑭    \"Jeollabuk-do\" : 전북<br>⑮    \"Jeju\" : 제주<br>Ⓐ \"Chungcheongnam-do\" : 충남<br>Ⓑ \"Chungcheongbuk-do\": 충북",
    "get_city_weather_data_exampleCode": "def when_start():\n    Entry.print(Weather.get_lowest_temperature(\"today\", \"Seoul\"))",
    "get_city_weather_data_exampleDesc": "[시작하기]버튼을 클릭하면 오브젝트가 오늘 서울의 최저기온을 말합니다.​",
    "get_current_city_weather_data_desc": "현재 B지역의 A 날씨 정보값을 의미합니다.",
    "get_current_city_weather_data_elements": "A-- 아래 선택지 중 하나<br>①    \"Seoul\" : 서울<br>②    \"Gangwon-do\" : 강원<br>③    \"Gyeonggi-do\" : 경기<br>④    \"Gyeongsangnam-do\" : 경남<br>⑤    \"Gyeongsangbuk-do\" : 경북<br>⑥    \"Gwangju\" : 광주<br>⑦    \"Daegu\" : 대구<br>⑧    \"Daejeon\" : 대전<br>⑨    \"Busan\" : 부산<br>⑩    \"Sejong\" : 세종<br>⑪    \"Ulsan\" : 울산<br>⑫    \"Incheon\" : 인천<br>⑬    \"Jeollanam-do\" : 전남<br>⑭    \"Jeollabuk-do\" : 전북<br>⑮    \"Jeju\" : 제주<br>Ⓐ \"Chungcheongnam-do\" : 충남<br>Ⓑ \"Chungcheongbuk-do\": 충북%nextB-- 아래 선택지 중 하나<br>①    \"temperature\" : 기온<br>②    \"concentration of fine dust\" : 미세먼지농도",
    "get_current_city_weather_data_exampleCode": "def when_start():\n    Entry.print(Weather.get_current_temperature(\"Seoul\"))",
    "get_current_city_weather_data_exampleDesc": "[시작하기]버튼을 클릭하면 오브젝트가 현재 서울의 기온을 말합니다.",
    "get_today_city_temperature_desc": "오늘 A지역의 B 시간대 기온 정보값을 의미합니다.",
    "get_today_city_temperature_elements": "A-- 아래 선택지 중 하나<br>①    \"Seoul\" : 서울<br>②    \"Gangwon-do\" : 강원<br>③    \"Gyeonggi-do\" : 경기<br>④    \"Gyeongsangnam-do\" : 경남<br>⑤    \"Gyeongsangbuk-do\" : 경북<br>⑥    \"Gwangju\" : 광주<br>⑦    \"Daegu\" : 대구<br>⑧    \"Daejeon\" : 대전<br>⑨    \"Busan\" : 부산<br>⑩    \"Sejong\" : 세종<br>⑪    \"Ulsan\" : 울산<br>⑫    \"Incheon\" : 인천<br>⑬    \"Jeollanam-do\" : 전남<br>⑭    \"Jeollabuk-do\" : 전북<br>⑮    \"Jeju\" : 제주<br>Ⓐ \"Chungcheongnam-do\" : 충남<br>Ⓑ \"Chungcheongbuk-do\": 충북%nextB-- 아래 선택지 중 하나<br>①    \"00\" : 당일 00시 측정된 기온값<br>②    \"03\" : 당일 03시 측정된 기온값<br>③    \"06\" : 당일 06시 측정된 기온값<br>④    \"09\" : 당일 09시 측정된 기온값<br>⑤    \"12\" : 당일 12시 측정된 기온값<br>⑥    \"15\" : 당일 15시 측정된 기온값<br>⑦    \"18\" : 당일 18시 측정된 기온값<br>⑧    \"21\" : 당일 21시 측정된 기온값",
    "get_today_city_temperature_exampleCode": "def when_start():\n    Entry.print(Weather.get_today_city_temperature(\"Seoul\", 00))",
    "get_today_city_temperature_exampleDesc": "[시작하기]버튼을 클릭하면 오브젝트가 오늘 서울의 00시 기온을 말합니다.​"
};
Lang.Painter = {
    "select_cut": "点線の四角形に沿って切り取ることができます。",
    "thickness_of_eraser": "消しゴムの太さ",
    "font": "フォント",
    "font_color": "文字の色",
    "outline_color": "輪郭線の色",
    "outline_thickness": "枠線の太さ",
    "fill_color": "塗りつぶしの色",
    "inversion": "反転",
    "font_size": "サイズ",
    "font_family": "スタイル",
    "fullscreen": "全画面",
    "exit_fullscreen": "全画面を終了",
    "picture_import": "模様インポート",
    "edit_way": "編集方法",
    "line": "直線",
    "vertex": "頂点",
    "bitmap": "ビットマップ",
    "vector": "ベクター",
    "forward": "前に",
    "backward": "後ろに",
    "front": "一番前に",
    "back": "一番後ろに",
    "group": "ｸﾞﾙｰﾌﾟ",
    "ungroup": "ｸﾞﾙｰﾌﾟ 解除",
    "copy_picture": "コピー",
    "delete_picture": "削除",
    "cut_picture": "切り取り",
    "paste_picture": "貼り付け",
    "remove_all": "全て削除",
    "new_picture": "新しい図",
    "edit": "編集",
    "picture_size": "サイズ",
    "picture_rotation": "回転",
    "thickness": "太さ",
    "font_fill": "背景色",
    "painter_file_save": "保存する",
    "painter_file_saveas": "新しい模様で保存",
    "file": "ファイル",
    "Pencil": "ペン",
    "Line": "直線",
    "Path": "形を変える",
    "Pan": "移動",
    "Select": "選択",
    "Rectangle": "四角形",
    "Ellipse": "円",
    "Text": "テキストボックス",
    "Fill": "塗りつぶし",
    "Eraser": "クリア",
    "get_file": "インポート",
    "copy_file": "コピーする"
};
Lang.DataAnalytics = {
    "data_analysis": "データ分析",
    "create_table": "テーブル作成",
    "data": "データ",
    "add_table": "テーブルを追加する",
    "show_chart": "チャート表示",
    "legend": "凡例",
    "dashboard": "要約",
    "table": "テーブル",
    "chart": "チャート",
    "attribute": "列",
    "row": "行",
    "average": "平均",
    "standard_deviation": "標準偏差",
    "maximum": "最大値",
    "minimum": "最小値",
    "median": "中間値",
    "average_explain": "当該する列のすべての値を加えた後、列の個数分で割った値",
    "standard_deviation_explain": "データが平均を中心に、どれくらい広がっているか確認できる値。\n0に近いほど値が平均付近に集中しているという意味",
    "maximum_minimum_explain": "当該する列の最大値と最小値",
    "median_explain": "当該する列のすべての値を大きい順に並べ替えた場合、全体の中央に位置する値",
    "add_row_above": "上に行を追加する",
    "add_row_below": "下に行を追加する",
    "delete_row": "行を削除する",
    "add_property_left": "左に列を追加する",
    "add_property_right": "右に列を追加する",
    "delete_attribute": "列を削除する",
    "data_alert": "数字ではない値が含まれた列は、個数のみ確認できます。",
    "save": "保存する",
    "cancel": "キャンセル",
    "confirm": "確認",
    "attribute_count": "件",
    "row_count": "件",
    "cell_count": "件",
    "count": "件",
    "add_chart_alert": "追加されたチャートがありません。\nチャートを作成してください。",
    "enter_attribute_name": "列の名前を入力してください。(10文字以内)",
    "placeholder_attribute_name": "列の名前",
    "new_attribute": "新しい列",
    "chart_title": "チャートのタイトル",
    "remove_chart": "チャートを削除する",
    "add_chart_first": "チャートを先に作成してください。",
    "bar": "棒グラフ",
    "line": "線グラフ",
    "pie": "円グラフ",
    "scatter": "散布図",
    "select_x_axis": "横軸にするものを選択してください。",
    "x_axis": "横軸",
    "y_axis": "縦軸",
    "select_y_axis": "縦軸にするものを選択してください。",
    "select_y_axis_or_legend": "縦軸、または判例を選択してください。",
    "select_legend": "判例を選択してください。",
    "cell": "間",
    "unable_to_express_chart": "チャートで表現ができません。",
    "edit_attribute_name": "名前を変更する",
    "duplicate_attribute_name_title": "列の名前変更に失敗しました。",
    "duplicate_attribute_name_content": "同じ名前の列がすでにあります。",
    "fail_save_table": "テーブルの保存に失敗しました。",
    "duplicate_table_name_content": "同じ名前のテーブルがすでにあります。",
    "saved_table_title": "保存しました。",
    "saved_table_content": "テーブルとチャートの情報を保存しました。",
    "empty_table_name_content": "テーブルの名前で空白で設定できません。",
    "do_not_delete_row": "行の削除ができません。",
    "rows_cannot_less_one": "テーブルには一個以上の行が必須です。"
};
Lang.SharePolicy = {
    "title": "Entry Project/Post share Guide"
};

Lang.Support = ["ko", "en", "vn", "jp"];
if (typeof exports == "object")
    exports.Lang = Lang;
